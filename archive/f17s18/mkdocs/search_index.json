{
    "docs": [
        {
            "location": "/",
            "text": "Critical Making 3 & 4\n\u00b6\n\n\nNothing is a mistake. There's no win and no fail, there's only make. ~ John Cage\n\n\nCritical Making Studio is the foundational experience enabling students to realize their full potential as creative citizens in BDW Studios. Central to the studio are four courses, Critical Making 1 and 2 (Fall), and Critical Making 3 and 4 (Spring), in which students enter into an experience as transformative and diverse as the participants themselves; all unique threads woven into whole cloth, informing the very fabric of studio culture. The courses aim to ground students in making as a deeply personal practice and ongoing journey in life thereafter, resulting in creative citizens capable of realizing that which they can envision utilizing a combination of their talents, intellect, abilities, creative faculties, and support networks.\n\n\nThe studio experience is made possible by 24 hr, 7 days a week, access to a state-of-the-art rapid prototyping and fabrication lab facility, media editing suite, and studio workspaces that can be transformed into a variety of configurations supporting activities such as artistic performances and special events. Additionally, access to fellow students, faculty, and industry partners provides an unparalleled educational experience and support network for developing transformative solutions spanning a variety of creative industries.\n\n\nInstructor:\n\n\nRJ Duran\n\n\nrj.duran@colorado.edu\n\nSlack: @rjduran. #cmstudio on bdw1301.slack.com\n\nOffice hours by appointment. Feel free to reach out to me via slack or email.\n\n\nSyllabus:\n\n\nCritical Making Studio 3\n\n\nCritical Making Studio 4\n\n\nCourse Resources\n\u00b6\n\n\nThis website is the primary resource for all critical making studio courses. Most of the resources used in the courses are divided up into sections that can be found on the left sidebar. Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you will need to choose some to learn and work with. There are pros and cons to any tool but all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you as long as the work gets done. As we move through the phases of the course feel free to recommend, add, and update the tools we and you find useful on this site. Also, note that anything specific and relevant to an assignment or project will be listed out under the assignment or project deliverables.\n\n\nBe sure to check the \nClass Links\n section weekly as there will surely be different things covered in the two courses. The topics of in class discussion will be unique and emergent as the conversation progresses. As always, if you miss a day or just want to know what went on in a different class, get in touch with me and/or talk with your classmates and share ideas. I will make a point to hit some main points in both courses so everyone is getting most of the same information, perhaps in a slightly different order at times.\n\n\nWorkload\n\u00b6\n\n\n\n\n\n\nThis studio based course is 3 credit hours which means students should expect to dedicate at least 2-3 hours per credit hour. This translates into 6-9 hours per week if you are taking only one studio course (CM3 or CM4) and 12-18 hours per week if you are taking both studio courses (CM3 and CM4). Consider 6 hours a minimum expectation for one studio course or 12 hours for both studio courses and plan accordingly.\n\n\n\n\n\n\nAssignments are due the following week by the start of class. Projects (write ups, etc) are due by 11:59pm on the date specified. \nStudents taking both courses simultaneously (CM3 and CM4) should submit all work on the CM4 due date.\n\n\n\n\n\n\n\n\nPhase 1: Computational Worldmaking\n\u00b6\n\n\n\n\nPhase 1 Question\n\n\nWhat is a world?\n\n\n\n\nXR Continuum\n\u00b6\n\n\nJan 17 / Jan 22\n\n\nJan 15th - MLK Holiday. No Class.\n\n\n\n\nSemester Overview - Syllabus, Schedule, Assignments, Resources\n\n\nXR: X Reality or Cross Reality\n / \nTech Crunch\n\n\nVR - Virtual Reality - This is where we will focus.\n\n\nMR - Mixed Reality\n\n\nAR - Augmented Reality\n\n\netc...\n\n\nExploring the Virtuality Continuum and its terminology\n\n\nThe Ultimate Guide for XR Evangelists\n\n\nUnity Manual: XR\n\n\nGame UX Summit \u201917 | Dylan Urquidi Unity Labs | XR UX: Today & Tomorrow\n\n\n\n\n\n\nPopular VR HMD's \n(Late 2017, Early 2018)\n\n\nHTC Vive\n (Primarily PC Based Development, VR Capable Hardware Required)\n\n\nOculus\n (Cross Platform Development, VR Capable Hardware Required)\n\n\nSamsung Gear VR\n (Cross Platform Development, Mobile Based)\n\n\nGoogle Daydream\n (Cross Platform Development, Mobile Based)\n\n\n\n\n\n\nNext Gen HMD's \n(Trends: Increased Resolution and Performance, Portable, Wireless, Untethered, App Ecosystems)\n\n\nOccipital Bridge\n \n(Smartphone powered HMD with spatial tracking)\n\n\nVive Pro\n - \nJust announced at CES 2018\n\n\nOculus Go\n / \nMi VR Standalone (Xiaomi)\n \n(Cheap, Smartphone Powered, Social VR)\n\n\nDaydream StandloneVR\n\n\nMagic Leap One (Creator Edition)\n / \nVerge\n, \nRolling Stone\n - Shipping early 2018\n\n\n\n\n\n\nThe State of VR Hardware, GPU's, and Rendering Technology\n\n\nVR Hardware - Screens, Cameras, Sensors, Computers, Controllers, Cables, Trackers\n\n\nVive Trackers\n        \n\n\nValve 'Knuckles'\n        \n\n\n\n\n\n\nPC = 1, Apple = 0 (\nThe Latest Gaming Laptops from CES 2018\n, \nApple hardware still isn't quite there yet...\n, \nApple External Graphics Development Kit\n)\n\n\nNVIDIA VR Supported GPU's\n    \n\n\nGoodbye Uncanny Valley\n    \n\n\n\n\n\n\n\n\nSome Use Cases\n\n\n\n\nWhy VR? Why do anything with VR?    \n\n\nHypercube\n - Immersive 360 Video\n\n\nWithin\n - Immersive Storytelling\n\n\nSpace VR\n - Put your eyes up in space\n\n\nVR Hospital Operating Room\n\n\nSocial VR\n\n\nSansar\n\n\n\n\n\n\n\n\n\n\n\n\nHTC Vive: Setup and Configuration\n\n\n\n\nDownload and Install Unity\n\n\n\n\nAssignment 1: What is a World?\n\u00b6\n\n\nIn this phase we will focus on learning how to develop Unity applications that run on the HTC Vive. You will be learning how to work with Unity and write scripts to perform a variety of functions and behaviors in the C# programming language. This is merely the technical layer. The \"How\". Since we suspect that all behavior is motivated, there must be motivation for developing new kinds of worlds of a kind or tools that perform a specific function or experiences that offer something we can't acquire any other way.\n\n\nWhat kinds of worlds, tools, or experiences can you imagine and what motivation do you have to create them?\n\n\nLocate \n3\n examples of \n\"worlds\"\n and bring them to class next week to discuss. You may also choose to explore current use cases of VR. How can VR be used to help people with disabilities or other ailments? How might VR be used to improve the wellbeing or quality of life of a certain demographic?\n\n\nDeliverables:\n\n\n\n\nAny kind of media that points at examples of worlds and/or applications of VR. Posted to slack #cmstudio.\n\n\nOptional: A writeup for your blog of your research and thoughts on worlds, worldmaking, and/or VR.\n\n\n\n\nResources\n\n\n\n\nVR Equipment\n\n\nUnity\n\n\nDownload Unity\n\n\nUnity Developer Documentation\n\n\n\n\n\n\nLaptops\n    \n\n\nMaps\n\n\nThe Augmented & Virtual Reality (AR/VR) Stack: 110+ Startups Building The Next Computing Platform\n - March 2017\n\n\nVirtual Reality (VR) Market Ecosystem Map\n - July 2015\n\n\nThe State of VR: CES 2018\n\n\n\n\n\n\nVRLA Conference\n\n\n\n\n\n\nUnity + SteamVR\n\u00b6\n\n\nJan 24 / Jan 29\n\n\nUnity Basics\n\n\n\n\nUnity Interface\n\n\nNavigation\n\n\nHierarchy\n\n\nWindows - Scene, Game\n\n\nConsole\n\n\nInspector\n\n\nCustom Layouts\n\n\nTools - QUERTY\n\n\n\n\n\n\nProject / File Organization\n\n\nAssets Folder\n\n\nIf you delete it in Unity it deletes it from the folder. Careful.\n\n\n.meta files generated by Unity. They need to go with the source file if you move it in the explorer (windows) or finder (MacOS).\n\n\nMake subdirectories to keep it organized\n\n\nEx. Scenes, Scripts, Models, Textures, Prefabs, Physical Materials, Materials\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Objects to a Scene\n\n\nManipulating Objects\n\n\nInspecting Objects\n\n\nNesting Objects - Parents and Children\n\n\n\n\n\n\nWorking with Game Objects\n\n\nAdding Components\n\n\nRigid Body    \n\n\n\n\n\n\nGame Play\n\n\nInit Objects, Compile Scripts, etc\n\n\nChanging parameters in Unity before and during gameplay\n\n\n\n\n\n\nImporting Assets\n\n\nImport your own assets (from CAD package - Rhino, Fusion, Maya, Blender, etc)\n\n\nImport assets from Asset store\n\n\nImport assets you find on the web\n\n\n\n\n\n\nIntro to scripting\n\n\nScripting...What the?\n\n\nWhat's in a script?\n\n\nMonodevelop and Visual Studio\n\n\nMake a GameObject\n\n\nMake a new script and add it as a Component to your new GameObject\n\n\nPrint to the console from your script\n\n\nDebug.Log(\"Hello World!!\");\n\n\n\n\n\n\n\n\n\n\n\n\nUnity + SteamVR\n\n\n\n\nSteamVR Plugin\n - It's easier to import via Asset store within Unity\n\n\nDemo: Build a Unity project and add the SteamVR plugin\n\n\nMake a new Unity project\n\n\nImport plugin SteamVR from asset store\n\n\nAdd a Plane and Sphere to the scene\n\n\nAdd the [CameraRig] and [SteamVR] Prefabs\n\n\nDisable the default Main Camera and Directional Light\n\n\nAdd a Point Light\n\n\nStart adding other objects into a scene\n\n\nHit play and put on the vive\n\n\n\n\n\n\n\n\nA Note about SteamVR Prefabs:\n\n\n[SteamVR]\n handles a few things. It automatically pauses the game when a player opens the system menu and syncs the physics update rate with that of the rendering system. It also handles smoothing of room-scale VR movement.\n\n\n[CameraRig]\n controls the Vive\u2019s headset and controllers.\n\n\n-\n\n\nAssignment 2: Sandbox\n\u00b6\n\n\nBuild a virtual world sandbox in Unity. Think about this as an environment you can play in. Like you did back in kindergarten but in the computer and with a screen strapped to your face. What do you want to put into your world? Boxes? Trees? Dinosaurs? People? Everything? Do any of your creatures make sound? What new techniques did you discover with Unity?\n\n\nDeliverables:\n\n\n\n\nA VR experience running on one of the laptops and vive setups.\n\n\nOptional (but highly recommended): A writeup for your blog of your sandbox environment. Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\n\n\nHow to setup HTC Vive\n  \n\n\nSteamVR Plugin\n - It's easier to import via Asset store within Unity\n\n\nUnity Manual\n\n\nGif Brewery 3\n - Great little screen capture / gif making utility. Record video and save a gif out. I used this to capture gifs shown in the \ncm-vr\n repo.\n\n\n\n\n\n\nC# Scripting: VRTK\n\u00b6\n\n\nJan 31 / Feb 5\n\n\n\n\nC# in Unity (Started last week)\n\n\nScripts!\n\n\nAttaching scripts to GameObjects (ie. Script Components)\n\n\n\n\n\n\nThe C# Language\n\n\nTrigger and Collider Examples\n\n\nLocomotion\n\n\nMovement in Place - Run with your arms\n\n\nTeleportation - Jump from place to place\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\nAssignment 3: Interact with GameObjects\n\u00b6\n\n\nWrite a script that enables you to interact with objects in your virtual world sandbox. Experiment with public variables (parameters) that you can adjust before and during gameplay from the inspector. If your world is large and you need to move around in it you might dig deeper into VRTK and explore teleportation or move in place to get from place to place.\n\n\nDeliverables:\n\n\n\n\nA VR experience running on one of the laptops and vive setups.\n\n\nOptional (but highly recommended): A writeup for your blog of your approach to creating one or more scripts to interact with your GameObject(s). Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\n\n\nVRTK\n\n\nTutorial: How to Setup a VRTK Project w/ \"Movement in Place\" Locomotion - IN PROGRESS\n\n\n\n\nUnity Scripting References\n\n\n\n\nScripting Manual\n\n\nScripting API\n\n\nScripting Tutorials\n\n\nExecution Order of Event Functions\n\n\n\n\nUnity Scripting Tutorials\n\n\nWatch these and test out everything they show in your sandbox.\n\n\n\n\nConventions and Syntax\n\n\nData Types\n\n\nVariables and Functions\n\n\nVector Maths\n\n\nIf Statements\n\n\nLoops\n\n\nEnabling and Disabling Components\n\n\nActivating GameObjects\n\n\nTranslate and Rotate\n\n\nGetButton and GetKey\n\n\nColliders\n\n\nColliders as Triggers\n\n\n\n\nC# References\n\n\n\n\nThe C# Player's Guide (3rd Edition)\n / \npdf\n\n\nMicrosoft C# Quick Start Tutorials\n\n\n\n\n\n\n\n\n\nC# Scripting: Object Agency\n\u00b6\n\n\nFeb 7 / Feb 12\n\n\n\n\nThe Nature of Code\n (\nProcessing Examples\n)\n\n\nHow do you go about translating code from one language to another?\n\n\nOscillation Examples\n\n\nTeleporter Examples\n\n\nMaking Objects Slide w/ Physic Materials\n\n\n\n\n-\n\n\nAssignment 4: Scripting Behavior\n\u00b6\n\n\nWrite a script that enables your GameObjects to interact with each other or behave in a particular way when triggered or automatically. Experiment with public variables (parameters) that you can adjust before and during gameplay from the inspector. How might you use these variables to manipulate the behavior of your objects?\n\n\nDeliverables:\n\n\n\n\nA VR experience running on one of the laptops and vive setups.\n\n\nOptional (but highly recommended): A writeup for your blog of your approach to creating one or more scripts. Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\nObject Agency\n\n\n\n\nThe Nature of Code\n - Written for Processing (Java) and Javascript (p5.js)\n\n\n\n\nProgramming / Coding\n\n\n\n\nProcessing\n\n\nWhat is Code?\n\n\n\n\n\n\nProject 1: Build a Virtual World\n\u00b6\n\n\nBuild your own virtual world or contribute to building a virtual world with others using Unity, SteamVR, and the HTC Vive. The concept, content, narrative, purpose, and gameplay of your virtual world is entirely up to you and/or your team to develop. You may use any combination of readily available assets such as 3d models, terrains, textures, materials, or prefabs to build out your worlds.\n\n\nIts no small task to build a complete world. Consider working in teams to develop your concepts and execute. Gain experience with different parts of workdmaking by exercising your new skillsets.\n\n\nDeliverables:\n\n\n\n\nA virtual world built in Unity that runs on the windows \nlaptops\n. Zip up the entire project directory and submit it via Dropbox, OneDrive, or Google Drive link. We also have the ability to transfer files over the local network via shared folder. Read the \nserver access\n page to learn how to do this.\n\n\nA URL to the project writeup posted on your blog. If you worked in groups, everyone needs to submit their own writeup for the project documenting their contributions to the project. It would probably be good to include links to your team mates writeup's in your writeup. Posted to slack #cmstudio.\n\n\n\n\nCM4: Due Feb 14\n\n\nCM3: Due Feb 19\n\n\n\n\n\n\n\nPhase 2: Web Development\n\u00b6\n\n\n\n\nPhase 2 Question\n\n\nWhat is the Web?\n\n\n\n\n\n\nTip\n\n\nRemember to look at the \nDevelopment\n section often. It contains a variety of tools and learning resources beyond what we will cover in class. Many of the links in this phase will be to sections of the Development Tools page.  \n\n\n\n\nFundamentals\n\u00b6\n\n\nFeb 21 / Feb 26\n\n\n\n\nWhy the Web?\n\n\nWhy do anything with the technologies of the Internet? What is the point of using these technologies?\n\n\n\n\nThe big idea: The purpose of building websites and web applications is to make an idea accessible to one or more people through the Internet.\n\n\nAbout this phase:\n\n\nThe majority of this phase will be about current web development paradigms and practices -- getting comfortable with programming for the web, learning how to use web development tools and workflows to solve problems, and building a personal practice around using these technologies for projects.  \n\n\nIf you are curious about the history of electronics, computers, computer science, programming, and the Internet, check out the \nHistories\n section. I strongly advise you to start getting familiar with the various histories and technological underpinnings of the technologies you use every day. These resources are meant to work through at your own speed and as you begin to ask deeper questions about why something works and how something works.\n\n\nIndustry\n\n\n\n\nWhat is web development in 2018?\n\n\nWhat does a web developer do?\n\n\nHow do you develop web development skills?\n\n\n\n\nGood Reads\n\n\nRead through each one. Click on the links. Read about the tech. Take a breath. Begin to understand how things connect. Don't get overwhelmed. Make a list of the technologies you read about. Try some of them out in your sandbox.\n\n\n\n\nFront End, Back End, Full Stack\u2014What Does it All Mean?\n\n\nFront-End vs Back-End vs Full-Stack on Udacity\n\n\nA Guide to Becoming a Full-Stack Developer in 2017\n - If you only read one of these, read this one.\n\n\nHow it feels to learn JavaScript in 2016\n - Read through this and see if you can begin to make sense of the current development ecosystem. (Note: Its complex and a little bit insane but this guy makes a good read of it.)\n\n\n\n\nStacks\n\n\n\n\nFront-End = HTML, CSS, Javascript, Design, Interactivity, Responsive\n\n\nBack-End = Ruby, Python, PHP, Node, MySQL, PostgreSQL, MongoDB, Dev Ops\n\n\nFull-Stack = Front-End + Back-End + DevOps + Design   \n\n\n\n\nDevelopment Environment\n\n\nLets jump into it. Tools, tools and more tools. Working with web technologies requires constant learning of programming languages, tools, and workflows. The only constant is change. Especially to existing and widely used code bases (ie. anything open source). Never stop learning. Keep practicing.\n\n\n\n\nAtom\n\n\nAtom Packages\n\n\nAtom Flight Manual\n\n\nMy Atom Setup\n\n\n\n\n\n\nTerminal\n\n\nHow I use terminal (themes, .bash_profile, etc)\n\n\nLearning Terminal\n\n\n\n\n\n\nGit\n / \nGithub\n\n\nlocalhost\n\n\nLocalhost options\n. Also, look at localhost notes below for \nassignment 5\n.\n\n\n\n\n\n\nHomebrew\n\n\nChrome Browser\n\n\nChrome Dev Tools (Inspector for debugging)\n\n\n\n\n\n\nStackoverflow\n - Community. At some point you will use this. Its a great place to ask good questions and answer things you know about.\n\n\nDev Ops 101    \n\n\nDomains\n (Registrar)\n\n\nHosting\n (PaaS / Servers)\n\n\nHeroku\n\n\nAWS\n\n\n\n\n\n\nFTP\n, SCP, SSH\n\n\n\n\n\n\n\n\nLanguages\n\n\nIn this phase we won't be explicitly be working through tutorials for each language but we will use each language at varying levels of depth. In the resources here you can find some learning pathways for building skills with these tools. Make time to read through the basics of all the languages and try things out. Most importantly, seek to apply the skills you are learning towards projects.\n\n\n\n\nHTML\n / \nLearning HTML & CSS\n\n\nCSS\n / \nLearning HTML & CSS\n\n\nJavascript\n / \nLearning Javascript\n\n\n\n\nInteresting Things\n\n\n\n\nCSS Design Awards\n - Some of the best front end design out there\n\n\nUndev Studio: CSS Design Awards WOTY 2016\n\n\n\n\n\n\nCreative Coding for the Web\n\n\nA-Frame (WebVR)\n - WebVR Framework\n\n\nSupermedium\n - Immersive VR Browser (Build for WebVR)\n\n\nGUI Tools Based on A-Frame\n\n\n\n\n\n\nLiquidfun\n - 2D physics engine for games\n\n\nCreating Usability with Motion: The UX in Motion Manifesto\n\n\nUX In Motion\n\n\n\n\n\n\nUeno The Interview\n\n\n\n\n-\n\n\nAssignment 5: Build a Sandbox\n\u00b6\n\n\nBuild a local development (sandbox) environment for experimenting with HTML, CSS, and Javascript. This means you have a kind of local workspace similar to what runs on a server in a rack somewhere in the world. This environment can be as simple (a folder or git repo with boilerplate code) or elaborate (an environment similar to code sharing sandboxes) as you want to make it.\n\n\nNote: MacOS provides a default Sites folder to host fully functional websites out of. The Sites folder is located in your \nusername\n directory. You may also consider setting up a specific working directory for all programming projects (For Example, \nusername/code\n). This directory then becomes your goto location for anything having to do with code, programming, cloning repos from github, experimenting with new tools and software, and more. This is precisely how I organize my system. I rarely use the Sites folder.\n\n\nWhat is the purpose of this?\n\n\nTo become familiar with the file types, languages, and how they work together. At a fundamental level this approach to experimentation establishes good development practices and efficient workflows. It also supports hands-on learning, which is the only way to improve as a programmer. As a programmer you want to be in control of your code, tools, workflow, and system. \nDon't let the computer control you.\n\n\nDeliverables:\n\n\n\n\nA 1 min video screen capture demonstrating your sandbox environment and system folder structure.\n\n\nOptional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\nExamples of Sandbox-like / Code Sharing Environments\n\n\n\n\nCodepen\n - HTML, CSS, JS\n\n\nJSFiddle\n - HTML, CSS, JS\n\n\nScratchpad (HTML/JS)\n\n\nJS2Coffee\n - JS, Coffeescript\n\n\nCodeSandbox\n - React, Angular, Vue, Preact, Svelte\n\n\nJSBin\n - JS\n\n\nPastebin\n\n\nJavascript Sandbox\n - JS\n\n\nKixx Demos\n\n\nCSS Desk\n - CSS\n\n\n\n\nSetting up a Localhost\n\n\nThere are several ways to work with a local web server. Some are simpler than others to setup and configure. Its mostly a matter of personal preference and project preference which local web server option you use. You can refer to the \ncm-code/live-servers\n repo for simple examples.\n\n\n\n\natom-live-server\n - A simple development server package for Atom. Launch from Atom (Packages > atom-live-server).\n\n\nnpm live-server\n - Requires Node.js (which we will go over next week)\n\n\nSetting up a local web server on a Mac\n\n\nHow do I install XAMPP for Mac OS X?\n\n\n\n\n\n\nWorkflow\n\u00b6\n\n\nFeb 28 / Mar 5\n\n\n\n\nTerminal Commands Review\n\n\nTerminal Cheat Sheets\n\n\n\n\n\n\nSandboxes Review\n\n\nServer Architecture\n\n\nLAMP Stack\n\n\nHow Web Servers Work\n\n\n\n\n\n\nJSON\n\n\nWhat is JSON?\n\n\n\n\n\n\nbash terminal configuration (setting up aliases, reloading .bash_profile)\n\n\nbash scripting demo\n\n\n\n\n\n\nVI (working with VI, command mode, insert mode)\n\n\nVI Cheat Sheet\n\n\n\n\n\n\nNode.js\n / \nNVM\n - A tool for managing multiple version of Node.js\n\n\nInstalling Node\n\n\n\n\n\n\nNPM\n - Node Package Manager (Installed with Node.js)\n\n\nHow to Prevent Permissions Errors (when installing npm modules globally)\n\n\n\n\n\n\nExamples\n\n\nweb-dev examples\n\n\nhello-npm examples\n\n\nhello-budo examples\n\n\n\n\n\n\nHTTP: The Protocol Every Web Developer Must Know\n\n\n\n\n-\n\n\nAssignment 6: Play in Your Sandbox\n\u00b6\n\n\nYou now have a local development (sandbox) environment to experiment with HTML, CSS, and JS. You (hopefully) have a better handle on the terminal command line. If you feel you need more practice with this, look at the \nlearning terminal\n section for some guidance. You also (hopefully) now have a better understanding of npm and how it fits into a modern web dev workflow. If you need more practice with this tool, look at the \nhello-npm\n examples in the git repo. Perhaps you are using atom-live-server or npm's live-server module to manage your local server for rapid prototyping. If you need more practice with either of these tools, look at the \ncm-code/live-server\n examples. Maybe you are using \nbrowserify\n or \nbudo\n to build your projects and iterate quickly. Remember that these tools enable bundling javascript and live reloading similar to the live-server tools. Regardless of your workflow, the greater question is, what do you want to make? What are your curious to make?\n\n\nBuild \n1-3 prototypes\n in your sandbox using HTML, CSS, and JS to the best of your abilities. Think about web designs that inspire you or you are drawn to understand how to build them. Use the Chrome Dev Tools (View > Developer > Developer Tools) to inspect how these exemplary websites are constructed. Look at the css and js files loaded then Google them to learn more. Other possible projects could be as simple as a HTML/CSS webpages for experimenting with styles, layout, colors, fonts, and positioning or more complex pages that include interactivity using helper libraries such as jQuery. You may also consider using a front end framework such as \nbootstrap\n styles and javascript features to build pages. You may also want to view and interact with your localhost server prototypes on other devices using ngrok. Check out the \nhello-ngrok example\n to learn more.\n\n\nDeliverables:\n\n\n\n\nA 1-2 min video screen capture demonstrating your sandbox environment and 1-3 prototypes. Talk about your workflow, your code, how you organized your project files, what your prototypes do, and what you learned from the process.\n\n\nOptional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\n\n\nLearning Terminal\n\n\nLearning HTML/CSS\n\n\nLearning JS\n\n\nLearning Node\n - We've only really covered the basics of npm and have not even scratched the surface of Node yet.\n\n\nExamples\n\n\nlive-server examples\n\n\nweb-dev examples\n\n\nhello-npm examples\n\n\nhello-budo examples\n\n\n\n\n\n\n\n\n\n\nLibraries & Frameworks\n\u00b6\n\n\nMar 7 / Mar 12\n\n\n\n\nHow does one choose which library or framework to learn?\n\n\nThere are many out there. It's best to make choices based on the project goals. The reason there are so many options is because people are constantly inventing new tools to solve problems. Over time the tools being used begin to gain popularity based on the number of users, development cycles, stability, and relevance. Keep in mind that there will ALWAYS be new tools and it's best to have an understanding of whats available while knowing a few tools really well. As such, there is always more to explore.\n\n\n\n\n\n\nTop JavaScript Frameworks & Topics to Learn in 2017\n        \n\n\nNode.js\n\n\nExpress\n - Web Application Framework for Node.js\n\n\nMongoDB\n - Javascript based database that works with Express and Node\n\n\nReact\n - A JavaScript library for building user interfaces\n\n\np5.js\n - A javascript based version of Processing\n\n\nthree.js\n - A javascript based 3d webgl framework\n\n\nA-Frame\n / \nLearning WebVR\n\n\nD3.js\n - A JavaScript library for manipulating documents based on data\n\n\nBootstrap\n - Twitter's front end framework\n\n\nMaterial\n - Google's front end framework\n\n\n\n\n\n\nProject 2: Build a Web App with a Framework or Library\n\u00b6\n\n\nChoose one or more libraries or frameworks to build a project with. Most of the tools listed above have getting started documentation that should be relatively straightforward to follow to get going. Begin to understand the way you integrate one or more of the libraries or frameworks into a project or begin a new project with it. How do you prototype with these tools to construct a functional web application? What's your approach? How do you use these tools with your current development workflow?\n\n\nDeliverables:\n\n\n\n\nA 2-3 min video screen capture demonstrating your project. Talk about your workflow, your code, the chosen libraries/frameworks, how you organized your project files, what your project is and does, and what you learned from the process.\n\n\nA link to the git repo that contains your project. You need to include a \nREADME.md\n file with instructions for its use. Look at examples of README files or tutorials about how to write a good README file. A typical project will likely have at least an index.html file and a README.md file. Any other files or folders will depend on the frameworks, css, and js used. The purpose of this is to improve your ability to organize a project and its files.\n\n\nA writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nResources\n\n\n\n\nHow to write a great README for your GitHub project\n - These are only examples. Not all projects need every detail in the readme as described. The contents of a readme really depend on the type of project and audience. In general, its good to enable someone else to download and run your code if you are sharing it to github.\n\n\nAwesome README\n - A massive list of README examples and resources.\n\n\nMarkdown Cheatsheet\n\n\n\n\nCM4: Due Mar 14\n\n\nCM3: Due Mar 19\n\n\n\n\nFinal Project Proposal\n\u00b6\n\n\nWrite a final project proposal that builds upon your interests in Critical Making and explores one or more technologies you explored throughout the Spring semester. Spend some time reflecting on the tools and technologies you enjoyed learning about and wish to dig deeper into. Think about the questions that came up then and now as you are exploring creative possibilities using the technologies of your choice. Ask yourself, what do I want to create and what tools do I want/need to use to realize my vision? What challenges do I anticipate I will need to work through? What problems might I want to solve? And for what purpose? Exercise your creative muscles by creating sketches, drawings, maps, renderings, animations, prototypes, videos, etc of your original concept. Make use of reference materials that inspire you and fuel your creative drive.\n\n\nPossible Project Areas:\n\n\n\n\nVR (Unity / WebVR) Experiences\n\n\nWorldmaking (Computational Creativity)\n\n\nWeb Applications\n\n\nDigital - Physical Experiences\n\n\nEnchanted Objects\n\n\nIoT Devices and Systems\n\n\nDrones\n\n\nMagic Mirror Platform\n\n\nPhysical Computing\n\n\nInteractive Experiences\n\n\n\n\nThis is only a suggestion based on some of the concepts we have covered this semester (and a few from last fall). You are free to propose any kind of project you think you can accomplish in the given the timeframe.\n\n\nThis project can be completed as individuals or in a group. Each person's contributions to the project need to be explicitly stated in the proposal. I (highly) encourage everyone to share ideas and work together to assist each other as you develop your projects. This phase is much shorter (by about a week) than the others which means you need to be already making progress on your final project throughout Phase 3.\n\n\nDeliverable:\n\n\nA final project proposal \nposted to your blog\n. It should include the following:\n\n\n\n\nProject Title\n\n\nProject Summary ~ 1 page max (ie What is it? What problem(s) are you solving? What will it do? How will it work?)\n\n\nKey components of your project (ie. Resources, skills, and technology needed to realize it ~ HTC VIVE, Web Technologies, Javascript Libraries, Raspberry PI, Materials, CAD, 3d Printing, Bantam Mill, Processing, Arduino, etc)\n\n\nA brief timeline. If you need to order parts for your project, what do you need and when? If you need to order something, decide on it early and plan ahead for shipping times etc.\n\n\n\n\nFinal Project Proposals Due Mar 21 by 11:59 pm (Before Spring Break). I will review them and send questions and comments to you by the end of Spring Break.\n\n\nNote there are about 2 weeks from the due date of Project 4 until Final Project Presentations on May 2nd, 2018.\n\n\n\n\n\n\n\nSpring Break (No Class)\n\u00b6\n\n\nMar 26 - Mar 30\n\n\n\n\nPhase 3: Enchanted Objects\n\u00b6\n\n\n\n\nPhase 3 Question\n\n\nWhat is an Enchanted Object?\n\n\n\n\n\n\nTip\n\n\nRemember to look at the \nPhysical Computing\n and \nDevelopment\n sections often. They contain a variety of tools and learning resources beyond what we will cover in class. Many of the links in this phase will be to sections of these pages.\n\n\n\n\nThis phase is inspired by the book \nEnchanted Objects: Innovation, Design, and the Future of Technology by David Rose\n. Through this phase you will explore the merger of digital and physical materials transformed into intelligent systems, common objects, immersive experiences, and products. We will be exploring accessible IoT platforms such as Raspberry Pi and Arduino combined with open source software, frameworks, and libraries such as Node.js. The focus of this phase is on integration - platforms, deployment, connectivity. How do all these technologies work together to support the realization of \"enchanted objects\".\n\n\nPlatforms\n\u00b6\n\n\nMar 21 / Apr 2\n\n\nNote: CM4 we will start talking about this stuff on Mar 21, the week before spring break. CM3, I suggest reviewing the information early just to know where we will be going right after spring break.\n\n\nFor this phase we will be using Raspberry Pi and Arduino boards as the IoT platforms for building Enchanted Objects. I recommend everyone purchase their own Raspberry Pi device and 16 or 32GB \nMicroSD card(s)\n. We do have a few Raspberry Pi boards in the shop but are low on MicroSD cards. We have plenty of Arduino boards to use so no need to purchase one unless you want to own one.\n\n\nYou can pick up a Raspberry Pi 3 on \nAmazon\n or \nMicrocenter\n (Retail Store in Denver). If you want a more complete starter kit you can find similar systems on Amazon, \nSparkfun\n, and other online retailers. Packages with more components will typically cost more. Note that the \nRaspberry Pi 3 B+\n was just released (on Pi Day 3/14/2018) and it costs a bit more than its predecessor (3 Model B). It doesn't matter if you have this new version or the slightly older version.\n\n\nTypical Raspberry Pi Setup\n\n\n\n\nRaspberry Pi 3 ~ $35\n\n\n16, 32, or 64 GB MicroSD Card (16 GB is a good size to start with) ~ $10 for 16 GB\n\n\nHDMI Cable (To plug in display) ~ $6\n\n\nUSB Keyboard ~ $5-15\n\n\nEst Total: $66\n\n\n\n\nTerminal / Command Line (Review)\n\n\n\n\nLearning Terminal\n\n\nssh, vi, scp (Transferring Data to/from Raspberry Pi's)\n\n\n\n\nHardware\n\n\n\n\nRaspberryPi\n\n\nRaspberry Pi 3 Model B\n / \nAmazon\n\n\nRaspberry Pi 3 Model B+\n / \nAmazon\n (Just released on 3/14/2018)\n\n\nWorkshop: Setup your own Raspberry Pi\n\n\nDownload Raspbian (Lite)\n\n\nFormat and prepare MicroSD card\n\n\nSetup RPi (w/ Command Line Interface. No GUI.)\n\n\nAccess Rpi via SSH\n\n\n\n\n\n\n\n\n\n\nArduino\n\n\nLearning Arduino\n\n\n\n\n\n\n\n\nConnectivity\n\n\n\n\nNode\n\n\nLearning Node\n\n\nDemo: Node Applications\n\n\n\n\n\n\nRaspberry Pi + Arduino = Super Combo!\n\n\nDemo: Node Application running on Raspberry Pi (Application uses Node, Express, Websockets, and Johnny Five)\n\n\n\n\n\n\n\n\nPhysical Computing (Review)\n\n\n\n\nLearning Electronics\n\n\nInput/Output Devices\n\n\n\n\n-\n\n\nAssignment 7: Build and Deploy a Web Application on Raspberry Pi\n\u00b6\n\n\nBuild a web application to deploy on your Raspberry Pi board. If you are designing and building an \"enchanted object\", what will make the object \"enchanted\"? What will the user experience be like? How will you go about constructing your application? What framework(s) or libraries will you use? How will someone interact with your system / object?\n\n\nSketch out some possibilities for your application and how it works on paper first. Think about the components of your application and system and how they connect. What types of input devices will you use? What output devices will you use?\n\n\nPossible directions could be a simple webpage running on a Raspberry Pi that displays useful sensor data or a system that makes LEDs flash when driven by user input via laptop or mobile device. Perhaps you have a device that relays its position and orientation to a webpage and alters the background color in real-time. The possibilities are endless!\n\n\nPrototype both locally (on your laptop localhost) and on a Raspberry Pi (via ssh). Deploy on a Raspberry Pi and access via Wifi or ethernet cable.\n\n\nDeliverables:\n\n\n\n\nA 1-2 min video screen capture demonstrating your system. Talk about your overall concept, workflow, code, how you organized your project files, what your prototypes do, and what you learned from the process.\n\n\nOptional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.\n\n\nOptional (but highly recommended): A github repo that contains your project and instructions for others to run it in the README.md.\n\n\n\n\nResources\n\n\n\n\ncm-code\n\n\ncm-code/rpi\n (Raspberry Pi)\n\n\nhello-node\n (Node Only)\n\n\nhello-node-rpi\n (Node + Raspberry Pi)\n\n\nhello-express\n (Node + Express)\n\n\nhello-johnny-five\n (Node + Express + Johnny Five + Websockets)\n\n\nhello-mongo\n (Node + MongoDB)\n\n\n\n\n\n\nBuilding Systems\n\u00b6\n\n\nApr 4 / Apr 9\n\n\nConnectivity Cont.\n\n\n\n\nNode.js + Express\n\n\nDemo: Express Applications\n\n\n\n\n\n\nJohnny-Five\n\n\nDemo: Setup and Use\n\n\n\n\n\n\nWebsockets (aka socket.io)\n\n\nDemo: Setup and Use\n\n\n\n\n\n\n\n\nIntegrations\n\n\n\n\nWeb Application + VR (Unity)\n\n\nWebVR (A-Frame) + Node.js + Express\n\n\nPhysical (Sensors) + Digital (A-Frame or Unity)\n\n\n\n\nData\n\n\n\n\nNode.js + Express + MongoDB (Database)\n\n\nDemo: Working with MongoDB\n\n\nCRUD\n\n\nMongoDB\n\n\nMongoDB Docs\n\n\n\n\n\n\n\n\n\n\n\n\nDeployment (Remote)\n\n\n\n\nServers (VPS)\n\n\nHeroku\n\n\nLinode\n\n\nDigital Ocean\n\n\nAWS EC2\n\n\n\n\n\n\nProcess Managers, etc\n\n\nPM2\n\n\n\n\n\n\n\n\nInterfaces\n\n\n\n\nAdmin Panel Themes\n\n\nvudash\n\n\n\n\n-\n\n\nResources\n\n\n\n\nhello-johnny-five\n (Node + Express + Johnny Five + Websockets)\n\n\nhello-p5\n (Node + p5.js)\n\n\nhello-aframe\n (Node + AFrame)\n\n\nhello-unity\n (Node + Unity)\n\n\n\n\n\n\nProject 4: Build an Enchanted Object\n\u00b6\n\n\nBuild a visual or physical object or experience that connects with the digital world. This might be an IoT connected device that senses its environment, human interaction, or the presence of other devices. Maybe your project connects the physical and virtual through connected hardware such as Raspberry Pi and Arduino.\n\n\nNote: To build an enchanted object doesn't imply or require the use of all these technologies. It can make use of any combination of hardware and software built from scratch or configured from examples. The objective is to work creatively to build an object or experience that explores connected systems that enable a sense of \"enchantment\" one has with an object, experience, or product at any fidelity.\n\n\n\n\nWhat makes your object or objects enchanted? Shape, color, size, material, a combo?\n\n\nWhat kinds of inputs / outputs does your system use?\n\n\nWhat kind of hardware are you using?\n\n\nWhat software / platforms / frameworks are you using?\n\n\n\n\nDeliverables:\n\n\n\n\nA 2-3 min video screen capture demonstrating your project. Talk about your workflow, sketches, code, chosen libraries/frameworks, how you organized your project files, what your project is and does, and what you learned from the process.\n\n\nA link to the git repo that contains any project code. You need to include a brief \nREADME.md\n file with instructions for its use.\n\n\nA writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.\n\n\n\n\nCM4: Due Apr 11\n\n\nCM3: Due Apr 16\n\n\n\n\n\n\n\nPhase 4: Final Projects\n\u00b6\n\n\n\n\nInfo\n\n\nThis phase is much shorter (by about a week) than the others which means you need to be already making progress on your final project throughout Phase 3. Perhaps you use your Phase 3 project as a stepping stone towards your Final project.\n\n\n\n\nOpen Studio\n\u00b6\n\n\nApr 18 / Apr 23\n\n\n\n\nOpen Studio\n\u00b6\n\n\nApr 25 / Apr 30\n\n\n\n\nFinal Project Presentations\n\u00b6\n\n\nMay 2nd @ 6:30pm\n\nCMCI STUDIO (1301 Walnut St)\n\nBoth CM3 and CM4 will present their final projects during scheduled class time. All are welcome.\n\n\nProjects\n\n\n\n\nEffugium Escape Room\n \nby Jim Murphy & Meredith Fong\n\n\nForum - the stories you need to hear \nby Nick Balderston & Matt Isola\n\n\nSeasons (VR Experience) \nby Nikki Cavalier\n\n\nEnchanted Ovulation \nby Sarah Safranski & Rebekah Sosa\n\n\n\n\nEveryone will present their work starting at 6:30pm. Come prepared with a 5-10 min presentation / demo. Be sure to include the project/work title, problem statement, inspirations, previous work, and lessons learned.\n\n\nFollowing presentations we will celebrate the semester with food and drink at a local establishment.",
            "title": "Spring 2018"
        },
        {
            "location": "/#critical-making-3-4",
            "text": "Nothing is a mistake. There's no win and no fail, there's only make. ~ John Cage  Critical Making Studio is the foundational experience enabling students to realize their full potential as creative citizens in BDW Studios. Central to the studio are four courses, Critical Making 1 and 2 (Fall), and Critical Making 3 and 4 (Spring), in which students enter into an experience as transformative and diverse as the participants themselves; all unique threads woven into whole cloth, informing the very fabric of studio culture. The courses aim to ground students in making as a deeply personal practice and ongoing journey in life thereafter, resulting in creative citizens capable of realizing that which they can envision utilizing a combination of their talents, intellect, abilities, creative faculties, and support networks.  The studio experience is made possible by 24 hr, 7 days a week, access to a state-of-the-art rapid prototyping and fabrication lab facility, media editing suite, and studio workspaces that can be transformed into a variety of configurations supporting activities such as artistic performances and special events. Additionally, access to fellow students, faculty, and industry partners provides an unparalleled educational experience and support network for developing transformative solutions spanning a variety of creative industries.  Instructor:  RJ Duran  rj.duran@colorado.edu \nSlack: @rjduran. #cmstudio on bdw1301.slack.com \nOffice hours by appointment. Feel free to reach out to me via slack or email.  Syllabus:  Critical Making Studio 3  Critical Making Studio 4",
            "title": "Critical Making 3 &amp; 4"
        },
        {
            "location": "/#course-resources",
            "text": "This website is the primary resource for all critical making studio courses. Most of the resources used in the courses are divided up into sections that can be found on the left sidebar. Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you will need to choose some to learn and work with. There are pros and cons to any tool but all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you as long as the work gets done. As we move through the phases of the course feel free to recommend, add, and update the tools we and you find useful on this site. Also, note that anything specific and relevant to an assignment or project will be listed out under the assignment or project deliverables.  Be sure to check the  Class Links  section weekly as there will surely be different things covered in the two courses. The topics of in class discussion will be unique and emergent as the conversation progresses. As always, if you miss a day or just want to know what went on in a different class, get in touch with me and/or talk with your classmates and share ideas. I will make a point to hit some main points in both courses so everyone is getting most of the same information, perhaps in a slightly different order at times.",
            "title": "Course Resources"
        },
        {
            "location": "/#workload",
            "text": "This studio based course is 3 credit hours which means students should expect to dedicate at least 2-3 hours per credit hour. This translates into 6-9 hours per week if you are taking only one studio course (CM3 or CM4) and 12-18 hours per week if you are taking both studio courses (CM3 and CM4). Consider 6 hours a minimum expectation for one studio course or 12 hours for both studio courses and plan accordingly.    Assignments are due the following week by the start of class. Projects (write ups, etc) are due by 11:59pm on the date specified.  Students taking both courses simultaneously (CM3 and CM4) should submit all work on the CM4 due date.",
            "title": "Workload"
        },
        {
            "location": "/#phase-1-computational-worldmaking",
            "text": "Phase 1 Question  What is a world?",
            "title": "Phase 1: Computational Worldmaking"
        },
        {
            "location": "/#xr-continuum",
            "text": "Jan 17 / Jan 22  Jan 15th - MLK Holiday. No Class.   Semester Overview - Syllabus, Schedule, Assignments, Resources  XR: X Reality or Cross Reality  /  Tech Crunch  VR - Virtual Reality - This is where we will focus.  MR - Mixed Reality  AR - Augmented Reality  etc...  Exploring the Virtuality Continuum and its terminology  The Ultimate Guide for XR Evangelists  Unity Manual: XR  Game UX Summit \u201917 | Dylan Urquidi Unity Labs | XR UX: Today & Tomorrow    Popular VR HMD's  (Late 2017, Early 2018)  HTC Vive  (Primarily PC Based Development, VR Capable Hardware Required)  Oculus  (Cross Platform Development, VR Capable Hardware Required)  Samsung Gear VR  (Cross Platform Development, Mobile Based)  Google Daydream  (Cross Platform Development, Mobile Based)    Next Gen HMD's  (Trends: Increased Resolution and Performance, Portable, Wireless, Untethered, App Ecosystems)  Occipital Bridge   (Smartphone powered HMD with spatial tracking)  Vive Pro  -  Just announced at CES 2018  Oculus Go  /  Mi VR Standalone (Xiaomi)   (Cheap, Smartphone Powered, Social VR)  Daydream StandloneVR  Magic Leap One (Creator Edition)  /  Verge ,  Rolling Stone  - Shipping early 2018    The State of VR Hardware, GPU's, and Rendering Technology  VR Hardware - Screens, Cameras, Sensors, Computers, Controllers, Cables, Trackers  Vive Trackers           Valve 'Knuckles'             PC = 1, Apple = 0 ( The Latest Gaming Laptops from CES 2018 ,  Apple hardware still isn't quite there yet... ,  Apple External Graphics Development Kit )  NVIDIA VR Supported GPU's       Goodbye Uncanny Valley          Some Use Cases   Why VR? Why do anything with VR?      Hypercube  - Immersive 360 Video  Within  - Immersive Storytelling  Space VR  - Put your eyes up in space  VR Hospital Operating Room  Social VR  Sansar       HTC Vive: Setup and Configuration   Download and Install Unity",
            "title": "XR Continuum"
        },
        {
            "location": "/#assignment-1-what-is-a-world",
            "text": "In this phase we will focus on learning how to develop Unity applications that run on the HTC Vive. You will be learning how to work with Unity and write scripts to perform a variety of functions and behaviors in the C# programming language. This is merely the technical layer. The \"How\". Since we suspect that all behavior is motivated, there must be motivation for developing new kinds of worlds of a kind or tools that perform a specific function or experiences that offer something we can't acquire any other way.  What kinds of worlds, tools, or experiences can you imagine and what motivation do you have to create them?  Locate  3  examples of  \"worlds\"  and bring them to class next week to discuss. You may also choose to explore current use cases of VR. How can VR be used to help people with disabilities or other ailments? How might VR be used to improve the wellbeing or quality of life of a certain demographic?  Deliverables:   Any kind of media that points at examples of worlds and/or applications of VR. Posted to slack #cmstudio.  Optional: A writeup for your blog of your research and thoughts on worlds, worldmaking, and/or VR.   Resources   VR Equipment  Unity  Download Unity  Unity Developer Documentation    Laptops       Maps  The Augmented & Virtual Reality (AR/VR) Stack: 110+ Startups Building The Next Computing Platform  - March 2017  Virtual Reality (VR) Market Ecosystem Map  - July 2015  The State of VR: CES 2018    VRLA Conference",
            "title": "Assignment 1: What is a World?"
        },
        {
            "location": "/#unity-steamvr",
            "text": "Jan 24 / Jan 29  Unity Basics   Unity Interface  Navigation  Hierarchy  Windows - Scene, Game  Console  Inspector  Custom Layouts  Tools - QUERTY    Project / File Organization  Assets Folder  If you delete it in Unity it deletes it from the folder. Careful.  .meta files generated by Unity. They need to go with the source file if you move it in the explorer (windows) or finder (MacOS).  Make subdirectories to keep it organized  Ex. Scenes, Scripts, Models, Textures, Prefabs, Physical Materials, Materials        Adding Objects to a Scene  Manipulating Objects  Inspecting Objects  Nesting Objects - Parents and Children    Working with Game Objects  Adding Components  Rigid Body        Game Play  Init Objects, Compile Scripts, etc  Changing parameters in Unity before and during gameplay    Importing Assets  Import your own assets (from CAD package - Rhino, Fusion, Maya, Blender, etc)  Import assets from Asset store  Import assets you find on the web    Intro to scripting  Scripting...What the?  What's in a script?  Monodevelop and Visual Studio  Make a GameObject  Make a new script and add it as a Component to your new GameObject  Print to the console from your script  Debug.Log(\"Hello World!!\");       Unity + SteamVR   SteamVR Plugin  - It's easier to import via Asset store within Unity  Demo: Build a Unity project and add the SteamVR plugin  Make a new Unity project  Import plugin SteamVR from asset store  Add a Plane and Sphere to the scene  Add the [CameraRig] and [SteamVR] Prefabs  Disable the default Main Camera and Directional Light  Add a Point Light  Start adding other objects into a scene  Hit play and put on the vive     A Note about SteamVR Prefabs:  [SteamVR]  handles a few things. It automatically pauses the game when a player opens the system menu and syncs the physics update rate with that of the rendering system. It also handles smoothing of room-scale VR movement.  [CameraRig]  controls the Vive\u2019s headset and controllers.  -",
            "title": "Unity + SteamVR"
        },
        {
            "location": "/#assignment-2-sandbox",
            "text": "Build a virtual world sandbox in Unity. Think about this as an environment you can play in. Like you did back in kindergarten but in the computer and with a screen strapped to your face. What do you want to put into your world? Boxes? Trees? Dinosaurs? People? Everything? Do any of your creatures make sound? What new techniques did you discover with Unity?  Deliverables:   A VR experience running on one of the laptops and vive setups.  Optional (but highly recommended): A writeup for your blog of your sandbox environment. Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.   Resources   How to setup HTC Vive     SteamVR Plugin  - It's easier to import via Asset store within Unity  Unity Manual  Gif Brewery 3  - Great little screen capture / gif making utility. Record video and save a gif out. I used this to capture gifs shown in the  cm-vr  repo.",
            "title": "Assignment 2: Sandbox"
        },
        {
            "location": "/#c-scripting-vrtk",
            "text": "Jan 31 / Feb 5   C# in Unity (Started last week)  Scripts!  Attaching scripts to GameObjects (ie. Script Components)    The C# Language  Trigger and Collider Examples  Locomotion  Movement in Place - Run with your arms  Teleportation - Jump from place to place      -",
            "title": "C# Scripting: VRTK"
        },
        {
            "location": "/#assignment-3-interact-with-gameobjects",
            "text": "Write a script that enables you to interact with objects in your virtual world sandbox. Experiment with public variables (parameters) that you can adjust before and during gameplay from the inspector. If your world is large and you need to move around in it you might dig deeper into VRTK and explore teleportation or move in place to get from place to place.  Deliverables:   A VR experience running on one of the laptops and vive setups.  Optional (but highly recommended): A writeup for your blog of your approach to creating one or more scripts to interact with your GameObject(s). Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.   Resources   VRTK  Tutorial: How to Setup a VRTK Project w/ \"Movement in Place\" Locomotion - IN PROGRESS   Unity Scripting References   Scripting Manual  Scripting API  Scripting Tutorials  Execution Order of Event Functions   Unity Scripting Tutorials  Watch these and test out everything they show in your sandbox.   Conventions and Syntax  Data Types  Variables and Functions  Vector Maths  If Statements  Loops  Enabling and Disabling Components  Activating GameObjects  Translate and Rotate  GetButton and GetKey  Colliders  Colliders as Triggers   C# References   The C# Player's Guide (3rd Edition)  /  pdf  Microsoft C# Quick Start Tutorials",
            "title": "Assignment 3: Interact with GameObjects"
        },
        {
            "location": "/#c-scripting-object-agency",
            "text": "Feb 7 / Feb 12   The Nature of Code  ( Processing Examples )  How do you go about translating code from one language to another?  Oscillation Examples  Teleporter Examples  Making Objects Slide w/ Physic Materials   -",
            "title": "C# Scripting: Object Agency"
        },
        {
            "location": "/#assignment-4-scripting-behavior",
            "text": "Write a script that enables your GameObjects to interact with each other or behave in a particular way when triggered or automatically. Experiment with public variables (parameters) that you can adjust before and during gameplay from the inspector. How might you use these variables to manipulate the behavior of your objects?  Deliverables:   A VR experience running on one of the laptops and vive setups.  Optional (but highly recommended): A writeup for your blog of your approach to creating one or more scripts. Screenshots, video documentation, animated gifs / images help to explain concepts where motion and immersion are the experience being communicated. Share the URL to your blog post on slack #cmstudio.   Resources  Object Agency   The Nature of Code  - Written for Processing (Java) and Javascript (p5.js)   Programming / Coding   Processing  What is Code?",
            "title": "Assignment 4: Scripting Behavior"
        },
        {
            "location": "/#project-1-build-a-virtual-world",
            "text": "Build your own virtual world or contribute to building a virtual world with others using Unity, SteamVR, and the HTC Vive. The concept, content, narrative, purpose, and gameplay of your virtual world is entirely up to you and/or your team to develop. You may use any combination of readily available assets such as 3d models, terrains, textures, materials, or prefabs to build out your worlds.  Its no small task to build a complete world. Consider working in teams to develop your concepts and execute. Gain experience with different parts of workdmaking by exercising your new skillsets.  Deliverables:   A virtual world built in Unity that runs on the windows  laptops . Zip up the entire project directory and submit it via Dropbox, OneDrive, or Google Drive link. We also have the ability to transfer files over the local network via shared folder. Read the  server access  page to learn how to do this.  A URL to the project writeup posted on your blog. If you worked in groups, everyone needs to submit their own writeup for the project documenting their contributions to the project. It would probably be good to include links to your team mates writeup's in your writeup. Posted to slack #cmstudio.   CM4: Due Feb 14  CM3: Due Feb 19",
            "title": "Project 1: Build a Virtual World"
        },
        {
            "location": "/#phase-2-web-development",
            "text": "Phase 2 Question  What is the Web?    Tip  Remember to look at the  Development  section often. It contains a variety of tools and learning resources beyond what we will cover in class. Many of the links in this phase will be to sections of the Development Tools page.",
            "title": "Phase 2: Web Development"
        },
        {
            "location": "/#fundamentals",
            "text": "Feb 21 / Feb 26   Why the Web?  Why do anything with the technologies of the Internet? What is the point of using these technologies?   The big idea: The purpose of building websites and web applications is to make an idea accessible to one or more people through the Internet.  About this phase:  The majority of this phase will be about current web development paradigms and practices -- getting comfortable with programming for the web, learning how to use web development tools and workflows to solve problems, and building a personal practice around using these technologies for projects.    If you are curious about the history of electronics, computers, computer science, programming, and the Internet, check out the  Histories  section. I strongly advise you to start getting familiar with the various histories and technological underpinnings of the technologies you use every day. These resources are meant to work through at your own speed and as you begin to ask deeper questions about why something works and how something works.  Industry   What is web development in 2018?  What does a web developer do?  How do you develop web development skills?   Good Reads  Read through each one. Click on the links. Read about the tech. Take a breath. Begin to understand how things connect. Don't get overwhelmed. Make a list of the technologies you read about. Try some of them out in your sandbox.   Front End, Back End, Full Stack\u2014What Does it All Mean?  Front-End vs Back-End vs Full-Stack on Udacity  A Guide to Becoming a Full-Stack Developer in 2017  - If you only read one of these, read this one.  How it feels to learn JavaScript in 2016  - Read through this and see if you can begin to make sense of the current development ecosystem. (Note: Its complex and a little bit insane but this guy makes a good read of it.)   Stacks   Front-End = HTML, CSS, Javascript, Design, Interactivity, Responsive  Back-End = Ruby, Python, PHP, Node, MySQL, PostgreSQL, MongoDB, Dev Ops  Full-Stack = Front-End + Back-End + DevOps + Design      Development Environment  Lets jump into it. Tools, tools and more tools. Working with web technologies requires constant learning of programming languages, tools, and workflows. The only constant is change. Especially to existing and widely used code bases (ie. anything open source). Never stop learning. Keep practicing.   Atom  Atom Packages  Atom Flight Manual  My Atom Setup    Terminal  How I use terminal (themes, .bash_profile, etc)  Learning Terminal    Git  /  Github  localhost  Localhost options . Also, look at localhost notes below for  assignment 5 .    Homebrew  Chrome Browser  Chrome Dev Tools (Inspector for debugging)    Stackoverflow  - Community. At some point you will use this. Its a great place to ask good questions and answer things you know about.  Dev Ops 101      Domains  (Registrar)  Hosting  (PaaS / Servers)  Heroku  AWS    FTP , SCP, SSH     Languages  In this phase we won't be explicitly be working through tutorials for each language but we will use each language at varying levels of depth. In the resources here you can find some learning pathways for building skills with these tools. Make time to read through the basics of all the languages and try things out. Most importantly, seek to apply the skills you are learning towards projects.   HTML  /  Learning HTML & CSS  CSS  /  Learning HTML & CSS  Javascript  /  Learning Javascript   Interesting Things   CSS Design Awards  - Some of the best front end design out there  Undev Studio: CSS Design Awards WOTY 2016    Creative Coding for the Web  A-Frame (WebVR)  - WebVR Framework  Supermedium  - Immersive VR Browser (Build for WebVR)  GUI Tools Based on A-Frame    Liquidfun  - 2D physics engine for games  Creating Usability with Motion: The UX in Motion Manifesto  UX In Motion    Ueno The Interview   -",
            "title": "Fundamentals"
        },
        {
            "location": "/#assignment-5-build-a-sandbox",
            "text": "Build a local development (sandbox) environment for experimenting with HTML, CSS, and Javascript. This means you have a kind of local workspace similar to what runs on a server in a rack somewhere in the world. This environment can be as simple (a folder or git repo with boilerplate code) or elaborate (an environment similar to code sharing sandboxes) as you want to make it.  Note: MacOS provides a default Sites folder to host fully functional websites out of. The Sites folder is located in your  username  directory. You may also consider setting up a specific working directory for all programming projects (For Example,  username/code ). This directory then becomes your goto location for anything having to do with code, programming, cloning repos from github, experimenting with new tools and software, and more. This is precisely how I organize my system. I rarely use the Sites folder.  What is the purpose of this?  To become familiar with the file types, languages, and how they work together. At a fundamental level this approach to experimentation establishes good development practices and efficient workflows. It also supports hands-on learning, which is the only way to improve as a programmer. As a programmer you want to be in control of your code, tools, workflow, and system.  Don't let the computer control you.  Deliverables:   A 1 min video screen capture demonstrating your sandbox environment and system folder structure.  Optional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.   Resources  Examples of Sandbox-like / Code Sharing Environments   Codepen  - HTML, CSS, JS  JSFiddle  - HTML, CSS, JS  Scratchpad (HTML/JS)  JS2Coffee  - JS, Coffeescript  CodeSandbox  - React, Angular, Vue, Preact, Svelte  JSBin  - JS  Pastebin  Javascript Sandbox  - JS  Kixx Demos  CSS Desk  - CSS   Setting up a Localhost  There are several ways to work with a local web server. Some are simpler than others to setup and configure. Its mostly a matter of personal preference and project preference which local web server option you use. You can refer to the  cm-code/live-servers  repo for simple examples.   atom-live-server  - A simple development server package for Atom. Launch from Atom (Packages > atom-live-server).  npm live-server  - Requires Node.js (which we will go over next week)  Setting up a local web server on a Mac  How do I install XAMPP for Mac OS X?",
            "title": "Assignment 5: Build a Sandbox"
        },
        {
            "location": "/#workflow",
            "text": "Feb 28 / Mar 5   Terminal Commands Review  Terminal Cheat Sheets    Sandboxes Review  Server Architecture  LAMP Stack  How Web Servers Work    JSON  What is JSON?    bash terminal configuration (setting up aliases, reloading .bash_profile)  bash scripting demo    VI (working with VI, command mode, insert mode)  VI Cheat Sheet    Node.js  /  NVM  - A tool for managing multiple version of Node.js  Installing Node    NPM  - Node Package Manager (Installed with Node.js)  How to Prevent Permissions Errors (when installing npm modules globally)    Examples  web-dev examples  hello-npm examples  hello-budo examples    HTTP: The Protocol Every Web Developer Must Know   -",
            "title": "Workflow"
        },
        {
            "location": "/#assignment-6-play-in-your-sandbox",
            "text": "You now have a local development (sandbox) environment to experiment with HTML, CSS, and JS. You (hopefully) have a better handle on the terminal command line. If you feel you need more practice with this, look at the  learning terminal  section for some guidance. You also (hopefully) now have a better understanding of npm and how it fits into a modern web dev workflow. If you need more practice with this tool, look at the  hello-npm  examples in the git repo. Perhaps you are using atom-live-server or npm's live-server module to manage your local server for rapid prototyping. If you need more practice with either of these tools, look at the  cm-code/live-server  examples. Maybe you are using  browserify  or  budo  to build your projects and iterate quickly. Remember that these tools enable bundling javascript and live reloading similar to the live-server tools. Regardless of your workflow, the greater question is, what do you want to make? What are your curious to make?  Build  1-3 prototypes  in your sandbox using HTML, CSS, and JS to the best of your abilities. Think about web designs that inspire you or you are drawn to understand how to build them. Use the Chrome Dev Tools (View > Developer > Developer Tools) to inspect how these exemplary websites are constructed. Look at the css and js files loaded then Google them to learn more. Other possible projects could be as simple as a HTML/CSS webpages for experimenting with styles, layout, colors, fonts, and positioning or more complex pages that include interactivity using helper libraries such as jQuery. You may also consider using a front end framework such as  bootstrap  styles and javascript features to build pages. You may also want to view and interact with your localhost server prototypes on other devices using ngrok. Check out the  hello-ngrok example  to learn more.  Deliverables:   A 1-2 min video screen capture demonstrating your sandbox environment and 1-3 prototypes. Talk about your workflow, your code, how you organized your project files, what your prototypes do, and what you learned from the process.  Optional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.   Resources   Learning Terminal  Learning HTML/CSS  Learning JS  Learning Node  - We've only really covered the basics of npm and have not even scratched the surface of Node yet.  Examples  live-server examples  web-dev examples  hello-npm examples  hello-budo examples",
            "title": "Assignment 6: Play in Your Sandbox"
        },
        {
            "location": "/#libraries-frameworks",
            "text": "Mar 7 / Mar 12   How does one choose which library or framework to learn?  There are many out there. It's best to make choices based on the project goals. The reason there are so many options is because people are constantly inventing new tools to solve problems. Over time the tools being used begin to gain popularity based on the number of users, development cycles, stability, and relevance. Keep in mind that there will ALWAYS be new tools and it's best to have an understanding of whats available while knowing a few tools really well. As such, there is always more to explore.    Top JavaScript Frameworks & Topics to Learn in 2017           Node.js  Express  - Web Application Framework for Node.js  MongoDB  - Javascript based database that works with Express and Node  React  - A JavaScript library for building user interfaces  p5.js  - A javascript based version of Processing  three.js  - A javascript based 3d webgl framework  A-Frame  /  Learning WebVR  D3.js  - A JavaScript library for manipulating documents based on data  Bootstrap  - Twitter's front end framework  Material  - Google's front end framework",
            "title": "Libraries &amp; Frameworks"
        },
        {
            "location": "/#project-2-build-a-web-app-with-a-framework-or-library",
            "text": "Choose one or more libraries or frameworks to build a project with. Most of the tools listed above have getting started documentation that should be relatively straightforward to follow to get going. Begin to understand the way you integrate one or more of the libraries or frameworks into a project or begin a new project with it. How do you prototype with these tools to construct a functional web application? What's your approach? How do you use these tools with your current development workflow?  Deliverables:   A 2-3 min video screen capture demonstrating your project. Talk about your workflow, your code, the chosen libraries/frameworks, how you organized your project files, what your project is and does, and what you learned from the process.  A link to the git repo that contains your project. You need to include a  README.md  file with instructions for its use. Look at examples of README files or tutorials about how to write a good README file. A typical project will likely have at least an index.html file and a README.md file. Any other files or folders will depend on the frameworks, css, and js used. The purpose of this is to improve your ability to organize a project and its files.  A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.   Resources   How to write a great README for your GitHub project  - These are only examples. Not all projects need every detail in the readme as described. The contents of a readme really depend on the type of project and audience. In general, its good to enable someone else to download and run your code if you are sharing it to github.  Awesome README  - A massive list of README examples and resources.  Markdown Cheatsheet   CM4: Due Mar 14  CM3: Due Mar 19",
            "title": "Project 2: Build a Web App with a Framework or Library"
        },
        {
            "location": "/#final-project-proposal",
            "text": "Write a final project proposal that builds upon your interests in Critical Making and explores one or more technologies you explored throughout the Spring semester. Spend some time reflecting on the tools and technologies you enjoyed learning about and wish to dig deeper into. Think about the questions that came up then and now as you are exploring creative possibilities using the technologies of your choice. Ask yourself, what do I want to create and what tools do I want/need to use to realize my vision? What challenges do I anticipate I will need to work through? What problems might I want to solve? And for what purpose? Exercise your creative muscles by creating sketches, drawings, maps, renderings, animations, prototypes, videos, etc of your original concept. Make use of reference materials that inspire you and fuel your creative drive.  Possible Project Areas:   VR (Unity / WebVR) Experiences  Worldmaking (Computational Creativity)  Web Applications  Digital - Physical Experiences  Enchanted Objects  IoT Devices and Systems  Drones  Magic Mirror Platform  Physical Computing  Interactive Experiences   This is only a suggestion based on some of the concepts we have covered this semester (and a few from last fall). You are free to propose any kind of project you think you can accomplish in the given the timeframe.  This project can be completed as individuals or in a group. Each person's contributions to the project need to be explicitly stated in the proposal. I (highly) encourage everyone to share ideas and work together to assist each other as you develop your projects. This phase is much shorter (by about a week) than the others which means you need to be already making progress on your final project throughout Phase 3.  Deliverable:  A final project proposal  posted to your blog . It should include the following:   Project Title  Project Summary ~ 1 page max (ie What is it? What problem(s) are you solving? What will it do? How will it work?)  Key components of your project (ie. Resources, skills, and technology needed to realize it ~ HTC VIVE, Web Technologies, Javascript Libraries, Raspberry PI, Materials, CAD, 3d Printing, Bantam Mill, Processing, Arduino, etc)  A brief timeline. If you need to order parts for your project, what do you need and when? If you need to order something, decide on it early and plan ahead for shipping times etc.   Final Project Proposals Due Mar 21 by 11:59 pm (Before Spring Break). I will review them and send questions and comments to you by the end of Spring Break.  Note there are about 2 weeks from the due date of Project 4 until Final Project Presentations on May 2nd, 2018.",
            "title": "Final Project Proposal"
        },
        {
            "location": "/#spring-break-no-class",
            "text": "Mar 26 - Mar 30",
            "title": "Spring Break (No Class)"
        },
        {
            "location": "/#phase-3-enchanted-objects",
            "text": "Phase 3 Question  What is an Enchanted Object?    Tip  Remember to look at the  Physical Computing  and  Development  sections often. They contain a variety of tools and learning resources beyond what we will cover in class. Many of the links in this phase will be to sections of these pages.   This phase is inspired by the book  Enchanted Objects: Innovation, Design, and the Future of Technology by David Rose . Through this phase you will explore the merger of digital and physical materials transformed into intelligent systems, common objects, immersive experiences, and products. We will be exploring accessible IoT platforms such as Raspberry Pi and Arduino combined with open source software, frameworks, and libraries such as Node.js. The focus of this phase is on integration - platforms, deployment, connectivity. How do all these technologies work together to support the realization of \"enchanted objects\".",
            "title": "Phase 3: Enchanted Objects"
        },
        {
            "location": "/#platforms",
            "text": "Mar 21 / Apr 2  Note: CM4 we will start talking about this stuff on Mar 21, the week before spring break. CM3, I suggest reviewing the information early just to know where we will be going right after spring break.  For this phase we will be using Raspberry Pi and Arduino boards as the IoT platforms for building Enchanted Objects. I recommend everyone purchase their own Raspberry Pi device and 16 or 32GB  MicroSD card(s) . We do have a few Raspberry Pi boards in the shop but are low on MicroSD cards. We have plenty of Arduino boards to use so no need to purchase one unless you want to own one.  You can pick up a Raspberry Pi 3 on  Amazon  or  Microcenter  (Retail Store in Denver). If you want a more complete starter kit you can find similar systems on Amazon,  Sparkfun , and other online retailers. Packages with more components will typically cost more. Note that the  Raspberry Pi 3 B+  was just released (on Pi Day 3/14/2018) and it costs a bit more than its predecessor (3 Model B). It doesn't matter if you have this new version or the slightly older version.  Typical Raspberry Pi Setup   Raspberry Pi 3 ~ $35  16, 32, or 64 GB MicroSD Card (16 GB is a good size to start with) ~ $10 for 16 GB  HDMI Cable (To plug in display) ~ $6  USB Keyboard ~ $5-15  Est Total: $66   Terminal / Command Line (Review)   Learning Terminal  ssh, vi, scp (Transferring Data to/from Raspberry Pi's)   Hardware   RaspberryPi  Raspberry Pi 3 Model B  /  Amazon  Raspberry Pi 3 Model B+  /  Amazon  (Just released on 3/14/2018)  Workshop: Setup your own Raspberry Pi  Download Raspbian (Lite)  Format and prepare MicroSD card  Setup RPi (w/ Command Line Interface. No GUI.)  Access Rpi via SSH      Arduino  Learning Arduino     Connectivity   Node  Learning Node  Demo: Node Applications    Raspberry Pi + Arduino = Super Combo!  Demo: Node Application running on Raspberry Pi (Application uses Node, Express, Websockets, and Johnny Five)     Physical Computing (Review)   Learning Electronics  Input/Output Devices   -",
            "title": "Platforms"
        },
        {
            "location": "/#assignment-7-build-and-deploy-a-web-application-on-raspberry-pi",
            "text": "Build a web application to deploy on your Raspberry Pi board. If you are designing and building an \"enchanted object\", what will make the object \"enchanted\"? What will the user experience be like? How will you go about constructing your application? What framework(s) or libraries will you use? How will someone interact with your system / object?  Sketch out some possibilities for your application and how it works on paper first. Think about the components of your application and system and how they connect. What types of input devices will you use? What output devices will you use?  Possible directions could be a simple webpage running on a Raspberry Pi that displays useful sensor data or a system that makes LEDs flash when driven by user input via laptop or mobile device. Perhaps you have a device that relays its position and orientation to a webpage and alters the background color in real-time. The possibilities are endless!  Prototype both locally (on your laptop localhost) and on a Raspberry Pi (via ssh). Deploy on a Raspberry Pi and access via Wifi or ethernet cable.  Deliverables:   A 1-2 min video screen capture demonstrating your system. Talk about your overall concept, workflow, code, how you organized your project files, what your prototypes do, and what you learned from the process.  Optional (but highly recommended): A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.  Optional (but highly recommended): A github repo that contains your project and instructions for others to run it in the README.md.   Resources   cm-code  cm-code/rpi  (Raspberry Pi)  hello-node  (Node Only)  hello-node-rpi  (Node + Raspberry Pi)  hello-express  (Node + Express)  hello-johnny-five  (Node + Express + Johnny Five + Websockets)  hello-mongo  (Node + MongoDB)",
            "title": "Assignment 7: Build and Deploy a Web Application on Raspberry Pi"
        },
        {
            "location": "/#building-systems",
            "text": "Apr 4 / Apr 9  Connectivity Cont.   Node.js + Express  Demo: Express Applications    Johnny-Five  Demo: Setup and Use    Websockets (aka socket.io)  Demo: Setup and Use     Integrations   Web Application + VR (Unity)  WebVR (A-Frame) + Node.js + Express  Physical (Sensors) + Digital (A-Frame or Unity)   Data   Node.js + Express + MongoDB (Database)  Demo: Working with MongoDB  CRUD  MongoDB  MongoDB Docs       Deployment (Remote)   Servers (VPS)  Heroku  Linode  Digital Ocean  AWS EC2    Process Managers, etc  PM2     Interfaces   Admin Panel Themes  vudash   -  Resources   hello-johnny-five  (Node + Express + Johnny Five + Websockets)  hello-p5  (Node + p5.js)  hello-aframe  (Node + AFrame)  hello-unity  (Node + Unity)",
            "title": "Building Systems"
        },
        {
            "location": "/#project-4-build-an-enchanted-object",
            "text": "Build a visual or physical object or experience that connects with the digital world. This might be an IoT connected device that senses its environment, human interaction, or the presence of other devices. Maybe your project connects the physical and virtual through connected hardware such as Raspberry Pi and Arduino.  Note: To build an enchanted object doesn't imply or require the use of all these technologies. It can make use of any combination of hardware and software built from scratch or configured from examples. The objective is to work creatively to build an object or experience that explores connected systems that enable a sense of \"enchantment\" one has with an object, experience, or product at any fidelity.   What makes your object or objects enchanted? Shape, color, size, material, a combo?  What kinds of inputs / outputs does your system use?  What kind of hardware are you using?  What software / platforms / frameworks are you using?   Deliverables:   A 2-3 min video screen capture demonstrating your project. Talk about your workflow, sketches, code, chosen libraries/frameworks, how you organized your project files, what your project is and does, and what you learned from the process.  A link to the git repo that contains any project code. You need to include a brief  README.md  file with instructions for its use.  A writeup for your blog of your learning experience. What hurdles did you encounter and how did you overcome them? What worked and what didn't? Embed your video in your writeup. Share the URL to your blog post on slack #cmstudio.   CM4: Due Apr 11  CM3: Due Apr 16",
            "title": "Project 4: Build an Enchanted Object"
        },
        {
            "location": "/#phase-4-final-projects",
            "text": "Info  This phase is much shorter (by about a week) than the others which means you need to be already making progress on your final project throughout Phase 3. Perhaps you use your Phase 3 project as a stepping stone towards your Final project.",
            "title": "Phase 4: Final Projects"
        },
        {
            "location": "/#open-studio",
            "text": "Apr 18 / Apr 23",
            "title": "Open Studio"
        },
        {
            "location": "/#open-studio_1",
            "text": "Apr 25 / Apr 30",
            "title": "Open Studio"
        },
        {
            "location": "/#final-project-presentations",
            "text": "May 2nd @ 6:30pm \nCMCI STUDIO (1301 Walnut St) \nBoth CM3 and CM4 will present their final projects during scheduled class time. All are welcome.  Projects   Effugium Escape Room   by Jim Murphy & Meredith Fong  Forum - the stories you need to hear  by Nick Balderston & Matt Isola  Seasons (VR Experience)  by Nikki Cavalier  Enchanted Ovulation  by Sarah Safranski & Rebekah Sosa   Everyone will present their work starting at 6:30pm. Come prepared with a 5-10 min presentation / demo. Be sure to include the project/work title, problem statement, inspirations, previous work, and lessons learned.  Following presentations we will celebrate the semester with food and drink at a local establishment.",
            "title": "Final Project Presentations"
        },
        {
            "location": "/fall-2017/",
            "text": "Critical Making 1 & 2\n\u00b6\n\n\nNothing is a mistake. There's no win and no fail, there's only make. ~ John Cage\n\n\nCritical Making Studio is the foundational experience enabling students to realize their full potential as creative citizens in BDW Studios. Central to the studio are four courses, Critical Making 1 and 2 (Fall), and Critical Making 3 and 4 (Spring), in which students enter into an experience as transformative and diverse as the participants themselves; all unique threads woven into whole cloth, informing the very fabric of studio culture. The courses aim to ground students in making as a deeply personal practice and ongoing journey in life thereafter, resulting in creative citizens capable of realizing that which they can envision utilizing a combination of their talents, intellect, abilities, creative faculties, and support networks.\n\n\nThe studio experience is made possible by 24 hr, 7 days a week, access to a state-of-the-art rapid prototyping and fabrication lab facility, media editing suite, and studio workspaces that can be transformed into a variety of configurations supporting activities such as artistic performances and special events. Additionally, access to fellow students, faculty, and industry partners provides an unparalleled educational experience and support network for developing transformative solutions spanning a variety of creative industries.\n\n\nInstructor:\n\n\nRJ Duran\n\n\nrj.duran@colorado.edu\n\nSlack: @rjduran. #cmstudio on bdw1301.slack.com\n\nOffice hours by appointment. Feel free to reach out to me via slack or email.\n\n\nCourse Resources\n\u00b6\n\n\nThis website is the primary resource for all critical making studio courses. Most of the resources used in the courses are divided up into sections that can be found on the left sidebar. Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you will need to choose some to learn and work with. There are pros and cons to any tool but all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you as long as the work gets done. As we move through the phases of the course feel free to recommend, add, and update the tools we and you find useful on this site. Also, note that anything specific and relevant to an assignment or project will be listed out under the assignment or project deliverables.\n\n\nBe sure to check the \nClass Links\n section weekly as there will surely be different things covered in the two courses. The topics of in class discussion will be unique and emergent as the conversation progresses. As always, if you miss a day or just want to know what went on in a different class, get in touch with me and/or talk with your class mates and share ideas. I will make a point to hit some main points in both courses so everyone is getting most of the same information, perhaps in a slightly different order at times.\n\n\nWorkload\n\u00b6\n\n\n\n\nThe critical making studio courses are each 3 credit hours. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week if you are taking only one studio course (CM1 or CM2) and 12-18 hours per week if you are taking both studio courses (CM1 and CM2). Consider 6 hours a minimum expectation for one studio course, 12 hours for both studio courses and plan accordingly.  \n\n\n\n\nAssignments given each week are due the following week by 11:59pm on the due date specified unless otherwise noted. \nStudents taking both courses simultaneously (CM1 and CM2) should submit all work on the CM2 due date. (FYI: There are only 2 of you. Everyone else is in CM1 \nor\n CM2.)\n\n\n\n\n\n\nProjects are assigned in the 3rd week of each phase and due the following week. Projects can be thought of as a slightly more refined assignment as they will build on the skills acquired in the phase.  \n\n\n\n\n\n\n\n\nPhase 1\n\u00b6\n\n\nWeek 1: Intro to Critical Making and CAD\n\u00b6\n\n\nAug 28 / Aug 30\n\n\n\n\nIntroductions\n\n\nWhat is Critical Making?\n\n\nCourse Website / Schedule\n\n\nComputer-Aided Design (CAD)\n\n\n\n\nAssignment 1: Final Project Concept\n\u00b6\n\n\nCreate a \"model\" (sketch, raster, vector, 2D, 3D, render, animate, simulate, etc.) of a possible final project. The word \"model\" is meant to be understood as any kind of digital or physical representation of an idea or concept you are excited about pursuing in your course of study in critical making. Possible examples: objects, artifacts, products, digital-physical experiences, installations, performances, platforms, artworks, tools, machines, devices, etc. Think about the things that have come up related to the tools and machines we will be working with in the digital and physical realms, our broad discussions thus far, and how the various ideas around the amorphous \"critical making\" resonate with your ideas and ambitions. Think about the various concepts, tools, and technologies associated with your other studio courses and how they resonate with you and your creative process. Explore possibilities for expression and cross pollination. As always, time is finite, and making is critical to our progression, so explore the various tools and skill sets you already know and try out some new tools you may have only just heard of this week. The most important thing above all is that you make something to the best of your abilities in the time you have. Send me any questions you have.\n\n\nDeliverable:\nWe will review and discuss final project concepts in class. You will then post your concept to your soon to be created website. Email me any pdfs, sketches, photos, and/or models with a project title and description by Sept 6, 11:59pm. \nOptional: You might consider recording a short video describing your project using a screen capture tool such as \nScreencast-o-matic\n. If you do this, create a \nYoutube\n account, upload your video, then provide the link to you video via email submission.\n\n\nCM1 & CM2: Due Sep 6 [Wed]\n\n\nCM1: Since we won't have class until the week after Labor day, we will postpone our in person discussion about project concepts until the following class on Sept 11. Still proceed to submit your concepts via email by Sept 6, 11:59pm.\n\n\nResources\n\n\n\n\nRhino 3D\n\n\nDownload Rhino\n - Free for 90 days. Edu License ~$90 @ CU Bookstore\n\n\nRhino Tutorials\n\n\nRhino 5 Essential Training\n\n\n\n\n\n\nFusion 360\n\n\nFusion 360 Students Download\n - Free for students. Make an Autodesk account and install.\n\n\nLearn Fusion 360 in 60 Mins\n\n\nFusion 360 Design Academy\n\n\nFusion 360 Adoption Portal\n\n\n\n\n\n\nBootcamp\n - How to dual boot your Mac with Windows. Required if you want to use both Windows and Mac operating systems on your Mac. As students, you can download Microsoft software through OIT. \nLearn more and download here\n.\n\n\nScreencast-o-matic\n, \nDownload Link\n - Screen capture software for sharing projects, making tutorials, and more.\n\n\nHow to take a screenshot on your Mac\n\n\n7 ways to take screenshots in Windows 10\n\n\n\n\n\n\nWeek 2: Project Management, Development Tools\n\u00b6\n\n\nSept 4 / Sept 6\n\n\n\n\nCM1: Labor Day (No Class)\n\n\nCM1: Review resources in \nProject Management\n. Spend some time investigating the tools available in order to complete assignment 2.\n\n\nCM2: Visit \nBoulder Makerspace (BLDG 61)\n (\nmap\n) during Drop-In Hours on Weds Sept 6th, 3-7pm. \nMeet at BLDG 61 Makerspace at 6:30pm then walk back to studio after.\n There is another Drop-In time on Saturday Sept 9th from 3-7pm. I recommend going to visit if you are in the CM1 class on Monday. Also, check out their \ncalendar and events\n for more dates if you can't make the 9th.\n\n\nDevelopment Tools\n. Spend some time investigating these tools. Read about them, download some, try them out. Dedicate more energy to learning about \nAtom\n and the \nWeb Languages I\n section.\n\n\n\n\nAssignment 2: Website Analysis + Github Repo\n\u00b6\n\n\nPart A:\n\n\nExplore different approaches to creating websites by analyzing existing sites and learning about the technologies they are built with.  Evaluate different options such as content management systems (CMS), free/paid templates, hand coding HTML/CSS pages, etc. Locate 3-4 websites you find interesting and comment on the pros and cons of the site design and organization. What works? What doesn't? Good design? Bad design? Good UX? Bad UX? Possible places to start: Look at portfolio sites, creative agency sites, image based or image oriented sites like those used in photography or art direction, look at sites that portray a product or service in an appealing way, sites you frequently visit, project blogs, websites that document a project or creative process, etc. The purpose here is to begin to understand how the Internet works and how websites work.\n\n\nIn critical making we place emphasis on the creative process and understanding the successes, failures, and happy accidents that inform and guide the creation of an idea and perhaps product. Possible uses for a website like this: documenting a project, course, series of projects, workflow, tracking your growth and progress, a portfolio showcasing your ideas from start to finish and the lessons learned along the way, or some combination of all the above. As consumers of information and projects about making things and how to make things we acknowledge the work that people like ourselves put in to transmitting ideas for others to learn and grow from. We want to always pay it forward and be content creators in the digital space, and a website like this can achieve that goal. Visit \nInstructables\n to see examples of documenting projects for others to follow. Personal sites, like the following, are quality examples of project oriented coursework. \nChikara Inamura (HTMAA 2014)\n, \nMatt Keeter (HTMAA 2011)\n, \nChristos Tzamos(HTMAA 2014)\n, \nZach Seibold (HTMAA 2014)\n, \nMerav Gazit (HTMAA 2014)\n\n\nDeliverable:\nA thoughtful commentary on the sites you have evaluated. Post your response to slack #cmstudio or \n(optionally and for gold stars)\n create a repo as instructed in Part B and commit your commentary to this repo and post the repo link. \n\"Repo\" = Short for Git Repository\n. If you find yourself asking, \"what makes this website look or work this way?\" just right click on the page and choose \"View Page Source\" or \"Inspect\" (if using Google Chrome).\n\n\nPart B:\n\n\nCreate a \nGithub\n account and go through a Git and Github tutorial. Learn about how to make a project and commit it to a repo.\n\n\nDeliverable:\nYour github URL (Ex: \nhttps://github.com/rjduran\n) and link to repo (Ex: \nhttps://github.com/rjduran/cm\n). Posted to slack #cmstudio.\n\n\nCM1: Due Sep 11\n\n\nCM2: Due Sep 13\n\n\nStudents taking both courses simultaneously (CM1 and CM2) should submit all work on the CM2 due date. (FYI: There are only 2 of you. Everyone else is in CM1 \nor\n CM2.)\n\n\nResources\n\n\n\n\nGit / Github (aka version control based website that hosts Git repositories)\n\n\nGithub Tutorial (10 mins)\n - Non command line (Terminal) tutorial.\n\n\nGit - The Simple Guide\n - Command line based tutorial.\n\n\nGit & Github Tutorial on Udacity\n - Command line based tutorial.\n\n\nStart a new git repository\n\n\ngit/github guide a minimal tutorial\n\n\nThe most important git commands\n\n\nGit Immersion\n - Advanced Tutorial. Work through this once you get the hang of working on the command line.\n\n\n\n\n\n\nTerminal\n\n\nHow to use Terminal on Mac\n, \nHow to use a Terminal on Windows\n\n\nMacOS/Linux/Unix Command Line Cheat Sheet\n, \nMac Terminal Cheat Sheet\n, \nAnother Cheat Sheet\n\n\nHow to show hidden files and folders including ~/Library on a Mac\n - The benefit of doing this is you can see whats \nactually\n on your machine. By default, MacOS and Windows systems hide lots of stuff. To be a master of your machine(s) you need to begin learning whats hidden just under the surface.\n\n\n\n\n\n\nMarkdown\n\n\nMastering Markdown\n\n\nMarkdown Docs\n\n\nMarkdown Cheatsheet\n\n\n\n\n\n\nDocumenting Projects\n\n\nInstructables\n\n\nHackaday\n\n\nChikara Inamura (HTMAA 2014)\n, \nMatt Keeter (HTMAA 2011)\n, \nChristos Tzamos(HTMAA 2014)\n, \nZach Seibold (HTMAA 2014)\n, \nMerav Gazit (HTMAA 2014)\n\n\nAutodesk Pier 9 Artist Residency Projects\n\n\nTales of a 3D Printer\n - Example of a \"build\" blog.\n\n\nDIY 3D Printing\n - Another example of documenting projects and process.\n\n\nFab Academy\n, \nFab Academy Class Archive\n - Tons of projects done by people all over the world.\n\n\n\n\n\n\n\n\n\n\nWeek 3: Web Development\n\u00b6\n\n\nSept 11 / Sept 13\n\n\n\n\nCM1: Discuss final project ideas in class.\n\n\n\n\nCM1 & CM2: Answer any questions about Assignment 2\n\n\n\n\n\n\nTerminal Review\n\n\n\n\nCommon commands: \ncd, ls, mkdir, rmdir, rm, mv, cp, pwd, man\n. Think of all these commands as tiny applications that have no GUI. They are very old and have been around since the start of Unix based systems (Read this to learn more: \nLooking back at OS X's origins\n). Look at \nMacOS/Linux/Unix Command Line Cheat Sheet\n to see more information about common commands.\n\n\nWorking with directories and files:\n\n\ncd <folder>\n - Goto into a folder\n\n\ncd ..\n - Go up one level\n\n\ncd ../<folder>\n - Go up one level (to parent folder) and into a child folder\n\n\ncd ../..\n - Go up two levels etc\n\n\nTab completion - When you start typing in a terminal you can hit tab to complete the command if the file or folder you are going to use is available. If you hit Tab twice, you will see the contents of a folder.\n\n\n\n\n\n\nGit commands: \ngit, git log, git clone, git add, git commit, git push\n\n\n\n\n\n\nGit/Github Review / Markdown Review\n\n\nMarkdown = text file with special syntax that gets converted into HTML. For example, README.md is the default markdown file you can include in a Git repo. Review \nMarkdown Cheatsheet\n.\n\n\nClone your created repo: \ngit clone <repo url>\n. For Example, \ngit clone git@github.com:rjduran/cm-tools.git\n.\n\n\nMake some changes: (Using text editor of some kind - Atom, vi, TextEdit, notepad)\n\n\nAdd changes to \nstaging\n area: \ngit add my-file.md\n\n\nCommit those changes: \ngit commit -m \"my message describing changes\"\n\n\nPush those changes to the repo: \ngit push\n. \nPro tip: At this stage you will likely need to enter your Github username and password. Read through \nConnecting to Github with SSH\n to setup your system to connect securely to Github and not require you to enter your credentials each time you push changes.\n\n\nDillinger (Markdown to HTML Editor)\n\n\n\n\n\n\nWeb Development 101\n\n\nWeb Languages (HTML/CSS/JS)\n, \nProtocols\n\n\nWeb Dev Bootcamp: Work through hand coding basic HTML/CSS/JS website.\n\n\n\n\n\n\nDomains\n (Registrar) and \nHosting\n (Servers)\n\n\nFTP\n, SCP, SSH\n\n\nLocalhost\n (XAMPP, MAMP, BitNami)\n\n\nChrome Dev Tools/ Inspector for debugging\n\n\nEmbedding content from Youtube, Vimeo, etc using \n<iframe></iframe>\n tags\n\n\n\n\n\n\nCMS Tools\n\n\nTemplates\n\n\n\n\nProject 1: Make a Website\n\u00b6\n\n\nPart A:\n\n\nUtilizing any web development tools of your choosing, create a website that serves as a project portfolio for your critical making coursework. Along with documenting your assignments, you might consider making a section of your site for documenting process oriented things like prototypes, experiments, best practices, research, and reflections. You may opt to create a site that is built from scratch (HTML/CSS - \nJS not required\n), a CMS, or any kind of template. Regardless of the approach, the website needs to contain the following:\n1) an organizational structure to document your work in pages or posts,\n2) site navigation so its easy to locate content,\n3) some kind of \ndesign aesthetic\n to make it your own (Hint: experiment with css and/or CMS styling options). \n\n\nYour site should be live on the internet at a domain of your choosing. You don't necessarily need to purchase hosting and a domain if using a free CMS with hosting such as wordpress.com. You are also free to make use of a website you already have. If you choose this option, you still need to have a dedicated section of your site for critical making.\n\n\nPart B:\n\n\nYour site needs to contain a page or post with your final project concept(s) and roadmap. Be sure to include any text, images, and/or video you have created to communicate your idea. Be sure to include any reference material and provide links to the original sources (ie. pinterest boards, reference images of similar work, websites, etc). Identify some milestones you would like to hit in order to accomplish your project goal by the end of the class. \nTake a look at the resources from last week to see some approaches to documenting projects like this.\n\n\nDeliverables:\n\n\n\n\nA URL to your website. Include a brief description about the technology used to build your site. Posted to slack #cmstudio.\n\n\nOptional: A github link to the repo containing the code for your website. \nThis is only if you created your site from scratch or worked directly with the HTML/CSS/JS and wish to share it openly via Github.\n\n\n\n\nCM1: Due Sep 25\n\n\nCM2: Due Sep 27\n\n\nResources\n\n\n\n\nDevelopment Tools\n\n\nBlogs / Wikis / CMS Tools\n\n\nDesign Tools\n\n\nYour classmates\n\n\n\n\n\n\n\n\n\nPhase 2\n\u00b6\n\n\nWeek 4: UX Strat Conference\n\u00b6\n\n\nSept 18 / Sept 20\n\n\nCM1 & CM2: No Class.\n\n\nWe won't have class this week since most are participating in the \nUX Strat conference\n. \nAs such, I have extended the deadline for Project 1 by one week, now due on Sept 25 (CM1) and Sept 27 (CM2).\n There is however still an assignment based on your participation in the conference. If you aren't volunteering at the conference you still need to submit a response exploring something recently new to you. Assignment 3 will have the same due date as Project 1 so plan accordingly.\n\n\nAssignment 3: UX Tools + Make Something\n\u00b6\n\n\nAs you will be immersed in a conference with talk of strategies and cutting-edge tools for UX, take note of the different tools and technologies being used by the presenters and people you meet. Share your insights through post(s) on your website, via slack #cmstudio, and with the time you have in the days following the conference, take action by \nmaking something\n with any of the tools you encounter. What can you do with any of them just after learning about them? How can you get your hands dirty and make something? How do they start to integrate with your workflow?\n\n\n\"making something\" could mean a variety of things. Based on what we have talked about in regards to critical making as a studio and practice, think of making things that not only benefit you in your understanding of something, but also make something accessible for someone else. You may be inspired to create a quick 3-5 min tutorial (written/video/etc) on a technique learned with a new tool or technology. You might just want to share your insights in use cases with others in a way that exercises your creative muscles visually, spatially, or otherwise. Think about what inspires you to create things and how you take action in sharing those things you create.\n\n\nDeliverable:\n\n\n\n\nA reflection / demo (written and/or \nscreen capture video\n) sharing your insights of at least 1 tool or technology encountered at the conference. If applicable, include details of what you made and your process in doing so. Did you sketch first? Just jump into it and play around? Did you follow documentation or watch videos to understand more? You may share your response on your website and/or post to slack #cmstudio. \nIf you haven't by now created a \nYoutube\n or \nVimeo\n account, you might want to because it makes sharing videos much easier. Both services have free options.\n\n\nOptional: A github link to the repo containing any code you authored or experimented with.\n\n\n\n\nCM1: Due Sep 25\n\n\nCM2: Due Sep 27\n\n\n\n\nWeek 5: Physical Computing I\n\u00b6\n\n\nSept 25 / Sept 27\n\n\n\n\nCM1 & CM2: Answer any questions about Assignment 3 and Project 1. Talk about remainder of Phase 2 and where we're headed in Phase 3.\n\n\nArduino 101\n\n\nHardware\n, \nArduino Uno Specs\n    \n\n\nIDE\n, \nLanguage Reference\n\n\nSerial Monitor (for monitoring board input and output) - Tools > Serial Monitor\n\n\nThere are many different shapes and sizes of Arduino's available, how do you choose hardware for a project?\n\n\nInputs (Sensors) -> Software (Behavior) -> Outputs (Action)\n\n\nBuilt In Examples\n\n\nBlink\n - Uses a LED\n\n\nAnalogReadSerial\n - Uses a Knob\n\n\nAnalogInOutSerial\n - Uses a Knob and a LED through \nPulse Width Modulation (PWM)\n\n\n\n\n\n\n\n\n\n\nSensors and Devices (Input / Output)\n\n\nInput: \nKnobs (Potentiometers aka Variable Resistors)\n, \nButtons/Switches\n\n\nOutput: \nLight Emitting Diodes (LEDs)\n\n\n\n\n\n\nSourcing Parts from \nSparkfun\n and/or \nAdafruit\n\n\nBasic Electronics\n\n\nWhat is \nElectricity\n?\n\n\nSparkfun - Where Do I Start?\n\n\nVoltage, Current, Power    \n\n\n\n\n\n\nTools for Prototyping\n\n\nBreadboards\n\n\nJumpers (Wires)\n\n\n\n\n\n\n\n\nAssignment 4: It's (almost) Electric!\n\u00b6\n\n\nLook ahead to \nProject 2: It's Electric!\n and prepare a list of parts and supplies you will need to build your chosen project. Writeup a brief summary of what you plan to build and submit this along with your list of materials via #cmstudio. \nIndicate which items you require that need to be ordered. We can get an educational discount by ordering through Sparkfun so try to use parts available there if you can. For anything else you require you should place an order with that supplier ASAP so you can get your parts in time to work with them. I will put in a Sparkfun order early next week on Monday or Tuesday.\n. \nReach out via slack with any questions on suppliers, materials, project concepts, etc.\n\n\nCM1: Due Oct 2\n\n\nCM2: Due Oct 4\n\n\nResources\n\n\n\n\nArduino - What IS it?\n - Great overview of Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)\n\n\nMassimo Banzi: How Arduino is open-sourcing imagination (TED Talk)\n\n\nArduino IDE\n\n\nArduino Language Reference\n\n\nProject Examples - Start here for project inspiration    \n\n\nInstructables\n\n\n20 Unbelievable Arduino Projects\n\n\nArduino Playground\n\n\n20 Projects to Celebrate Arduino Day\n\n\nHackster.io Arduino Projects\n\n\nDIY Hacking Arduino\n\n\nArduino Projects on Pintrest\n\n\nArduino Project Hub\n\n\n\n\n\n\nSparkfun\n\n\nWhat is an Arduino?\n   \n\n\nArduino Uno\n\n\nArduino Boards\n\n\nArduino Tutorials\n\n\nArduino Buying Guide\n\n\nArduino Products\n\n\n\n\n\n\nAdafruit\n\n\nArduino Uno\n\n\nArduino Learning System\n\n\nArduino Products\n\n\n\n\n\n\n\n\n\n\nWeek 6: Physical Computing II\n\u00b6\n\n\nOct 2 / Oct 4\n\n\n\n\nCM1 & CM2: Answer any questions about Project 2.\n\n\nMore Electronics\n\n\nAnalog vs Digital\n\n\nADCs and DACs\n\n\nSeries and Parallel Circuits\n\n\n\n\n\n\nMore Arduino Boards\n\n\nArduino Pro Mini\n\n\nArduino Mega\n\n\nSparkfun Redboard\n\n\nSparkfun ESP32 Thing - Good for WiFi enabled projects!\n\n\n\n\n\n\nDig deeper into what Arduino's can do\n\n\nSensors, Sensors, and more Sensors\n\n\nTools for Prototyping\n\n\nMultimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins.\n\n\nHow to use a multimeter\n\n\n\n\n\n\nSoldering\n\n\nSoldering Tutorial for Beginners: Five Easy Steps (Video)\n\n\nHow to Solder (Instructables)\n\n\n\n\n\n\nWires\n\n\nWorking with wire\n\n\nHow to Strip a wire\n\n\n\n\n\n\n\n\n\n\nWork on Project 2 (Open Studio)\n\n\n\n\nProject 2: It's Electric!\n\u00b6\n\n\nChoose one option\n\n\nOption 1: Create\n\n\nCreate a project of your own. Using any Arduino (Uno, Mini, Mega, etc or variation of Arduino such as Sparkfun Redboard or Sparkfun ESP32 Thing) and a minimum of 1 input device and 1 output device, create a physical computing project that explores the application of input devices and output devices. Want to monitor the moisture content of your plants and deliver water when needed? Want to build a new kind of musical interface for expression and provide feedback to the user? Want to design real-time visualizations of environmental data? Want to build a piece of clothing that lights up in response to sound? Design a project and make it! \nI suggest start by hand sketching your ideas out. What input devices do you need? What do they do? What output devices do you need? What do they do? What kind of behaviors do you want to program your Arduino to do? Write out the step-by-step logic then proceed to implement it in code. Experiment with simple Arduino \"sketches\" to understand the functionality of your input and output devices.\n\n\nOption 2: Remix\n\n\nLocate an existing Arduino-based physical computing project that you find intriguing and wish to explore by making it using any instructions included with the build. Make modifications to the project to make it your own. \nRemix it!\n Go at least one step further than the existing work. Explore possible project avenues through sites such as \nInstructables\n, \nSparkfun\n, \nAdafruit\n and others. Source any parts not available in the shop but required by your project and build it. \nProtip: Start on this part early to account for shipping etc. Sparkfun is local and typically has next day pickup.\n \nRead through project write ups and watch videos (if available) before you decide to take on the project. Make sketches and notes based on your understanding of the project and think about what is required to complete your instantiation of the project. Pay special attention to the quality of project documentation, parts lists, and assembly instructions.\n\n\nOption 3: Advance\n\n\nBuild a project that advances your final project concept. If it has an electronics component, brainstorm and ideate on what you might need to complete your final project and \nimplement a portion of it\n using an Arduino. Seek out similar projects to learn from and build off of. Make sketches to explore your logic and understanding of the parts required by your project goals. \nThink about your input devices and output devices. What purpose do they serve? What is required to read data from a device? What is required to write data to a device? What types of behaviors would you like your project to contain? What functionalities are possible with available hardware? - Where to start? Hand sketch the interactions you wish to encode using hardware and logic. Then proceed to build and test circuits. Repeat until you are satisfied with the results.\n\n\nDeliverables:\n\n\n\n\nDocumentation including a project writeup, build photos, and/or 1-3 min video demonstration of your project. Describe the project motivation, objectives, hardware used, challenges encountered, and possible next steps if and/or when you are to go a step further. What is your project and what does it do? What else can you envision your project being used for? What insights do you have now that you have worked on this project? What advice might you have for others interested in following your lead? \nYou might consider writing up your project like an Instructable, providing a roadmap for someone else to follow.\n \nPost your project deliverables to your website and share the project URL on slack #cmstudio.\n\n\nA github link to the repo containing the Arduino code for your project. \nInclude github URL in your project deliverable on your website.\n\n\n\n\nMake sure to give credit to any related projects, code, websites, articles, images, videos, or other source materials used by including them in your project writeup.\n\n\nBring your projects to class on Oct 9 (CM1) and Oct 11 (CM2) to demo.\n\n\nCM1: Due Oct 9\n\n\nCM2: Due Oct 11\n\n\nResources\n\n\n\n\nBoards (Currently in the shop)\n\n\nArduino Uno\n\n\nSparkfun Redboard\n\n\nSparkfun ESP32 Thing\n\n\n\n\n\n\nMore about Input and Output Devices\n\n\nArduino Inputs\n - Great overview of Inputs, Sensors, and Applications\n\n\nArduino Outputs\n - Great overview of Outputs and Applications\n\n\nArduino Prototyping Techniques\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhase 3\n\u00b6\n\n\nWeek 7: 3D Printing\n\u00b6\n\n\nOct 9 / Oct 11\n\n\n\n\nCM1/CM2: Project 2 showcase!\n\n\nAdditive Manufacturing Technologies (Image)\n \nSource: \n3D Hubs\n\n\nTypes of 3D Printing\n\n\nFDM (Fuse Deposition Modeling) / Filament Based - \nUltimaker\n, \nLulzbot\n, \nMakerbot\n, \nMarkforged\n, \nWasp\n\n\nSLA (Stereolithography) / Resin Based - \nFormlabs Form 2\n, \nOno\n\n\nSLS (Selective Laser Sintering) / Powder Based - \nShapeways\n, \nFormlabs Fuse 1\n\n\nPolyjet (Material Jetting) / Resin Based - Stratasys (Multi-material)\n\n\n\n\n\n\nSlicing tools convert a 3D mesh (STL) into GCODE (aka a list of commands to run the printer)\n\n\nCura\n is what we use for the Ultimaker. \nCura Manual\n\n\nSlicing Process\n\n\nLoad STL file into Cura\n\n\nChoose PLA material for Extruder 1 and PVA for Extruder 2 (If using support material)\n\n\nChoose a print profile (aka Layer Height: Start with Fast or Normal options)\n\n\nChoose an infill (Density)\n\n\nSave GCODE file and copy to blue USB drive\n\n\n\n\n\n\n\n\n\n\nFDM Materials Overview\n\n\nFilaments: \nPLA\n and \nABS\n are the most common. Other materials: Nylon, HIPS, TPU    \n\n\n\n\n\n\nMeshes\n\n\nSTL File Format for 3D Printing\n / \nSTL (file format)\n\n\nTools for working with meshes\n\n\nMeshlab\n - Good for viewing meshes.\n\n\nMeshmixer\n - Good for manipulating meshes in preparation for printing.\n\n\nNetfabb\n - Good for looking at STL dimensions and repairing meshes before importing to Cura.\n\n\nPleasant3D (MacOS)\n - Utility for quick viewing/resizing of STL files. MacOS only.\n\n\n\n\n\n\n\n\n\n\nThingiverse\n    \n\n\n3D Printing Services\n\n\nFull Printed Video\n\n\n\n\nAssignment 5: Bits to Atoms\n\u00b6\n\n\nDesign something and 3D print it in a material of your choice on the Ultimaker. Design your model to fit within a bounding box volume of 101.6 x 101.6 x 101.6 mm (4 x 4 x 4 in). This does not mean the object has to be exactly this size, it can and probably should be smaller to allow for shorter print times. Remember that larger objects and/or objects with finer print resolution (layer height) will take longer to print. Be sure to check your print time in Cura before starting a print so you know how long it will take. Also, be sure to only use support material if needed as it will increase print times. You will use Cura to slice your STL file and save/copy the GCODE file to the blue USB drive plugged into the machine.\n\nNote that Cura uses mm and doesn't include an option to change to inches. This means that if you design using inches you will have to scale your model up by a factor of 25.4 since there are 25.4 mm in an inch.\n\n\nWork together to coordinate print jobs via slack #cmstudio.\n\n\nDeliverables:\n\n\n\n\nA 1-2 min video walk through of your design in a CAD package of choice. \nHint: Use a screen capture tool such as \nscreen capture video\n. Writeup a brief description of the your approach to creating your design. What problem were you trying to solve? What questions and challenges did you encounter while coming up with your design? Is your object functional or purely form based and artistic or a mix of both? Feel free to elaborate on the form and function of your design. Perhaps it is an extension of a past project or an attempt to make headway on your final project \n(Recommended if you think you will have any kind of cases for electronics, modular components for your devices, attachments for motors, scale models of something larger, etc)\n. Post your description and video to your website and share the URL via slack #cmstudio.\n\n\nA 3D printed model. Place all models on the black shop table next to the printer. In your writeup feel free to comment on any part of the printing process. What challenges did you encounter in the process and what solutions did you discover? slicing? the machine? materials? scaling your model? CAD vs physical object? thin vs thick areas?\n\n\n\n\nCM1: Due Oct 16\n\n\nCM2: Due Oct 18\n\n\nResources\n\n\n\n\nAdditive Manufacturing Technologies: An Overview\n\n\nWeek 1 CAD Resources\n\n\nDesign Guides - Think of these are useful resources regardless of the printing process.\n\n\nWhat is the best type of plastic for my 3D printing application?\n\n\nHow to Design Snap Fit Components\n\n\nHow to Choose the Best Fasteners for 3D Printed Parts\n\n\nShapeways: Modeling & Design Tips 3D Printing Tutorials\n\n\nSimplify3D: Print Quality Troubleshooting Guide\n\n\nRepairing 3D Files With Meshmixer and Netfabb\n\n\nAdding Screw Threads\n\n\ni.materialise Design Guide\n\n\n5 Mistakes to Avoid When Designing a 3D Model for 3D Printing\n\n\nKey design considerations for 3D Printing\n\n\nEnclosure design for 3D Printing: A step-by-step guide\n\n\nFormlabs Tutorials\n - Good design references even though we don't have a Formlabs printer (yet).\n\n\n\n\n\n\nPost Processing\n\n\nUltimate Guide to Finishing 3D Printed Parts\n\n\nPost processing for FDM printed parts\n\n\nHow to spray paint 3d models\n\n\nXTC-3D Epoxy\n\n\n\n\n\n\nProjects / Inspiration\n\n\nThingiverse\n\n\nMicroscape\n - 3D printed cityscapes\n\n\nPaper: \nThingi10K: A Dataset of 10,000 3D-Printing Models\n, \nWebsite\n    \n\n\n\n\n\n\nPrint the Legend\n (\nNetflix\n)\n\n\nFurther Resources\n\n\nUdemy: Designing for 3D Printing with Fusion 360\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 8: Parametric Design & Digital Fabrication\n\u00b6\n\n\nOct 16 / Oct 18\n\n\n\n\nParametric design is a process based on algorithmic thinking that enables the expression of parameters and rules that, together, define, encode and clarify the relationship between design intent and design response. (\nSource: \nWikipedia\n), \nGoogle Search\n\n\nDigital fabrication is a type of manufacturing process where the machine used is controlled by a computer. The most common forms of digital fabrication are CNC Machining, Laser Cutting, and 3D Printing. (\nSource: \nOpen Desk\n), \nGoogle Search\n\n\nExamples    \n\n\nParametric Design Examples\n\n\nOrganizations: \nCo-de-iT\n, \nZha Code Edu\n, \nDesignmorphine\n\n\nProjects: \nOpendesk\n, \nFormlabs Digital Factory Pens\n, \nNew Balance 3D Printed Shoe\n, \nNervous System Kinematics Dress\n\n\n\n\n\n\n\n\nRhino + Grasshopper Demos\n\n\nDemos - Manual, Espresso Cup, Waffle, Vase\n\n\nWorkflow Examples - Contouring, Nesting\n\n\n\n\n\n\nFusion 360\n\n\nParametric Modeling Basics\n\n\nHow to define user parameters (\"Sigma\" Icon)       \n\n\n\n\n\n\nArduino Enclosure Demo\n\n\nSlicing App (Plugin)\n\n\n\n\n\n\n\n\nAssignment 6: Form Finding\n\u00b6\n\n\nDesign a parametric model / system using a CAD tool of your choice and optionally fabricate one or more objects or instances of your design. Look to the resources provided for inspiration. Investigate form finding strategies such as iterative design, taking advantage of parameters that drive full system changes (ie. move a point, move a slider, or change a numerical value to cause change in the whole design and resulting in a new instance). Explore shapes and forms that you find intriguing, analyze existing design and geometries in 2D or 3D and begin to deconstruct underlying systems of logic. If you choose to make it physical, pay special attention to the scale of your design in relation to the fabrication process you plan to use.\n\n\nDeliverables:\n\n\n\n\nA 3-5 min video walk through of your design system in a CAD package of choice. At a minimum, generate 3 different instances or models from your system and show them in your video (For example, In the case of an Arduino enclosure, I would show three different 3D models that look similar but vary in size to support three different Arduino models with slightly different features such as UNO, Mega, and Sparkfun Redboard). Writeup a brief description of your design approach to accompany the video. What problem you were trying to solve? What forms did you find interesting and what parameters did you vary to produce such results? Perhaps the tools explored in this project will help advance your final project concept. If so, what opportunities do you now see to make headway on your final project? Be sure to credit any tutorials, blog posts, etc that you use. Post your description and video to your website and share the URL via slack #cmstudio.\n\n\nOptional: Produce one or more physical models from your system using 3D printing, 2D paper printing/cutting, or laser cutting (Only if you have gone through the training at BLDG61 makerspace and understand the process). In your writeup feel free to comment on any part of the fabrication process. Include photos of the fabrication process and final models. What challenges did you encounter with the fabrication process? Place all models on the black shop table.\n\n\n\n\nCM1: Due Oct 23\n\n\nCM2: Due Oct 24\n\n\nResources\n\n\n\n\nParametric Design: a Brief History\n\n\nRhino\n\n\nThink Parametric: Rhino 101 - Fundamentals of 3D Modeling\n\n\nPlethora Project: Rhino Tutorials\n\n\nLynda.com Rhino 5 Essential Training\n\n\n\n\n\n\nGrasshopper\n\n\nGrasshopper Primer\n\n\nVisual Programming in Rhino3D with Grasshopper\n / \nAmazon\n\n\nThink Parametric: Grasshopper 101 - Introduction to Parametric Modeling\n\n\n\n\n\n\nFusion 360\n\n\nArduino UNO Enclosure Tutorial\n (\nArduino UNO Model\n, \nArduino Drawing\n), \nShorter version\n\n\nParameter Driven Project Enclosure\n    \n\n\nBookshelf Tutorial\n\n\nFusion 360 Manual - Change Parameters Dialog Box\n\n\nEquations and Parameters in Dimensions\n\n\nUdemy: Product Design in Autodesk Fusion 360 from idea to prototype\n\n\nFusion 360 Design Academy\n\n\nFusion 360 Adoption Portal\n\n\nMaking Parametric Models in Fusion 360\n\n\n\n\n\n\nInspiration\n\n\nLaN: 3D Tiles\n\n\nLaN: Folded\n\n\nLaN: CNC Mill Interiors\n\n\nLaN: Triangulation\n\n\nLaN: 3D Space Shape\n\n\n\n\n\n\n\n\n\n\nWeek 9: CAD to CAM\n\u00b6\n\n\nOct 23 / Oct 25\n\n\n\n\nOverview of CAM\n\n\nComputer-aided machining (CAM) is an application technology that uses computer software and machinery to facilitate and automate manufacturing processes. CAM is the successor of computer-aided engineering (CAE) and is often used in tandem with computer-aided design (CAD). (\nSource: \nWikipedia\n)\n\n\nComputer numerical control (CNC) is the automation of machine tools by means of computers executing pre-programmed sequences of machine control commands. This is in contrast to machines that are manually controlled by hand wheels or levers, or mechanically automated by cams alone. (\nSource: \nWikipedia\n)\n\n\nWhat is a toolpath?\n\n\nWhat is \nGCODE\n?\n\n\n\n\n\n\nEconomies of Time and Tooling\n\n\nWhich fabrication process do I choose?\n\n\nIs this the right process to produce my model?\n\n\nDoes the time and tooling required make sense to accomplish my goal?\n\n\nLow to high resolution prototypes\n\n\nConsidering material and application\n\n\n\n\n\n\nBasic process to prepare files for fabrication\n\n\nCreate your design as 2D curves or 3D model using CAD package (Rhino, Fusion 360, etc).\n\n\nGenerate toolpaths using CAM software. \n(For example, Cura is a \"Slicer\" which is a type of CAM software, Fusion has CAM tools built in, and RhinoCAM is a CAM package/plugin for Rhino.)\n. The input to the CAM software will be based on the fabrication process. The toolpaths saved out of a CAM package are always a machine code file (ie. \nGCODE\n or a variation of it).\n\n\nRun the GCODE file using a controller/software for the fabrication process. \n(For example, the Ultimaker's controller is on the machine itself. You just tell it which GCODE file to read from the USB drive. This is similar to a laser cutter with a built in controller and memory. In the case of a vinyl cutter, CNC router, or CNC milling machine, the controller is commonly a computer connected to the machine sending chunks of data as the file is read. In the case of the Bantam Mill, we use their tool known as Bantam Tools.)\n     \n\n\n\n\n\n\nCAD to CAM Workflows\n\n\nWorking with 2D curves - Illustrator, Rhino, Fusion 360\n\n\n2D file types - \nEPS\n, \nAI\n, \nDXF\n, \nSVG\n, \nPDF\n \n(Note: These are all Vector based graphics vs Raster based graphics. Photos in JPG and PNG file formats are examples of raster based graphics and are commonly used for laser engraving.)\n\n\nExamples - Stickers (Vinyl), Cut & Fold (Laser), Cut/Engrave (Mill)\n\n\n\n\n\n\nWorking with 3D geometry (meshes, etc) - Fusion 360\n\n\n3D file types - \nSTL\n (most common)\n\n\nExamples - Cut (Mill), 3D to 2D Contouring/Slicing (Laser)\n\n\n\n\n\n\n\n\n\n\nVinyl Cutting Demo/Process\n\n\nImportant: The driver only works up to Illustrator 2017.1 (21.1). It will not work with the latest Illustrator 2018.\n\n\nDownload and install the Illustrator plugin\n (You only need to do this once)\n\n\nChoose English > CAMM-1 > GS-24\n\n\n\n\n\n\nDownload the Users Manual\n\n\nMake a 2D design file in Illustrator\n\n\nConfigure print settings in Window > Extensions > Roland CutStudio\n\n\nSelect GX-24\n\n\n\n\n\n\nLoad material into machine\n\n\nOutline text/shapes\n\n\nPrint/Cut!\n\n\n\n\n\n\nBantam Mill Demos/Process\n\n\nCM1: \nFusion 360 Aluminum Ring Tutorial\n\n\nCM2: Adapted Ring Tutorial for Delrin\n\n\nCreate 3D CAD model\n\n\nSwitch over to the CAM workspace\n\n\nLoad Othermill Tool Library\n\n\nTool Types, Speeds and Feeds, Materials, Resources\n\n\n\n\n\n\nCreate a Setup\n\n\nSetup WCS and Stock\n\n\nMeasure stock material, position model\n\n\n\n\n\n\nCreate 2D Toolpaths\n\n\n2D > Face\n\n\n2D > 2D Pocket\n\n\n2D > 2D Contour\n\n\n\n\n\n\nSimulate each toolpath\n\n\nChoose post processor for \"othermill.cps\"\n\n\nSave GCODE!\n\n\nDownload Bantam Tools\n (Control software for operating the mill)\n\n\nOpen GCODE in Bantam Tools software\n\n\nTurn on machine and Home it\n\n\nSpecify material dimensions and tape offset\n\n\nMount workpiece in machine\n\n\nInsert / Change tool\n\n\nStart job!\n\n\nRemove finished object\n\n\nVacuum out all debris\n\n\n\n\n\n\n\n\nProject 3: Totally Fab\n\u00b6\n\n\nChoose one option\n\n\nOption 1: 3D Print\n\n\nCreate an original design and 3D print it. Use the opportunity to advance your skills in designing for 3D printing in any of the following areas: new forms, complex geometry, multipart assemblies, tolerances, designing with fasteners (screws, etc), flexible materials such as TPU, print quality and resolution for a given application, embedding electronics such as sensors and LEDs, low to high resolution prototyping, or anything challenging your understanding of printing, materials, or form printability.   \n\n\nTips: Explore some of the past resourced listed for 3D printing. Look through the design guides and seek out additional resources to aid your design process. As with most ideas turned into CAD models, I suggest start by hand sketching your ideas out. Think about the problem you wish to solve or the questions you have around whats possible with this tool / medium / material. Think about the forms you want to model, the parts you want to use in an assembly, the mechanical movements you wish to explore, etc. Don't let the tools or process get in the way of you producing an instance of your idea. Start simple and make many iterations until you get to something that communicates your intent. Think about print times and plan jobs accordingly.\n\n\nOption 2: Vinyl Cut\n\n\nCreate an original design and vinyl cut it. Use the opportunity to advance your understanding of vinyl cutting in general and in any of the following areas: sign production for walls and windows, stickers for different form factors, design for complex surfaces (ie. not flat. Think about non-planar surfaces found in furniture, cars, lighting, etc), murals, layers, typography, areas of graphic design, branding, UX, or anything challenging your understanding of vinyl cutting, materials, or application. Perhaps this is a process that aligns with other efforts and projects in other studios.\n\n\nTips: Spend some time exploring graphic design and vinyl cutting projects. Think about places you may have seen vinyl cutting used and question the design process behind it. What parameters does one need to know about to work with the media? If you are working with typography, are there fonts better suited for vinyl cutting or laser cutting? What graphical elements work well for vinyl cutting but not for screen based representation? How can this media be used to communicate complex messages? Transfer tape can be used to make decals and apply vinyl to almost any surface. We have a roll of it in the shop you can use.\n\n\nOption 3: Laser Cut\n\n\nNote: This option is only for those that have gone through the BLDG 61 laser cutter training and can get in during guided practice hours. Look at the \nBLDG 61 Calendar\n and plan accordingly.\n\n\nCreate an original design and laser cut it. Use the opportunity to advance your understanding of laser cutting in general and in any of the following areas: multipart assemblies, 3D to 2D slicing/contouring for laser cutting, pressfit constructions, folding, new materials, projects utilizing both raster (engraving) and vector (cutting), geometry, patterns or anything challenging your understanding of design + laser cutting, materials, or building complex assemblies from laser cut parts.\n\n\nTips: Spend some time exploring graphic design and vinyl cutting projects. Think about places you may have seen vinyl cutting used and question the design process behind it. What parameters does one need to know about to work with the media? If you are working with typography, are there fonts better suited for vinyl cutting or laser cutting? What graphical elements work well for vinyl cutting but not for screen based representation? How can this media be used to communicate complex messages?\n\n\nOption 4: CNC Mill\n\n\nCreate an original 2D or 3D design and cut it on the Bantam mill in the material of your choice. Use the opportunity to familiarize yourself with the Bantam mill and the workflow for generating toolpaths using Fusion 360. In the process you will be exploring how to setup projects on the mill, choosing tools, choosing materials, work holding, how speeds and feeds work in conjunction with the tool and material you choose, and how to run the machine safely.\n\n\nNote: Unlike the 3D printer where you can click print and walk away, this machine you can't. This will require you to sit with the machine and monitor it for the entire job. You must also be sure to vacuum out the machine after use using only the red/black vacuum with the small hose attachment. We will review these procedures in class. Please read all \nSafety\n information before working with the machine. Send me any questions you have about the process, machine, or safety.\n\n\nTips: To be fair, this project will likely have the steepest learning curve because there are just more variables (ie. toolpath operations, machine operations, materials, tools, fixturing, workholding, and speeds and feeds). If you feel comfortable designing CAD models in Fusion 360 you should be in a place to work with the CAM tools. Start with some basic tool path operations such as 2D Facing (to cut a uniform surface), 2D contour (to cut objects out), 2D pocketing (to cut the inside of a shape out), and 2D adaptive clearing (to have more control over a 2D toolpath), and 3D adaptive clearing (if working on a 3D model). \nUse the specified tool speeds and feed settings for the material chosen\n. Spend some time investigating other projects done with the mill. The \nAdafruit Milling Mondays (Youtube Playlist)\n is a great place to start.\n\n\nDeliverables:\n\n\n\n\nDocumentation including a project writeup, build photos, and a 3-5 min video walkthrough of your design process and final results. Describe the project motivation, objectives, hardware used (if any), code written (if any), challenges encountered, and possible next steps if and/or when you are to go a step further. What problem you were trying to solve? What tools did you choose to work with? What part of the CAD to CAM process did you find most interesting and the most challenging? If you chose to make progress on you final project, which milestones did you hit and whats next? Be sure to credit any tutorials, videos, images, blog posts, etc that you use. Post your project deliverables to your website and share the project URL via slack #cmstudio.\n\n\nPhysical model(s). Place all models produced on the black shop table.\n\n\n\n\nCM1: Due Oct 30\n\n\nCM2: Due Nov 1\n\n\nResources\n\n\n\n\nRoland Vinyl Cutter\n\n\nDownload and install the Illustrator plugin\n (You only need to do this once). \nImportant: The driver only works up to Illustrator 2017.1 (21.1). It will not work with the latest Illustrator 2018.\n\n\nDownload the Users Manual\n\n\nRead through \"Simple! Basic Cutting\" section of the manual\n\n\n\n\n\n\nBantam Mill\n\n\nGetting Started Projects\n\n\nBasic Project Workflow\n\n\nSetting Up Your Material\n\n\nInserting and Locating a Tool\n\n\nMaterials\n\n\nSafety\n\n\nSpeeds and Feeds\n\n\nFusion 360 Aluminum Ring Tutorial\n\n\n\n\n\n\nInspiration\n\n\nAdafruit Milling Mondays (Youtube Playlist)\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhase 4\n\u00b6\n\n\nWeek 10: Creative Coding\n\u00b6\n\n\nOct 30 / Nov 1\n\n\n\n\nCreative coding\n is a type of computer programming in which the goal is to create something expressive instead of something functional. It is used to create live visuals and for VJing, as well as creating visual art and design, art installations, projections and projection mapping, sound art, advertising, product prototypes, and much more. (\nSource: \nWikipedia\n)\n\n\nGenerative design\n is a form finding process that can mimic nature\u2019s evolutionary approach to design. It can start with design goals and then explore innumerable possible permutations of a solution to find the best option. By using cloud computing, generative design can cycle through thousands\u2014or even millions\u2014of design choices, test configurations and learn from each iteration what works and what doesn\u2019t. The process can enable designers to generate brand new options, beyond what a human alone could create, to arrive at a most effective design. Most generative design, in which the output could be images, sounds, architectural models, animation etc., is based on algorithmic and parametric modeling. It is a fast method of exploring design possibilities that is used in various design fields such as art, architecture, communication design, and product design. (\nSource: \nWikipedia\n)\n\n\nRelated topics: \nEmergence\n, \nComplex Systems\n, \nSelf-organization\n\n\nExamples\n\n\nProcess Compendium 2004 - 2010 (PDF)\n, \nCasey Reas\n / \nProcess Compendium (Introduction) Video\n\n\nunnamed sound sculpture embodiment of sound, onformative, 2012\n\n\nThe Recode Project\n\n\nCreative Applications\n\n\nNervous System\n - Web based design tools\n\n\nHexatope App\n / \nHexatope | Design your own unique jewelry\n\n\nWritten Images (Book)\n\n\n\n\n\n\nTools / Frameworks\n\n\nProcessing\n - \nJava\n\n\np5.js\n - \nJavascript\n\n\nOpen Frameworks\n - \nC/C++\n\n\nthree.js\n - \nJavascript/WebGL\n\n\nMax\n - \nVisual Programming Environment\n\n\nThere are many more tools out there to explore. See a more extensive list on the \nCreative Coding\n page.\n\n\n\n\n\n\nScripting (aka writing code)\n\n\nMany design tools such as Rhino, Fusion 360, Maya, and others offer an interface or API for running scripts using a application specific or general purpose programming language such as Python. This enables the generation of complex geometries that would otherwise take a very long time to model by hand.   \n\n\n\n\n\n\nHands on Processing - Lets make something!!\n\n\nWhat is Pseudocode?\n\n\nNaming Conventions\n - ie. \nCamelCase\n\n\nSyntax Color - ie. Reserved keywords of the Processing language such as \nsetup() and draw()\n\n\nProcessing Reference\n\n\nWhere to begin? Sketch by hand (on paper) and sketch by code! Run. Repeat!\n\n\nWhat is sketching?\n\n\nEnvironment - \nsetup(), draw(), width, height\n\n\nDrawing 2D Primitives - \nrect(), ellipse(), line()\n\n\nWorking with Color - \ncolor()\n\n\nAnimation - \nframerate()\n\n\nPrimitive Data Types - \nint, float, boolean, char, string\n\n\nData Structures - Strings, Arrays\n\n\nInteractivity with mouse and keyboard\n\n\nTypes of output\n\n\n2D - Raster and Vector graphics - PNG, JPG, PDF, SVG\n\n\n3D - Meshes / Geometry - STL, OBJ, XYZ\n\n\nData - TXT, HTML, \nXML\n, \nCSV\n, etc. All other data can be represented as some kind of \nASCII\n (\nUTF-8\n) or binary text file.\n\n\n\n\n\n\nLibraries\n\n\n\n\n\n\n\n\nSome resources for this week's assignment\n\n\n\n\nTime, Clocks, and Timekeeping    \n\n\nMaeda's 12 O'Clocks\n\n\nLECTURE 09-09B: CLOCKS (60212: Interactivity & Computation), Golan Levin - CMU School of Art\n\n\nA Minor History of Time Without Clocks by Joshua Foer\n\n\nTimeLine - A Brief Introduction To The History Of Timekeeping Devices by Joshua Foer (Video)\n  \n\n\nA 5-page chapter on \"Timekeeping\"\n (PDF) by Johanna Drucker, from her book Graphesis: Visual Forms of Knowledge Production (Harvard Press, 2014).\n\n\nA 6-minute YouTube video on the history of timekeeping devices\n\n\nHistory of Timekeeping Devices\n (Wikipedia)\n\n\n\n\n\n\nInspiration\n\n\nFerrolic by Zelf Koelman\n - Ferrofluid clock\n\n\nDislocation Clock by Hanhsi Chen\n\n\n\n\n\n\n\n\nAssignment 7: Shop Clock\n\u00b6\n\n\nChallenge: The shop is in need of clock. Design a clock that displays the current time using Processing that will run as a full screen stand alone application.\n\n\nLook to the time and clock based resources for inspiration and guidance for the design of your clock and the creative coding / programming resources for inspiration in programming and exploring what's possible through code. Feel free to experiment with any graphical tools at your disposal, including color, shape, transparency, etc. Explore object arrangement, color, typography, grids, layouts, animation, interactivity, form, shapes, scale, simulation, readability, visibility, and algorithms to devise a novel graphic concept representing a device that performs the function of displaying time. Your design can be as literal as displaying the digits of a clock and/or more abstract, artistic, and/or expressive. The goal of this assignment is to give you practice in using code to control visual design over time. All clocks will then be displayed in rotation on a screen mounted somewhere in the shop.\n\n\nTips: Processing has functions for working with time - hour(), minute(), second(), and millis() functions. You may also wish to explore other functions such as day(), month(), and year() for clocks that change with the time of the year.\n\n\n>> \nSample Code\n <<\n\n\nDeliverables:\n\n\n\n\nA 30-60 second video capture of your Processing application running and a brief writeup, posted to your website, describing your creative approach to designing your clock. Include photos / scans of hand sketches and screenshots of your clock design and process. \nHint: Write some code to enable quick capture of screenshots (png or jpg) from your Processing program using the keyPressed() and saveFrame() functions. You may also be interested in capturing screenshots in pdf format using the \npdf library\n. Also, use a screen capture tool such as \nscreen capture video\n to record your application running\n. Be sure to include credit any reference materials such as code from Processing examples and other projects you used to develop and execute on your concept. Post a link to your project URL on slack #cmstudio.\n\n\nGithub repo with your Processing code. Include this link in your project writeup on your website.\n\n\n\n\nCM1: Due Nov 6\n\n\nCM2: Due Nov 8\n\n\nResources\n\n\n\n\nProcessing\n\n\nProcessing: A Programming Handbook for Visual Designers, Second Edition\n\n\nLearning Processing\n\n\nNature of Code\n\n\nThe Coding Train (Shiffman)\n - Great tutorials\n\n\nDan Shiffman Videos\n\n\nHYPE Framework\n\n\nOpen Processing\n  \n\n\nExperiments in Processing\n\n\nFun Programming\n\n\n\n\n\n\nGenerative Design\n\n\nEyeo 2012 - Nervous System: Jessica Rosenkrantz & Jesse Louis-Rosenberg\n / \nEyeo Festival\n\n\nJessica Rosenkrantz - Growing Objects @ FITC 2015\n\n\nJessica Rosenkrantz - Generative Design (2016)\n / \nSource\n\n\nCedric Kiefer - Generative Design @ Campus Party 2012\n\n\nGenerative Design: Visualize, Program, and Create with Processing\n - (\nWebsite\n, \nCode\n)\n\n\nThe Power of Generative Design is coming to Autodesk Netfabb 2018\n\n\n\n\n\n\nCreative Coding\n\n\nWhat is creative coding?\n - Bite size intro to creative coding and generative design\n\n\nDan Shiffman - Codeland - Creative Coding: An art and code showcase - NYC 2017\n - Great overview of a bunch of creative coding / media arts projects built using Processing.\n\n\nAwesome Creative Coding\n - Carefully curated list of awesome creative coding resources primarily for beginners/intermediates.\n\n\nSurvey of Creative Coding and Generative Design\n by Vadim Gouskov\n\n\nProgramming for Artists on Codepen\n    \n\n\nCode Plastic\n\n\nMonthly Creative Coding Collaboration (MCCC)\n\n\nCreative Coding with Processing and P5.js Facebook Group\n\n\nCoding Math (Youtube Channel)\n - JavaScript based\n\n\nUI Gradients (Color Tool)\n - Might be useful for finding that perfect gradient\n\n\n\n\n\n\nData Visualization\n\n\nVisual Complexity\n\n\nInfosthetics\n\n\nD3.js\n\n\n\n\n\n\nStudios / People (There are many more exploring this frontier.)\n\n\nonformative\n\n\nNervous System\n        \n\n\nfluu.id\n\n\nField\n\n\nSchool for Poetic Computing\n\n\nCasey Reas\n - Co-Creator of Processing\n\n\nZach Lieberman\n - Co-Founder of Open Frameworks\n\n\nJared Tarbell\n\n\nRobert Hodgin\n\n\nGolan Levin\n\n\nMarcin Ignac\n\n\nNicholas Felton\n    \n\n\nReza Ali\n\n\nMatt Deslauriers\n\n\nMarpi\n\n\nInconvergent\n\n\n\n\n\n\n\n\n\n\nWeek 11: Alexa\n\u00b6\n\n\nNov 6 / Nov 8\n\n\n\n\nReview creative coding projects\n\n\nCode review\n\n\nDiscuss challenges\n\n\nFeedback / Critique\n\n\n\n\n\n\nAmazon Alexa\n\n\nWhat is Alexa?\n\n\nVoice User Interaction (VUI)\n\n\nHow do I use it? After you setup an Alexa powered device (ie. Amazon Echo), and install the Alexa mobile app, you can start talking to Alexa! Ask Alexa anything you want! Start with \n\"Alexa, what is the weather today?\"\n.\n\n\nGetting Started with Echo Dot\n\n\nThings to Try\n\n\n\n\n\n\n\n\n\n\nVoice and beyond\n\n\nTerminology: \nVoice Interface Design, Voice User Interface Design, Voice User Interaction (VUI), UX of Voice, Conversational UI\n\n\nThe 2017 Voice Report by VoiceLabs\n - \nJanuary 2017\n\n\nAmazon\u2019s Alexa passes 15,000 skills, up from 10,000 in February\n - \nMarch 2017\n\n\nAmazon introduces paid subscriptions for Alexa skills\n - \nOctober 2017\n\n\nThe rise of the voice interface\n - \nJuly 2017\n\n\nThis is the Year of Voice UI\n - \nMay 2017\n\n\nCompetition? Apple Siri/\nHomePod\n, Google Assistant/\nHome\n\n\n\n\n\n\nAmazon Alexa (Powered / Enabled) Devices\n\n\nEcho & Alexa Devices\n\n\nMicroBot Push\n\n\nNest Thermostat\n\n\nRing Doorbell\n\n\nWemo Outlet\n\n\nPhillips Hue Lightbulbs\n\n\nPhillips Hue Light strip\n\n\n\n\n\n\nAlexa Skills\n\n\nSkills\n are the way you interact with Alexa. When you ask Alexa a question, ask for information, or request a song from Spotify, you are interacting with a skill.     \n\n\nAlexa Skills by Category (May 2017)\n\n\nComponents of a Skill\n\n\nInteraction Model (ie. Utterances, Intents, Slots, )\n\n\nHosted Service (ie. Lambda Function)\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 8: Alexa, Talk to me\n\u00b6\n\n\nPart 1: Write a Commentary\n\n\nRead three news articles about voice technologies and write a commentary on the the state of this industry. You can approach this from many directions. One suggestion is to start by thinking about where your personal interests intersect with the integration of voice technologies into every day life. Where do these technologies fit in your life? What areas of interest arise from reading the articles you chose? Are you interests in the technology itself? The hardware or software? The user experiences and how people engage with a kind of seemingly \ninfinite\n intelligence? What new devices might you imagine interacting with through voice? What concerns might you have with accessibility or privacy?\n\n\nThink about your interests in UX and what VUI means. How does and will interacting with machines verbally be different than by touch or traditional forms of interaction? Thinking about the future of this field and the dissemination of voice technologies into society, what might the next 2-5 years look like for VUI? What challenges do you foresee with using and building voice interactions and voice based user experiences?\n\n\nPart 2: Build a Skill\n\n\nWork through \nSection 1: Build your first Alexa Skill on Code Academy\n to get a feel for how to write a skill using the Amazon Alexa development tools. \nImportant:\n Be sure to use the specified AWS Lambda Amazon Resource Name (ARN) as the Service Endpoint Type (as shown in \nStep 9 of Build Your First Alexa Skill\n). Once you know your skill is communicating with the ARN used by the tutorial, proceed to change it to \narn:aws:lambda:us-east-1:878223637038:function:criticalMaking\n and add the following Intent, based on your name, to your Interaction Model. If you need help creating a new Intent using the Interaction Model (Beta Builder), go through the steps outlined in \nSection 1 Part 2: Create a New Intent\n of the Code Academy tutorial. \nYou do not need to go beyond Part 2 of this tutorial unless you want to dive deeper in.\n\n\nWhy are you changing the Amazon Resource Name (ARN) in your Alexa Configuration panel?\n\n\nWell, I created the ARN (result of using AWS Lambda) you are now pointing your skill to and added Intents based on your names to the Lambda Function. For example, your intent will be formatted like this \"FirstnameLastnameIntent\". ie. \"JimMurphyIntent\". Essentially, the utterances you define in your Interaction Model will map to the Intent functions I created in the Lambda Function. Feel free to use any number of custom utterances you want. If done correctly, you should hear a response of \"Your Name!\" when you say \n\"Alexa, ask Critical Making what my name is\n or \n\"Alexa, ask Critical Making my name\n or any other custom utterances you add. If you are curious about the Lambda function you can see how I set it up \nhere\n.\n\n\nCreate these utterances as part of your Intent:\n\n\n\n\nwhat my name is\n\n\nmy name\n\n\nwhats my name\n\n\n\n\nOnce you have updated you Interaction Model to include your personal Intent and utterances record a video demonstrating the results with either EchoSim or a physical Alexa Echo Spot Device. Embed the video in the project page on your website.\n\n\nTips: Gain a basic level understanding of the key components involved with designing and creating skills by watching some of the tutorial videos and reading some of the documents for developing skills listed in the resources section below. Start by looking over the documentation provided for \nAlexa Skills Kit (ASK)\n and reading through \nSteps to Build a Custom Skill\n.\n\n\nDeliverables:\n\n\n\n\nPost your commentary on your website along with your video created in Part 2.\n\n\nA 30 second video capture your Alexa skill working via EchoSim or a physical Amazon Echo Spot device.\n\n\n\n\nPost a link to your project URL on slack #cmstudio.\n\n\nCM1: Due Nov 13\n\n\nCM2: Due Nov 15\n\n\nResources\n\n\n\n\nHistory of Talking to Machines\n\n\nRadiolab: Talking to Machines\n\n\nBefore Siri: The History of Talking To Computers\n\n\nSound it out: the (sometimes creepy) history of the talking machine\n\n\nDesign for voice interfaces\n - \nOctober 2015\n\n\n\n\n\n\nDesigning for Voice\n\n\nVoice Interfaces Are Here. Are They Necessary?\n - \nAugust 2017\n\n\nDesigning Voice Experiences\n - \nMay 2017\n\n\nGoogle's 3 Secrets to Designing Perfect Conversations\n - \nMay 2017\n\n\nThe Most Important Design Principles Of Voice UX\n - \nFebruary 2016\n\n\nHow to Design Voice User Interfaces\n\n\nVoice User Interfaces, Interaction Design (UX)\n\n\nThe UX of Voice: The Invisible Interface\n\n\nCombining Graphical And Voice Interfaces For A Better User Experience\n - \nOctober 2017\n\n\n\n\n\n\nVoice Design\n\n\nAlexa Voice Design Guide\n\n\nAlexa Voice Design 101\n - 1 hr webinar\n\n\n\n\n\n\nDeveloping Skills\n\n\nAlexa Skills Kit (ASK)\n - Entry point for all documentation, learning how skills work, and how to create them.\n\n\nSteps to Build a Custom Skill\n    \n\n\nUnderstanding How Users Interact with Skills\n\n\nUnderstanding How Users Invoke Custom Skills\n\n\nUse the Skill Builder (Beta) to Define Intents, Slots, and Dialogs\n\n\nIntents\n\n\nBuilt-in Intent Library\n\n\n\n\n\n\nSlots\n\n\nSlot Type Reference\n\n\n\n\n\n\n\n\n\n\nAdditional Development Resources\n\n\nAlexa Developers Youtube Channel\n\n\nAlexa Developers Twitter\n\n\nAlexa Enabled Devices\n\n\nAlexa Github\n\n\nAlexa Developer Blog\n\n\nAlexa Settings\n - \nSign In Required. Desktop app similar to the Alexa mobile app.\n\n\nAlexa Voice Profiles\n\n\nDeveloper Guide: What Is AWS Lambda?\n\n\nHost a Custom Skill as an AWS Lambda Function\n\n\nGetting Started with Lambda\n\n\nSSML Reference\n\n\n\n\n\n\nTutorials\n\n\nCode Academy: Learn Alexa\n - Great introductory tutorial for building skills. Start here.\n\n\nBig Nerd Ranch Introductory Tutorials\n - PDF available for each section of the tutorial on \ngithub\n.\n\n\nDeveloping Alexa Skills - Hello, Alexa! (Part 1)\n\n\nDeveloping Alexa Skills - Slots and Slot Types (Part 2)\n\n\n\n\n\n\nAmazon Alexa Tutorials\n\n\nAlexa Skill Builder - Part 2: Using intents, built-ins, and utterances\n - Good quick introduction to building a skill and working with the skill builder tools.\n\n\nAlexa Skill Builder - Part 3: Simplifying your code for multi-turn dialogs\n\n\nAlexa Cookbook\n - Code for examples shown in Part 2, Part 3, and more.\n\n\n\n\n\n\n\n\n\n\nDevelopment Tools\n\n\nEchoSim\n - Alexa Enabled Device Simulator\n\n\nUtterance Generator\n\n\n\n\n\n\n\n\n\n\nWeek 12: VR\n\u00b6\n\n\nNov 13 / Nov 15\n\n\n\n\nThe State of VR Technologies\n\n\nGoodbye Uncanny Valley\n\n\nGame UX Summit \u201917 | Dylan Urquidi Unity Labs | XR UX: Today & Tomorrow\n\n\nHTC VIVE Announces VIVE Arts Program\n - \nNovember 2017\n\n\nCable Robot Simulator\n\n\nHow Research Led to State-of-the-Art Entertainment, Caecilia Charbonnier, Dreamscape Immersive\n\n\n\n\n\n\nHTC Vive: Setup and Use\n\n\nUnity: Building Virtual Worlds\n\n\nPoly\n\n\nCGTrader\n\n\n\n\n\n\nPlay Time!\n\n\n\n\nWe will not have a VR assignment but you may wish to explore VR for your final project.\n\n\nAssignment 9: Final Project Proposal\n\u00b6\n\n\nThis week I'd like you to revisit your final project concept and decide how you would like to move forward with it. You are free to propose a new project or continue developing the one you started in week 1. Please provide a status update or new project proposal by the end of the week. You can review the final project parameters from week 1 \nhere\n. This project is to be completed as individuals but you are (highly) encouraged to share ideas and work together to assist each other. A good studio culture thrives on the cross pollination of skills, ideas, and the support of each other.\n\n\nAt this point you have gained experience with a variety of tools and technologies that you may wish to explore further for your final project. You may also wish to revisit and expand upon a previous assignment or project and develop it further. The purpose of the final project is to realize something from start to finish that utilizes any combination of skills, tools, and technologies required to support bringing your creative vision to fruition. What might this look like? Some possibilities include things that could be classified as products, digital / physical experiences, artifacts, installations, performances, platforms, artworks, tools, machines, devices, etc.\n\n\nAll behavior is motivated, therefore, it will be beneficial to revisit, reflect, and think about your interests in Critical Making and your work in other studios. What kinds of experiences to you want to create? What kinds of problems are you trying to solve? What kinds of creative visions are you trying to realize? How have the tools and skills you have explored this semester informed your other work? What opportunities do you see for developing a UX or branding based project using the tools from Critical Making? What questions do you have and/or what idea keeps coming back to you?  \n\n\nDeliverable:\n\n\nA new or updated final project proposal. It should include the following:\n\n\n\n\nProject Title\n\n\nProject Summary ~ 1 page max (ie What is it? What problem(s) are you solving? What will it do? How will it work?)\n\n\nKey components of your project (ie. Resources, skills, and technology needed to realize it ~ Materials, CAD, 3d Printing, Bantam Mill, Processing, Arduino, etc)\n\n\nMilestones you have hit thus far and what you plan to do in order to realize it in the weeks following Thanksgiving break. If you need to order some parts, what do you need? What questions do you have? Where do you feel you are lacking in skill and need assistance?\n\n\n\n\nUpdated: 11/10/17 - Note: There will be an event taking place on Saturday December 9th in the evening (details forthcoming). This will be a good opportunity to share your work at whatever level of completion and get feedback. It's not going to be a full critique but rather an opportunity to network and pre-view your work for outside audiences. Think about how you might setup your work to share in a public way. I can help brainstorm presentation setups.\n\n\nPost a link to your project proposal on slack #cmstudio.\n\n\nDue Friday Nov 17 (before Thanksgiving Break)\n\n\nNotice: I will send your current grade by Friday Nov 17th.\n\n\n\n\n\n\n\nThanksgiving Break (No Class)\n\u00b6\n\n\n\n\nPhase 5\n\u00b6\n\n\nWeek 13: Final Projects\n\u00b6\n\n\nNov 27 / Nov 29\n\n\n\n\nDec 9 Event Update\n\n\nOpen Studio - Discuss project proposals / progress\n\n\n\n\n\n\nWeek 14: Final Projects\n\u00b6\n\n\nDec 4 / Dec 6\n\n\n\n\nOpen Studio\n\n\n\n\nRemix Holiday Bash! ~ Saturday, December 9th, 2017\n\n\nCMCI STUDIO in collaboration with Intermedia Art, Writing and Performance Faculty and Critical Media Practices\n\n\n\n\nCMCI STUDIO\n\n\n1301 Walnut St, Boulder, CO 80302\n\n\n6pm - 7pm: IAWP & CMP Student Exhibition\n\n\n7pm - 11pm: Transmedia Performances\n\n\n\n\n\n\nWeek 15: Final Projects\n\u00b6\n\n\nDec 11 / Dec 13\n\n\n\n\nCourse Evals - 6:30-6:45pm\n\n\nFill out the course eval (Login with user id required): \nhttp://colorado.campuslabs.com/courseeval\n\n\n\n\n\n\nOpen Studio\n\n\n\n\nThe last official day of classes is Thursday, December 14th, 2017. All assignments and projects from the semester need to be in by this time. You are free to revisit and iterate on any assignment or project to improve the grade you have. Your final project is due next week when you present on December 18th.\n\n\n\n\nWeek 16: Finals Week\n\u00b6\n\n\nDec 18\n\n\nCM Studio: Final Project Showcase\n\nMonday, December 18th, 6:30-9:30pm\n\n\nPresentations\n\n\n\n\nPlease have your project setup and on display as you intend to present it before we start presentations.\n\n\nBe prepared to talk about your project for 5-7 mins. I suggest preparing a presentation that includes a problem / project statement, any relevant research done, images and video of prototypes and your creative process, lessons learned, and possible next steps (future work).\n\n\nWe will try to stay within the timeframe of 10 mins max per person so everyone has the opportunity to present. Please make sure any demonstrations fall within this timeframe.",
            "title": "Fall 2017"
        },
        {
            "location": "/fall-2017/#critical-making-1-2",
            "text": "Nothing is a mistake. There's no win and no fail, there's only make. ~ John Cage  Critical Making Studio is the foundational experience enabling students to realize their full potential as creative citizens in BDW Studios. Central to the studio are four courses, Critical Making 1 and 2 (Fall), and Critical Making 3 and 4 (Spring), in which students enter into an experience as transformative and diverse as the participants themselves; all unique threads woven into whole cloth, informing the very fabric of studio culture. The courses aim to ground students in making as a deeply personal practice and ongoing journey in life thereafter, resulting in creative citizens capable of realizing that which they can envision utilizing a combination of their talents, intellect, abilities, creative faculties, and support networks.  The studio experience is made possible by 24 hr, 7 days a week, access to a state-of-the-art rapid prototyping and fabrication lab facility, media editing suite, and studio workspaces that can be transformed into a variety of configurations supporting activities such as artistic performances and special events. Additionally, access to fellow students, faculty, and industry partners provides an unparalleled educational experience and support network for developing transformative solutions spanning a variety of creative industries.  Instructor:  RJ Duran  rj.duran@colorado.edu \nSlack: @rjduran. #cmstudio on bdw1301.slack.com \nOffice hours by appointment. Feel free to reach out to me via slack or email.",
            "title": "Critical Making 1 &amp; 2"
        },
        {
            "location": "/fall-2017/#course-resources",
            "text": "This website is the primary resource for all critical making studio courses. Most of the resources used in the courses are divided up into sections that can be found on the left sidebar. Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you will need to choose some to learn and work with. There are pros and cons to any tool but all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you as long as the work gets done. As we move through the phases of the course feel free to recommend, add, and update the tools we and you find useful on this site. Also, note that anything specific and relevant to an assignment or project will be listed out under the assignment or project deliverables.  Be sure to check the  Class Links  section weekly as there will surely be different things covered in the two courses. The topics of in class discussion will be unique and emergent as the conversation progresses. As always, if you miss a day or just want to know what went on in a different class, get in touch with me and/or talk with your class mates and share ideas. I will make a point to hit some main points in both courses so everyone is getting most of the same information, perhaps in a slightly different order at times.",
            "title": "Course Resources"
        },
        {
            "location": "/fall-2017/#workload",
            "text": "The critical making studio courses are each 3 credit hours. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week if you are taking only one studio course (CM1 or CM2) and 12-18 hours per week if you are taking both studio courses (CM1 and CM2). Consider 6 hours a minimum expectation for one studio course, 12 hours for both studio courses and plan accordingly.     Assignments given each week are due the following week by 11:59pm on the due date specified unless otherwise noted.  Students taking both courses simultaneously (CM1 and CM2) should submit all work on the CM2 due date. (FYI: There are only 2 of you. Everyone else is in CM1  or  CM2.)    Projects are assigned in the 3rd week of each phase and due the following week. Projects can be thought of as a slightly more refined assignment as they will build on the skills acquired in the phase.",
            "title": "Workload"
        },
        {
            "location": "/fall-2017/#phase-1",
            "text": "",
            "title": "Phase 1"
        },
        {
            "location": "/fall-2017/#week-1-intro-to-critical-making-and-cad",
            "text": "Aug 28 / Aug 30   Introductions  What is Critical Making?  Course Website / Schedule  Computer-Aided Design (CAD)",
            "title": "Week 1: Intro to Critical Making and CAD"
        },
        {
            "location": "/fall-2017/#assignment-1-final-project-concept",
            "text": "Create a \"model\" (sketch, raster, vector, 2D, 3D, render, animate, simulate, etc.) of a possible final project. The word \"model\" is meant to be understood as any kind of digital or physical representation of an idea or concept you are excited about pursuing in your course of study in critical making. Possible examples: objects, artifacts, products, digital-physical experiences, installations, performances, platforms, artworks, tools, machines, devices, etc. Think about the things that have come up related to the tools and machines we will be working with in the digital and physical realms, our broad discussions thus far, and how the various ideas around the amorphous \"critical making\" resonate with your ideas and ambitions. Think about the various concepts, tools, and technologies associated with your other studio courses and how they resonate with you and your creative process. Explore possibilities for expression and cross pollination. As always, time is finite, and making is critical to our progression, so explore the various tools and skill sets you already know and try out some new tools you may have only just heard of this week. The most important thing above all is that you make something to the best of your abilities in the time you have. Send me any questions you have.  Deliverable:\nWe will review and discuss final project concepts in class. You will then post your concept to your soon to be created website. Email me any pdfs, sketches, photos, and/or models with a project title and description by Sept 6, 11:59pm.  Optional: You might consider recording a short video describing your project using a screen capture tool such as  Screencast-o-matic . If you do this, create a  Youtube  account, upload your video, then provide the link to you video via email submission.  CM1 & CM2: Due Sep 6 [Wed]  CM1: Since we won't have class until the week after Labor day, we will postpone our in person discussion about project concepts until the following class on Sept 11. Still proceed to submit your concepts via email by Sept 6, 11:59pm.  Resources   Rhino 3D  Download Rhino  - Free for 90 days. Edu License ~$90 @ CU Bookstore  Rhino Tutorials  Rhino 5 Essential Training    Fusion 360  Fusion 360 Students Download  - Free for students. Make an Autodesk account and install.  Learn Fusion 360 in 60 Mins  Fusion 360 Design Academy  Fusion 360 Adoption Portal    Bootcamp  - How to dual boot your Mac with Windows. Required if you want to use both Windows and Mac operating systems on your Mac. As students, you can download Microsoft software through OIT.  Learn more and download here .  Screencast-o-matic ,  Download Link  - Screen capture software for sharing projects, making tutorials, and more.  How to take a screenshot on your Mac  7 ways to take screenshots in Windows 10",
            "title": "Assignment 1: Final Project Concept"
        },
        {
            "location": "/fall-2017/#week-2-project-management-development-tools",
            "text": "Sept 4 / Sept 6   CM1: Labor Day (No Class)  CM1: Review resources in  Project Management . Spend some time investigating the tools available in order to complete assignment 2.  CM2: Visit  Boulder Makerspace (BLDG 61)  ( map ) during Drop-In Hours on Weds Sept 6th, 3-7pm.  Meet at BLDG 61 Makerspace at 6:30pm then walk back to studio after.  There is another Drop-In time on Saturday Sept 9th from 3-7pm. I recommend going to visit if you are in the CM1 class on Monday. Also, check out their  calendar and events  for more dates if you can't make the 9th.  Development Tools . Spend some time investigating these tools. Read about them, download some, try them out. Dedicate more energy to learning about  Atom  and the  Web Languages I  section.",
            "title": "Week 2: Project Management, Development Tools"
        },
        {
            "location": "/fall-2017/#assignment-2-website-analysis-github-repo",
            "text": "Part A:  Explore different approaches to creating websites by analyzing existing sites and learning about the technologies they are built with.  Evaluate different options such as content management systems (CMS), free/paid templates, hand coding HTML/CSS pages, etc. Locate 3-4 websites you find interesting and comment on the pros and cons of the site design and organization. What works? What doesn't? Good design? Bad design? Good UX? Bad UX? Possible places to start: Look at portfolio sites, creative agency sites, image based or image oriented sites like those used in photography or art direction, look at sites that portray a product or service in an appealing way, sites you frequently visit, project blogs, websites that document a project or creative process, etc. The purpose here is to begin to understand how the Internet works and how websites work.  In critical making we place emphasis on the creative process and understanding the successes, failures, and happy accidents that inform and guide the creation of an idea and perhaps product. Possible uses for a website like this: documenting a project, course, series of projects, workflow, tracking your growth and progress, a portfolio showcasing your ideas from start to finish and the lessons learned along the way, or some combination of all the above. As consumers of information and projects about making things and how to make things we acknowledge the work that people like ourselves put in to transmitting ideas for others to learn and grow from. We want to always pay it forward and be content creators in the digital space, and a website like this can achieve that goal. Visit  Instructables  to see examples of documenting projects for others to follow. Personal sites, like the following, are quality examples of project oriented coursework.  Chikara Inamura (HTMAA 2014) ,  Matt Keeter (HTMAA 2011) ,  Christos Tzamos(HTMAA 2014) ,  Zach Seibold (HTMAA 2014) ,  Merav Gazit (HTMAA 2014)  Deliverable:\nA thoughtful commentary on the sites you have evaluated. Post your response to slack #cmstudio or  (optionally and for gold stars)  create a repo as instructed in Part B and commit your commentary to this repo and post the repo link.  \"Repo\" = Short for Git Repository . If you find yourself asking, \"what makes this website look or work this way?\" just right click on the page and choose \"View Page Source\" or \"Inspect\" (if using Google Chrome).  Part B:  Create a  Github  account and go through a Git and Github tutorial. Learn about how to make a project and commit it to a repo.  Deliverable:\nYour github URL (Ex:  https://github.com/rjduran ) and link to repo (Ex:  https://github.com/rjduran/cm ). Posted to slack #cmstudio.  CM1: Due Sep 11  CM2: Due Sep 13  Students taking both courses simultaneously (CM1 and CM2) should submit all work on the CM2 due date. (FYI: There are only 2 of you. Everyone else is in CM1  or  CM2.)  Resources   Git / Github (aka version control based website that hosts Git repositories)  Github Tutorial (10 mins)  - Non command line (Terminal) tutorial.  Git - The Simple Guide  - Command line based tutorial.  Git & Github Tutorial on Udacity  - Command line based tutorial.  Start a new git repository  git/github guide a minimal tutorial  The most important git commands  Git Immersion  - Advanced Tutorial. Work through this once you get the hang of working on the command line.    Terminal  How to use Terminal on Mac ,  How to use a Terminal on Windows  MacOS/Linux/Unix Command Line Cheat Sheet ,  Mac Terminal Cheat Sheet ,  Another Cheat Sheet  How to show hidden files and folders including ~/Library on a Mac  - The benefit of doing this is you can see whats  actually  on your machine. By default, MacOS and Windows systems hide lots of stuff. To be a master of your machine(s) you need to begin learning whats hidden just under the surface.    Markdown  Mastering Markdown  Markdown Docs  Markdown Cheatsheet    Documenting Projects  Instructables  Hackaday  Chikara Inamura (HTMAA 2014) ,  Matt Keeter (HTMAA 2011) ,  Christos Tzamos(HTMAA 2014) ,  Zach Seibold (HTMAA 2014) ,  Merav Gazit (HTMAA 2014)  Autodesk Pier 9 Artist Residency Projects  Tales of a 3D Printer  - Example of a \"build\" blog.  DIY 3D Printing  - Another example of documenting projects and process.  Fab Academy ,  Fab Academy Class Archive  - Tons of projects done by people all over the world.",
            "title": "Assignment 2: Website Analysis + Github Repo"
        },
        {
            "location": "/fall-2017/#week-3-web-development",
            "text": "Sept 11 / Sept 13   CM1: Discuss final project ideas in class.   CM1 & CM2: Answer any questions about Assignment 2    Terminal Review   Common commands:  cd, ls, mkdir, rmdir, rm, mv, cp, pwd, man . Think of all these commands as tiny applications that have no GUI. They are very old and have been around since the start of Unix based systems (Read this to learn more:  Looking back at OS X's origins ). Look at  MacOS/Linux/Unix Command Line Cheat Sheet  to see more information about common commands.  Working with directories and files:  cd <folder>  - Goto into a folder  cd ..  - Go up one level  cd ../<folder>  - Go up one level (to parent folder) and into a child folder  cd ../..  - Go up two levels etc  Tab completion - When you start typing in a terminal you can hit tab to complete the command if the file or folder you are going to use is available. If you hit Tab twice, you will see the contents of a folder.    Git commands:  git, git log, git clone, git add, git commit, git push    Git/Github Review / Markdown Review  Markdown = text file with special syntax that gets converted into HTML. For example, README.md is the default markdown file you can include in a Git repo. Review  Markdown Cheatsheet .  Clone your created repo:  git clone <repo url> . For Example,  git clone git@github.com:rjduran/cm-tools.git .  Make some changes: (Using text editor of some kind - Atom, vi, TextEdit, notepad)  Add changes to  staging  area:  git add my-file.md  Commit those changes:  git commit -m \"my message describing changes\"  Push those changes to the repo:  git push .  Pro tip: At this stage you will likely need to enter your Github username and password. Read through  Connecting to Github with SSH  to setup your system to connect securely to Github and not require you to enter your credentials each time you push changes.  Dillinger (Markdown to HTML Editor)    Web Development 101  Web Languages (HTML/CSS/JS) ,  Protocols  Web Dev Bootcamp: Work through hand coding basic HTML/CSS/JS website.    Domains  (Registrar) and  Hosting  (Servers)  FTP , SCP, SSH  Localhost  (XAMPP, MAMP, BitNami)  Chrome Dev Tools/ Inspector for debugging  Embedding content from Youtube, Vimeo, etc using  <iframe></iframe>  tags    CMS Tools  Templates",
            "title": "Week 3: Web Development"
        },
        {
            "location": "/fall-2017/#project-1-make-a-website",
            "text": "Part A:  Utilizing any web development tools of your choosing, create a website that serves as a project portfolio for your critical making coursework. Along with documenting your assignments, you might consider making a section of your site for documenting process oriented things like prototypes, experiments, best practices, research, and reflections. You may opt to create a site that is built from scratch (HTML/CSS -  JS not required ), a CMS, or any kind of template. Regardless of the approach, the website needs to contain the following:\n1) an organizational structure to document your work in pages or posts,\n2) site navigation so its easy to locate content,\n3) some kind of  design aesthetic  to make it your own (Hint: experiment with css and/or CMS styling options).   Your site should be live on the internet at a domain of your choosing. You don't necessarily need to purchase hosting and a domain if using a free CMS with hosting such as wordpress.com. You are also free to make use of a website you already have. If you choose this option, you still need to have a dedicated section of your site for critical making.  Part B:  Your site needs to contain a page or post with your final project concept(s) and roadmap. Be sure to include any text, images, and/or video you have created to communicate your idea. Be sure to include any reference material and provide links to the original sources (ie. pinterest boards, reference images of similar work, websites, etc). Identify some milestones you would like to hit in order to accomplish your project goal by the end of the class.  Take a look at the resources from last week to see some approaches to documenting projects like this.  Deliverables:   A URL to your website. Include a brief description about the technology used to build your site. Posted to slack #cmstudio.  Optional: A github link to the repo containing the code for your website.  This is only if you created your site from scratch or worked directly with the HTML/CSS/JS and wish to share it openly via Github.   CM1: Due Sep 25  CM2: Due Sep 27  Resources   Development Tools  Blogs / Wikis / CMS Tools  Design Tools  Your classmates",
            "title": "Project 1: Make a Website"
        },
        {
            "location": "/fall-2017/#phase-2",
            "text": "",
            "title": "Phase 2"
        },
        {
            "location": "/fall-2017/#week-4-ux-strat-conference",
            "text": "Sept 18 / Sept 20  CM1 & CM2: No Class.  We won't have class this week since most are participating in the  UX Strat conference .  As such, I have extended the deadline for Project 1 by one week, now due on Sept 25 (CM1) and Sept 27 (CM2).  There is however still an assignment based on your participation in the conference. If you aren't volunteering at the conference you still need to submit a response exploring something recently new to you. Assignment 3 will have the same due date as Project 1 so plan accordingly.",
            "title": "Week 4: UX Strat Conference"
        },
        {
            "location": "/fall-2017/#assignment-3-ux-tools-make-something",
            "text": "As you will be immersed in a conference with talk of strategies and cutting-edge tools for UX, take note of the different tools and technologies being used by the presenters and people you meet. Share your insights through post(s) on your website, via slack #cmstudio, and with the time you have in the days following the conference, take action by  making something  with any of the tools you encounter. What can you do with any of them just after learning about them? How can you get your hands dirty and make something? How do they start to integrate with your workflow?  \"making something\" could mean a variety of things. Based on what we have talked about in regards to critical making as a studio and practice, think of making things that not only benefit you in your understanding of something, but also make something accessible for someone else. You may be inspired to create a quick 3-5 min tutorial (written/video/etc) on a technique learned with a new tool or technology. You might just want to share your insights in use cases with others in a way that exercises your creative muscles visually, spatially, or otherwise. Think about what inspires you to create things and how you take action in sharing those things you create.  Deliverable:   A reflection / demo (written and/or  screen capture video ) sharing your insights of at least 1 tool or technology encountered at the conference. If applicable, include details of what you made and your process in doing so. Did you sketch first? Just jump into it and play around? Did you follow documentation or watch videos to understand more? You may share your response on your website and/or post to slack #cmstudio.  If you haven't by now created a  Youtube  or  Vimeo  account, you might want to because it makes sharing videos much easier. Both services have free options.  Optional: A github link to the repo containing any code you authored or experimented with.   CM1: Due Sep 25  CM2: Due Sep 27",
            "title": "Assignment 3: UX Tools + Make Something"
        },
        {
            "location": "/fall-2017/#week-5-physical-computing-i",
            "text": "Sept 25 / Sept 27   CM1 & CM2: Answer any questions about Assignment 3 and Project 1. Talk about remainder of Phase 2 and where we're headed in Phase 3.  Arduino 101  Hardware ,  Arduino Uno Specs       IDE ,  Language Reference  Serial Monitor (for monitoring board input and output) - Tools > Serial Monitor  There are many different shapes and sizes of Arduino's available, how do you choose hardware for a project?  Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)  Built In Examples  Blink  - Uses a LED  AnalogReadSerial  - Uses a Knob  AnalogInOutSerial  - Uses a Knob and a LED through  Pulse Width Modulation (PWM)      Sensors and Devices (Input / Output)  Input:  Knobs (Potentiometers aka Variable Resistors) ,  Buttons/Switches  Output:  Light Emitting Diodes (LEDs)    Sourcing Parts from  Sparkfun  and/or  Adafruit  Basic Electronics  What is  Electricity ?  Sparkfun - Where Do I Start?  Voltage, Current, Power        Tools for Prototyping  Breadboards  Jumpers (Wires)",
            "title": "Week 5: Physical Computing I"
        },
        {
            "location": "/fall-2017/#assignment-4-its-almost-electric",
            "text": "Look ahead to  Project 2: It's Electric!  and prepare a list of parts and supplies you will need to build your chosen project. Writeup a brief summary of what you plan to build and submit this along with your list of materials via #cmstudio.  Indicate which items you require that need to be ordered. We can get an educational discount by ordering through Sparkfun so try to use parts available there if you can. For anything else you require you should place an order with that supplier ASAP so you can get your parts in time to work with them. I will put in a Sparkfun order early next week on Monday or Tuesday. .  Reach out via slack with any questions on suppliers, materials, project concepts, etc.  CM1: Due Oct 2  CM2: Due Oct 4  Resources   Arduino - What IS it?  - Great overview of Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)  Massimo Banzi: How Arduino is open-sourcing imagination (TED Talk)  Arduino IDE  Arduino Language Reference  Project Examples - Start here for project inspiration      Instructables  20 Unbelievable Arduino Projects  Arduino Playground  20 Projects to Celebrate Arduino Day  Hackster.io Arduino Projects  DIY Hacking Arduino  Arduino Projects on Pintrest  Arduino Project Hub    Sparkfun  What is an Arduino?      Arduino Uno  Arduino Boards  Arduino Tutorials  Arduino Buying Guide  Arduino Products    Adafruit  Arduino Uno  Arduino Learning System  Arduino Products",
            "title": "Assignment 4: It's (almost) Electric!"
        },
        {
            "location": "/fall-2017/#week-6-physical-computing-ii",
            "text": "Oct 2 / Oct 4   CM1 & CM2: Answer any questions about Project 2.  More Electronics  Analog vs Digital  ADCs and DACs  Series and Parallel Circuits    More Arduino Boards  Arduino Pro Mini  Arduino Mega  Sparkfun Redboard  Sparkfun ESP32 Thing - Good for WiFi enabled projects!    Dig deeper into what Arduino's can do  Sensors, Sensors, and more Sensors  Tools for Prototyping  Multimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins.  How to use a multimeter    Soldering  Soldering Tutorial for Beginners: Five Easy Steps (Video)  How to Solder (Instructables)    Wires  Working with wire  How to Strip a wire      Work on Project 2 (Open Studio)",
            "title": "Week 6: Physical Computing II"
        },
        {
            "location": "/fall-2017/#project-2-its-electric",
            "text": "Choose one option  Option 1: Create  Create a project of your own. Using any Arduino (Uno, Mini, Mega, etc or variation of Arduino such as Sparkfun Redboard or Sparkfun ESP32 Thing) and a minimum of 1 input device and 1 output device, create a physical computing project that explores the application of input devices and output devices. Want to monitor the moisture content of your plants and deliver water when needed? Want to build a new kind of musical interface for expression and provide feedback to the user? Want to design real-time visualizations of environmental data? Want to build a piece of clothing that lights up in response to sound? Design a project and make it!  I suggest start by hand sketching your ideas out. What input devices do you need? What do they do? What output devices do you need? What do they do? What kind of behaviors do you want to program your Arduino to do? Write out the step-by-step logic then proceed to implement it in code. Experiment with simple Arduino \"sketches\" to understand the functionality of your input and output devices.  Option 2: Remix  Locate an existing Arduino-based physical computing project that you find intriguing and wish to explore by making it using any instructions included with the build. Make modifications to the project to make it your own.  Remix it!  Go at least one step further than the existing work. Explore possible project avenues through sites such as  Instructables ,  Sparkfun ,  Adafruit  and others. Source any parts not available in the shop but required by your project and build it.  Protip: Start on this part early to account for shipping etc. Sparkfun is local and typically has next day pickup.   Read through project write ups and watch videos (if available) before you decide to take on the project. Make sketches and notes based on your understanding of the project and think about what is required to complete your instantiation of the project. Pay special attention to the quality of project documentation, parts lists, and assembly instructions.  Option 3: Advance  Build a project that advances your final project concept. If it has an electronics component, brainstorm and ideate on what you might need to complete your final project and  implement a portion of it  using an Arduino. Seek out similar projects to learn from and build off of. Make sketches to explore your logic and understanding of the parts required by your project goals.  Think about your input devices and output devices. What purpose do they serve? What is required to read data from a device? What is required to write data to a device? What types of behaviors would you like your project to contain? What functionalities are possible with available hardware? - Where to start? Hand sketch the interactions you wish to encode using hardware and logic. Then proceed to build and test circuits. Repeat until you are satisfied with the results.  Deliverables:   Documentation including a project writeup, build photos, and/or 1-3 min video demonstration of your project. Describe the project motivation, objectives, hardware used, challenges encountered, and possible next steps if and/or when you are to go a step further. What is your project and what does it do? What else can you envision your project being used for? What insights do you have now that you have worked on this project? What advice might you have for others interested in following your lead?  You might consider writing up your project like an Instructable, providing a roadmap for someone else to follow.   Post your project deliverables to your website and share the project URL on slack #cmstudio.  A github link to the repo containing the Arduino code for your project.  Include github URL in your project deliverable on your website.   Make sure to give credit to any related projects, code, websites, articles, images, videos, or other source materials used by including them in your project writeup.  Bring your projects to class on Oct 9 (CM1) and Oct 11 (CM2) to demo.  CM1: Due Oct 9  CM2: Due Oct 11  Resources   Boards (Currently in the shop)  Arduino Uno  Sparkfun Redboard  Sparkfun ESP32 Thing    More about Input and Output Devices  Arduino Inputs  - Great overview of Inputs, Sensors, and Applications  Arduino Outputs  - Great overview of Outputs and Applications  Arduino Prototyping Techniques",
            "title": "Project 2: It's Electric!"
        },
        {
            "location": "/fall-2017/#phase-3",
            "text": "",
            "title": "Phase 3"
        },
        {
            "location": "/fall-2017/#week-7-3d-printing",
            "text": "Oct 9 / Oct 11   CM1/CM2: Project 2 showcase!  Additive Manufacturing Technologies (Image)   Source:  3D Hubs  Types of 3D Printing  FDM (Fuse Deposition Modeling) / Filament Based -  Ultimaker ,  Lulzbot ,  Makerbot ,  Markforged ,  Wasp  SLA (Stereolithography) / Resin Based -  Formlabs Form 2 ,  Ono  SLS (Selective Laser Sintering) / Powder Based -  Shapeways ,  Formlabs Fuse 1  Polyjet (Material Jetting) / Resin Based - Stratasys (Multi-material)    Slicing tools convert a 3D mesh (STL) into GCODE (aka a list of commands to run the printer)  Cura  is what we use for the Ultimaker.  Cura Manual  Slicing Process  Load STL file into Cura  Choose PLA material for Extruder 1 and PVA for Extruder 2 (If using support material)  Choose a print profile (aka Layer Height: Start with Fast or Normal options)  Choose an infill (Density)  Save GCODE file and copy to blue USB drive      FDM Materials Overview  Filaments:  PLA  and  ABS  are the most common. Other materials: Nylon, HIPS, TPU        Meshes  STL File Format for 3D Printing  /  STL (file format)  Tools for working with meshes  Meshlab  - Good for viewing meshes.  Meshmixer  - Good for manipulating meshes in preparation for printing.  Netfabb  - Good for looking at STL dimensions and repairing meshes before importing to Cura.  Pleasant3D (MacOS)  - Utility for quick viewing/resizing of STL files. MacOS only.      Thingiverse       3D Printing Services  Full Printed Video",
            "title": "Week 7: 3D Printing"
        },
        {
            "location": "/fall-2017/#assignment-5-bits-to-atoms",
            "text": "Design something and 3D print it in a material of your choice on the Ultimaker. Design your model to fit within a bounding box volume of 101.6 x 101.6 x 101.6 mm (4 x 4 x 4 in). This does not mean the object has to be exactly this size, it can and probably should be smaller to allow for shorter print times. Remember that larger objects and/or objects with finer print resolution (layer height) will take longer to print. Be sure to check your print time in Cura before starting a print so you know how long it will take. Also, be sure to only use support material if needed as it will increase print times. You will use Cura to slice your STL file and save/copy the GCODE file to the blue USB drive plugged into the machine. Note that Cura uses mm and doesn't include an option to change to inches. This means that if you design using inches you will have to scale your model up by a factor of 25.4 since there are 25.4 mm in an inch.  Work together to coordinate print jobs via slack #cmstudio.  Deliverables:   A 1-2 min video walk through of your design in a CAD package of choice.  Hint: Use a screen capture tool such as  screen capture video . Writeup a brief description of the your approach to creating your design. What problem were you trying to solve? What questions and challenges did you encounter while coming up with your design? Is your object functional or purely form based and artistic or a mix of both? Feel free to elaborate on the form and function of your design. Perhaps it is an extension of a past project or an attempt to make headway on your final project  (Recommended if you think you will have any kind of cases for electronics, modular components for your devices, attachments for motors, scale models of something larger, etc) . Post your description and video to your website and share the URL via slack #cmstudio.  A 3D printed model. Place all models on the black shop table next to the printer. In your writeup feel free to comment on any part of the printing process. What challenges did you encounter in the process and what solutions did you discover? slicing? the machine? materials? scaling your model? CAD vs physical object? thin vs thick areas?   CM1: Due Oct 16  CM2: Due Oct 18  Resources   Additive Manufacturing Technologies: An Overview  Week 1 CAD Resources  Design Guides - Think of these are useful resources regardless of the printing process.  What is the best type of plastic for my 3D printing application?  How to Design Snap Fit Components  How to Choose the Best Fasteners for 3D Printed Parts  Shapeways: Modeling & Design Tips 3D Printing Tutorials  Simplify3D: Print Quality Troubleshooting Guide  Repairing 3D Files With Meshmixer and Netfabb  Adding Screw Threads  i.materialise Design Guide  5 Mistakes to Avoid When Designing a 3D Model for 3D Printing  Key design considerations for 3D Printing  Enclosure design for 3D Printing: A step-by-step guide  Formlabs Tutorials  - Good design references even though we don't have a Formlabs printer (yet).    Post Processing  Ultimate Guide to Finishing 3D Printed Parts  Post processing for FDM printed parts  How to spray paint 3d models  XTC-3D Epoxy    Projects / Inspiration  Thingiverse  Microscape  - 3D printed cityscapes  Paper:  Thingi10K: A Dataset of 10,000 3D-Printing Models ,  Website         Print the Legend  ( Netflix )  Further Resources  Udemy: Designing for 3D Printing with Fusion 360",
            "title": "Assignment 5: Bits to Atoms"
        },
        {
            "location": "/fall-2017/#week-8-parametric-design-digital-fabrication",
            "text": "Oct 16 / Oct 18   Parametric design is a process based on algorithmic thinking that enables the expression of parameters and rules that, together, define, encode and clarify the relationship between design intent and design response. ( Source:  Wikipedia ),  Google Search  Digital fabrication is a type of manufacturing process where the machine used is controlled by a computer. The most common forms of digital fabrication are CNC Machining, Laser Cutting, and 3D Printing. ( Source:  Open Desk ),  Google Search  Examples      Parametric Design Examples  Organizations:  Co-de-iT ,  Zha Code Edu ,  Designmorphine  Projects:  Opendesk ,  Formlabs Digital Factory Pens ,  New Balance 3D Printed Shoe ,  Nervous System Kinematics Dress     Rhino + Grasshopper Demos  Demos - Manual, Espresso Cup, Waffle, Vase  Workflow Examples - Contouring, Nesting    Fusion 360  Parametric Modeling Basics  How to define user parameters (\"Sigma\" Icon)           Arduino Enclosure Demo  Slicing App (Plugin)",
            "title": "Week 8: Parametric Design &amp; Digital Fabrication"
        },
        {
            "location": "/fall-2017/#assignment-6-form-finding",
            "text": "Design a parametric model / system using a CAD tool of your choice and optionally fabricate one or more objects or instances of your design. Look to the resources provided for inspiration. Investigate form finding strategies such as iterative design, taking advantage of parameters that drive full system changes (ie. move a point, move a slider, or change a numerical value to cause change in the whole design and resulting in a new instance). Explore shapes and forms that you find intriguing, analyze existing design and geometries in 2D or 3D and begin to deconstruct underlying systems of logic. If you choose to make it physical, pay special attention to the scale of your design in relation to the fabrication process you plan to use.  Deliverables:   A 3-5 min video walk through of your design system in a CAD package of choice. At a minimum, generate 3 different instances or models from your system and show them in your video (For example, In the case of an Arduino enclosure, I would show three different 3D models that look similar but vary in size to support three different Arduino models with slightly different features such as UNO, Mega, and Sparkfun Redboard). Writeup a brief description of your design approach to accompany the video. What problem you were trying to solve? What forms did you find interesting and what parameters did you vary to produce such results? Perhaps the tools explored in this project will help advance your final project concept. If so, what opportunities do you now see to make headway on your final project? Be sure to credit any tutorials, blog posts, etc that you use. Post your description and video to your website and share the URL via slack #cmstudio.  Optional: Produce one or more physical models from your system using 3D printing, 2D paper printing/cutting, or laser cutting (Only if you have gone through the training at BLDG61 makerspace and understand the process). In your writeup feel free to comment on any part of the fabrication process. Include photos of the fabrication process and final models. What challenges did you encounter with the fabrication process? Place all models on the black shop table.   CM1: Due Oct 23  CM2: Due Oct 24  Resources   Parametric Design: a Brief History  Rhino  Think Parametric: Rhino 101 - Fundamentals of 3D Modeling  Plethora Project: Rhino Tutorials  Lynda.com Rhino 5 Essential Training    Grasshopper  Grasshopper Primer  Visual Programming in Rhino3D with Grasshopper  /  Amazon  Think Parametric: Grasshopper 101 - Introduction to Parametric Modeling    Fusion 360  Arduino UNO Enclosure Tutorial  ( Arduino UNO Model ,  Arduino Drawing ),  Shorter version  Parameter Driven Project Enclosure       Bookshelf Tutorial  Fusion 360 Manual - Change Parameters Dialog Box  Equations and Parameters in Dimensions  Udemy: Product Design in Autodesk Fusion 360 from idea to prototype  Fusion 360 Design Academy  Fusion 360 Adoption Portal  Making Parametric Models in Fusion 360    Inspiration  LaN: 3D Tiles  LaN: Folded  LaN: CNC Mill Interiors  LaN: Triangulation  LaN: 3D Space Shape",
            "title": "Assignment 6: Form Finding"
        },
        {
            "location": "/fall-2017/#week-9-cad-to-cam",
            "text": "Oct 23 / Oct 25   Overview of CAM  Computer-aided machining (CAM) is an application technology that uses computer software and machinery to facilitate and automate manufacturing processes. CAM is the successor of computer-aided engineering (CAE) and is often used in tandem with computer-aided design (CAD). ( Source:  Wikipedia )  Computer numerical control (CNC) is the automation of machine tools by means of computers executing pre-programmed sequences of machine control commands. This is in contrast to machines that are manually controlled by hand wheels or levers, or mechanically automated by cams alone. ( Source:  Wikipedia )  What is a toolpath?  What is  GCODE ?    Economies of Time and Tooling  Which fabrication process do I choose?  Is this the right process to produce my model?  Does the time and tooling required make sense to accomplish my goal?  Low to high resolution prototypes  Considering material and application    Basic process to prepare files for fabrication  Create your design as 2D curves or 3D model using CAD package (Rhino, Fusion 360, etc).  Generate toolpaths using CAM software.  (For example, Cura is a \"Slicer\" which is a type of CAM software, Fusion has CAM tools built in, and RhinoCAM is a CAM package/plugin for Rhino.) . The input to the CAM software will be based on the fabrication process. The toolpaths saved out of a CAM package are always a machine code file (ie.  GCODE  or a variation of it).  Run the GCODE file using a controller/software for the fabrication process.  (For example, the Ultimaker's controller is on the machine itself. You just tell it which GCODE file to read from the USB drive. This is similar to a laser cutter with a built in controller and memory. In the case of a vinyl cutter, CNC router, or CNC milling machine, the controller is commonly a computer connected to the machine sending chunks of data as the file is read. In the case of the Bantam Mill, we use their tool known as Bantam Tools.)          CAD to CAM Workflows  Working with 2D curves - Illustrator, Rhino, Fusion 360  2D file types -  EPS ,  AI ,  DXF ,  SVG ,  PDF   (Note: These are all Vector based graphics vs Raster based graphics. Photos in JPG and PNG file formats are examples of raster based graphics and are commonly used for laser engraving.)  Examples - Stickers (Vinyl), Cut & Fold (Laser), Cut/Engrave (Mill)    Working with 3D geometry (meshes, etc) - Fusion 360  3D file types -  STL  (most common)  Examples - Cut (Mill), 3D to 2D Contouring/Slicing (Laser)      Vinyl Cutting Demo/Process  Important: The driver only works up to Illustrator 2017.1 (21.1). It will not work with the latest Illustrator 2018.  Download and install the Illustrator plugin  (You only need to do this once)  Choose English > CAMM-1 > GS-24    Download the Users Manual  Make a 2D design file in Illustrator  Configure print settings in Window > Extensions > Roland CutStudio  Select GX-24    Load material into machine  Outline text/shapes  Print/Cut!    Bantam Mill Demos/Process  CM1:  Fusion 360 Aluminum Ring Tutorial  CM2: Adapted Ring Tutorial for Delrin  Create 3D CAD model  Switch over to the CAM workspace  Load Othermill Tool Library  Tool Types, Speeds and Feeds, Materials, Resources    Create a Setup  Setup WCS and Stock  Measure stock material, position model    Create 2D Toolpaths  2D > Face  2D > 2D Pocket  2D > 2D Contour    Simulate each toolpath  Choose post processor for \"othermill.cps\"  Save GCODE!  Download Bantam Tools  (Control software for operating the mill)  Open GCODE in Bantam Tools software  Turn on machine and Home it  Specify material dimensions and tape offset  Mount workpiece in machine  Insert / Change tool  Start job!  Remove finished object  Vacuum out all debris",
            "title": "Week 9: CAD to CAM"
        },
        {
            "location": "/fall-2017/#project-3-totally-fab",
            "text": "Choose one option  Option 1: 3D Print  Create an original design and 3D print it. Use the opportunity to advance your skills in designing for 3D printing in any of the following areas: new forms, complex geometry, multipart assemblies, tolerances, designing with fasteners (screws, etc), flexible materials such as TPU, print quality and resolution for a given application, embedding electronics such as sensors and LEDs, low to high resolution prototyping, or anything challenging your understanding of printing, materials, or form printability.     Tips: Explore some of the past resourced listed for 3D printing. Look through the design guides and seek out additional resources to aid your design process. As with most ideas turned into CAD models, I suggest start by hand sketching your ideas out. Think about the problem you wish to solve or the questions you have around whats possible with this tool / medium / material. Think about the forms you want to model, the parts you want to use in an assembly, the mechanical movements you wish to explore, etc. Don't let the tools or process get in the way of you producing an instance of your idea. Start simple and make many iterations until you get to something that communicates your intent. Think about print times and plan jobs accordingly.  Option 2: Vinyl Cut  Create an original design and vinyl cut it. Use the opportunity to advance your understanding of vinyl cutting in general and in any of the following areas: sign production for walls and windows, stickers for different form factors, design for complex surfaces (ie. not flat. Think about non-planar surfaces found in furniture, cars, lighting, etc), murals, layers, typography, areas of graphic design, branding, UX, or anything challenging your understanding of vinyl cutting, materials, or application. Perhaps this is a process that aligns with other efforts and projects in other studios.  Tips: Spend some time exploring graphic design and vinyl cutting projects. Think about places you may have seen vinyl cutting used and question the design process behind it. What parameters does one need to know about to work with the media? If you are working with typography, are there fonts better suited for vinyl cutting or laser cutting? What graphical elements work well for vinyl cutting but not for screen based representation? How can this media be used to communicate complex messages? Transfer tape can be used to make decals and apply vinyl to almost any surface. We have a roll of it in the shop you can use.  Option 3: Laser Cut  Note: This option is only for those that have gone through the BLDG 61 laser cutter training and can get in during guided practice hours. Look at the  BLDG 61 Calendar  and plan accordingly.  Create an original design and laser cut it. Use the opportunity to advance your understanding of laser cutting in general and in any of the following areas: multipart assemblies, 3D to 2D slicing/contouring for laser cutting, pressfit constructions, folding, new materials, projects utilizing both raster (engraving) and vector (cutting), geometry, patterns or anything challenging your understanding of design + laser cutting, materials, or building complex assemblies from laser cut parts.  Tips: Spend some time exploring graphic design and vinyl cutting projects. Think about places you may have seen vinyl cutting used and question the design process behind it. What parameters does one need to know about to work with the media? If you are working with typography, are there fonts better suited for vinyl cutting or laser cutting? What graphical elements work well for vinyl cutting but not for screen based representation? How can this media be used to communicate complex messages?  Option 4: CNC Mill  Create an original 2D or 3D design and cut it on the Bantam mill in the material of your choice. Use the opportunity to familiarize yourself with the Bantam mill and the workflow for generating toolpaths using Fusion 360. In the process you will be exploring how to setup projects on the mill, choosing tools, choosing materials, work holding, how speeds and feeds work in conjunction with the tool and material you choose, and how to run the machine safely.  Note: Unlike the 3D printer where you can click print and walk away, this machine you can't. This will require you to sit with the machine and monitor it for the entire job. You must also be sure to vacuum out the machine after use using only the red/black vacuum with the small hose attachment. We will review these procedures in class. Please read all  Safety  information before working with the machine. Send me any questions you have about the process, machine, or safety.  Tips: To be fair, this project will likely have the steepest learning curve because there are just more variables (ie. toolpath operations, machine operations, materials, tools, fixturing, workholding, and speeds and feeds). If you feel comfortable designing CAD models in Fusion 360 you should be in a place to work with the CAM tools. Start with some basic tool path operations such as 2D Facing (to cut a uniform surface), 2D contour (to cut objects out), 2D pocketing (to cut the inside of a shape out), and 2D adaptive clearing (to have more control over a 2D toolpath), and 3D adaptive clearing (if working on a 3D model).  Use the specified tool speeds and feed settings for the material chosen . Spend some time investigating other projects done with the mill. The  Adafruit Milling Mondays (Youtube Playlist)  is a great place to start.  Deliverables:   Documentation including a project writeup, build photos, and a 3-5 min video walkthrough of your design process and final results. Describe the project motivation, objectives, hardware used (if any), code written (if any), challenges encountered, and possible next steps if and/or when you are to go a step further. What problem you were trying to solve? What tools did you choose to work with? What part of the CAD to CAM process did you find most interesting and the most challenging? If you chose to make progress on you final project, which milestones did you hit and whats next? Be sure to credit any tutorials, videos, images, blog posts, etc that you use. Post your project deliverables to your website and share the project URL via slack #cmstudio.  Physical model(s). Place all models produced on the black shop table.   CM1: Due Oct 30  CM2: Due Nov 1  Resources   Roland Vinyl Cutter  Download and install the Illustrator plugin  (You only need to do this once).  Important: The driver only works up to Illustrator 2017.1 (21.1). It will not work with the latest Illustrator 2018.  Download the Users Manual  Read through \"Simple! Basic Cutting\" section of the manual    Bantam Mill  Getting Started Projects  Basic Project Workflow  Setting Up Your Material  Inserting and Locating a Tool  Materials  Safety  Speeds and Feeds  Fusion 360 Aluminum Ring Tutorial    Inspiration  Adafruit Milling Mondays (Youtube Playlist)",
            "title": "Project 3: Totally Fab"
        },
        {
            "location": "/fall-2017/#phase-4",
            "text": "",
            "title": "Phase 4"
        },
        {
            "location": "/fall-2017/#week-10-creative-coding",
            "text": "Oct 30 / Nov 1   Creative coding  is a type of computer programming in which the goal is to create something expressive instead of something functional. It is used to create live visuals and for VJing, as well as creating visual art and design, art installations, projections and projection mapping, sound art, advertising, product prototypes, and much more. ( Source:  Wikipedia )  Generative design  is a form finding process that can mimic nature\u2019s evolutionary approach to design. It can start with design goals and then explore innumerable possible permutations of a solution to find the best option. By using cloud computing, generative design can cycle through thousands\u2014or even millions\u2014of design choices, test configurations and learn from each iteration what works and what doesn\u2019t. The process can enable designers to generate brand new options, beyond what a human alone could create, to arrive at a most effective design. Most generative design, in which the output could be images, sounds, architectural models, animation etc., is based on algorithmic and parametric modeling. It is a fast method of exploring design possibilities that is used in various design fields such as art, architecture, communication design, and product design. ( Source:  Wikipedia )  Related topics:  Emergence ,  Complex Systems ,  Self-organization  Examples  Process Compendium 2004 - 2010 (PDF) ,  Casey Reas  /  Process Compendium (Introduction) Video  unnamed sound sculpture embodiment of sound, onformative, 2012  The Recode Project  Creative Applications  Nervous System  - Web based design tools  Hexatope App  /  Hexatope | Design your own unique jewelry  Written Images (Book)    Tools / Frameworks  Processing  -  Java  p5.js  -  Javascript  Open Frameworks  -  C/C++  three.js  -  Javascript/WebGL  Max  -  Visual Programming Environment  There are many more tools out there to explore. See a more extensive list on the  Creative Coding  page.    Scripting (aka writing code)  Many design tools such as Rhino, Fusion 360, Maya, and others offer an interface or API for running scripts using a application specific or general purpose programming language such as Python. This enables the generation of complex geometries that would otherwise take a very long time to model by hand.       Hands on Processing - Lets make something!!  What is Pseudocode?  Naming Conventions  - ie.  CamelCase  Syntax Color - ie. Reserved keywords of the Processing language such as  setup() and draw()  Processing Reference  Where to begin? Sketch by hand (on paper) and sketch by code! Run. Repeat!  What is sketching?  Environment -  setup(), draw(), width, height  Drawing 2D Primitives -  rect(), ellipse(), line()  Working with Color -  color()  Animation -  framerate()  Primitive Data Types -  int, float, boolean, char, string  Data Structures - Strings, Arrays  Interactivity with mouse and keyboard  Types of output  2D - Raster and Vector graphics - PNG, JPG, PDF, SVG  3D - Meshes / Geometry - STL, OBJ, XYZ  Data - TXT, HTML,  XML ,  CSV , etc. All other data can be represented as some kind of  ASCII  ( UTF-8 ) or binary text file.    Libraries     Some resources for this week's assignment   Time, Clocks, and Timekeeping      Maeda's 12 O'Clocks  LECTURE 09-09B: CLOCKS (60212: Interactivity & Computation), Golan Levin - CMU School of Art  A Minor History of Time Without Clocks by Joshua Foer  TimeLine - A Brief Introduction To The History Of Timekeeping Devices by Joshua Foer (Video)     A 5-page chapter on \"Timekeeping\"  (PDF) by Johanna Drucker, from her book Graphesis: Visual Forms of Knowledge Production (Harvard Press, 2014).  A 6-minute YouTube video on the history of timekeeping devices  History of Timekeeping Devices  (Wikipedia)    Inspiration  Ferrolic by Zelf Koelman  - Ferrofluid clock  Dislocation Clock by Hanhsi Chen",
            "title": "Week 10: Creative Coding"
        },
        {
            "location": "/fall-2017/#assignment-7-shop-clock",
            "text": "Challenge: The shop is in need of clock. Design a clock that displays the current time using Processing that will run as a full screen stand alone application.  Look to the time and clock based resources for inspiration and guidance for the design of your clock and the creative coding / programming resources for inspiration in programming and exploring what's possible through code. Feel free to experiment with any graphical tools at your disposal, including color, shape, transparency, etc. Explore object arrangement, color, typography, grids, layouts, animation, interactivity, form, shapes, scale, simulation, readability, visibility, and algorithms to devise a novel graphic concept representing a device that performs the function of displaying time. Your design can be as literal as displaying the digits of a clock and/or more abstract, artistic, and/or expressive. The goal of this assignment is to give you practice in using code to control visual design over time. All clocks will then be displayed in rotation on a screen mounted somewhere in the shop.  Tips: Processing has functions for working with time - hour(), minute(), second(), and millis() functions. You may also wish to explore other functions such as day(), month(), and year() for clocks that change with the time of the year.  >>  Sample Code  <<  Deliverables:   A 30-60 second video capture of your Processing application running and a brief writeup, posted to your website, describing your creative approach to designing your clock. Include photos / scans of hand sketches and screenshots of your clock design and process.  Hint: Write some code to enable quick capture of screenshots (png or jpg) from your Processing program using the keyPressed() and saveFrame() functions. You may also be interested in capturing screenshots in pdf format using the  pdf library . Also, use a screen capture tool such as  screen capture video  to record your application running . Be sure to include credit any reference materials such as code from Processing examples and other projects you used to develop and execute on your concept. Post a link to your project URL on slack #cmstudio.  Github repo with your Processing code. Include this link in your project writeup on your website.   CM1: Due Nov 6  CM2: Due Nov 8  Resources   Processing  Processing: A Programming Handbook for Visual Designers, Second Edition  Learning Processing  Nature of Code  The Coding Train (Shiffman)  - Great tutorials  Dan Shiffman Videos  HYPE Framework  Open Processing     Experiments in Processing  Fun Programming    Generative Design  Eyeo 2012 - Nervous System: Jessica Rosenkrantz & Jesse Louis-Rosenberg  /  Eyeo Festival  Jessica Rosenkrantz - Growing Objects @ FITC 2015  Jessica Rosenkrantz - Generative Design (2016)  /  Source  Cedric Kiefer - Generative Design @ Campus Party 2012  Generative Design: Visualize, Program, and Create with Processing  - ( Website ,  Code )  The Power of Generative Design is coming to Autodesk Netfabb 2018    Creative Coding  What is creative coding?  - Bite size intro to creative coding and generative design  Dan Shiffman - Codeland - Creative Coding: An art and code showcase - NYC 2017  - Great overview of a bunch of creative coding / media arts projects built using Processing.  Awesome Creative Coding  - Carefully curated list of awesome creative coding resources primarily for beginners/intermediates.  Survey of Creative Coding and Generative Design  by Vadim Gouskov  Programming for Artists on Codepen       Code Plastic  Monthly Creative Coding Collaboration (MCCC)  Creative Coding with Processing and P5.js Facebook Group  Coding Math (Youtube Channel)  - JavaScript based  UI Gradients (Color Tool)  - Might be useful for finding that perfect gradient    Data Visualization  Visual Complexity  Infosthetics  D3.js    Studios / People (There are many more exploring this frontier.)  onformative  Nervous System           fluu.id  Field  School for Poetic Computing  Casey Reas  - Co-Creator of Processing  Zach Lieberman  - Co-Founder of Open Frameworks  Jared Tarbell  Robert Hodgin  Golan Levin  Marcin Ignac  Nicholas Felton       Reza Ali  Matt Deslauriers  Marpi  Inconvergent",
            "title": "Assignment 7: Shop Clock"
        },
        {
            "location": "/fall-2017/#week-11-alexa",
            "text": "Nov 6 / Nov 8   Review creative coding projects  Code review  Discuss challenges  Feedback / Critique    Amazon Alexa  What is Alexa?  Voice User Interaction (VUI)  How do I use it? After you setup an Alexa powered device (ie. Amazon Echo), and install the Alexa mobile app, you can start talking to Alexa! Ask Alexa anything you want! Start with  \"Alexa, what is the weather today?\" .  Getting Started with Echo Dot  Things to Try      Voice and beyond  Terminology:  Voice Interface Design, Voice User Interface Design, Voice User Interaction (VUI), UX of Voice, Conversational UI  The 2017 Voice Report by VoiceLabs  -  January 2017  Amazon\u2019s Alexa passes 15,000 skills, up from 10,000 in February  -  March 2017  Amazon introduces paid subscriptions for Alexa skills  -  October 2017  The rise of the voice interface  -  July 2017  This is the Year of Voice UI  -  May 2017  Competition? Apple Siri/ HomePod , Google Assistant/ Home    Amazon Alexa (Powered / Enabled) Devices  Echo & Alexa Devices  MicroBot Push  Nest Thermostat  Ring Doorbell  Wemo Outlet  Phillips Hue Lightbulbs  Phillips Hue Light strip    Alexa Skills  Skills  are the way you interact with Alexa. When you ask Alexa a question, ask for information, or request a song from Spotify, you are interacting with a skill.       Alexa Skills by Category (May 2017)  Components of a Skill  Interaction Model (ie. Utterances, Intents, Slots, )  Hosted Service (ie. Lambda Function)",
            "title": "Week 11: Alexa"
        },
        {
            "location": "/fall-2017/#assignment-8-alexa-talk-to-me",
            "text": "Part 1: Write a Commentary  Read three news articles about voice technologies and write a commentary on the the state of this industry. You can approach this from many directions. One suggestion is to start by thinking about where your personal interests intersect with the integration of voice technologies into every day life. Where do these technologies fit in your life? What areas of interest arise from reading the articles you chose? Are you interests in the technology itself? The hardware or software? The user experiences and how people engage with a kind of seemingly  infinite  intelligence? What new devices might you imagine interacting with through voice? What concerns might you have with accessibility or privacy?  Think about your interests in UX and what VUI means. How does and will interacting with machines verbally be different than by touch or traditional forms of interaction? Thinking about the future of this field and the dissemination of voice technologies into society, what might the next 2-5 years look like for VUI? What challenges do you foresee with using and building voice interactions and voice based user experiences?  Part 2: Build a Skill  Work through  Section 1: Build your first Alexa Skill on Code Academy  to get a feel for how to write a skill using the Amazon Alexa development tools.  Important:  Be sure to use the specified AWS Lambda Amazon Resource Name (ARN) as the Service Endpoint Type (as shown in  Step 9 of Build Your First Alexa Skill ). Once you know your skill is communicating with the ARN used by the tutorial, proceed to change it to  arn:aws:lambda:us-east-1:878223637038:function:criticalMaking  and add the following Intent, based on your name, to your Interaction Model. If you need help creating a new Intent using the Interaction Model (Beta Builder), go through the steps outlined in  Section 1 Part 2: Create a New Intent  of the Code Academy tutorial.  You do not need to go beyond Part 2 of this tutorial unless you want to dive deeper in.  Why are you changing the Amazon Resource Name (ARN) in your Alexa Configuration panel?  Well, I created the ARN (result of using AWS Lambda) you are now pointing your skill to and added Intents based on your names to the Lambda Function. For example, your intent will be formatted like this \"FirstnameLastnameIntent\". ie. \"JimMurphyIntent\". Essentially, the utterances you define in your Interaction Model will map to the Intent functions I created in the Lambda Function. Feel free to use any number of custom utterances you want. If done correctly, you should hear a response of \"Your Name!\" when you say  \"Alexa, ask Critical Making what my name is  or  \"Alexa, ask Critical Making my name  or any other custom utterances you add. If you are curious about the Lambda function you can see how I set it up  here .  Create these utterances as part of your Intent:   what my name is  my name  whats my name   Once you have updated you Interaction Model to include your personal Intent and utterances record a video demonstrating the results with either EchoSim or a physical Alexa Echo Spot Device. Embed the video in the project page on your website.  Tips: Gain a basic level understanding of the key components involved with designing and creating skills by watching some of the tutorial videos and reading some of the documents for developing skills listed in the resources section below. Start by looking over the documentation provided for  Alexa Skills Kit (ASK)  and reading through  Steps to Build a Custom Skill .  Deliverables:   Post your commentary on your website along with your video created in Part 2.  A 30 second video capture your Alexa skill working via EchoSim or a physical Amazon Echo Spot device.   Post a link to your project URL on slack #cmstudio.  CM1: Due Nov 13  CM2: Due Nov 15  Resources   History of Talking to Machines  Radiolab: Talking to Machines  Before Siri: The History of Talking To Computers  Sound it out: the (sometimes creepy) history of the talking machine  Design for voice interfaces  -  October 2015    Designing for Voice  Voice Interfaces Are Here. Are They Necessary?  -  August 2017  Designing Voice Experiences  -  May 2017  Google's 3 Secrets to Designing Perfect Conversations  -  May 2017  The Most Important Design Principles Of Voice UX  -  February 2016  How to Design Voice User Interfaces  Voice User Interfaces, Interaction Design (UX)  The UX of Voice: The Invisible Interface  Combining Graphical And Voice Interfaces For A Better User Experience  -  October 2017    Voice Design  Alexa Voice Design Guide  Alexa Voice Design 101  - 1 hr webinar    Developing Skills  Alexa Skills Kit (ASK)  - Entry point for all documentation, learning how skills work, and how to create them.  Steps to Build a Custom Skill       Understanding How Users Interact with Skills  Understanding How Users Invoke Custom Skills  Use the Skill Builder (Beta) to Define Intents, Slots, and Dialogs  Intents  Built-in Intent Library    Slots  Slot Type Reference      Additional Development Resources  Alexa Developers Youtube Channel  Alexa Developers Twitter  Alexa Enabled Devices  Alexa Github  Alexa Developer Blog  Alexa Settings  -  Sign In Required. Desktop app similar to the Alexa mobile app.  Alexa Voice Profiles  Developer Guide: What Is AWS Lambda?  Host a Custom Skill as an AWS Lambda Function  Getting Started with Lambda  SSML Reference    Tutorials  Code Academy: Learn Alexa  - Great introductory tutorial for building skills. Start here.  Big Nerd Ranch Introductory Tutorials  - PDF available for each section of the tutorial on  github .  Developing Alexa Skills - Hello, Alexa! (Part 1)  Developing Alexa Skills - Slots and Slot Types (Part 2)    Amazon Alexa Tutorials  Alexa Skill Builder - Part 2: Using intents, built-ins, and utterances  - Good quick introduction to building a skill and working with the skill builder tools.  Alexa Skill Builder - Part 3: Simplifying your code for multi-turn dialogs  Alexa Cookbook  - Code for examples shown in Part 2, Part 3, and more.      Development Tools  EchoSim  - Alexa Enabled Device Simulator  Utterance Generator",
            "title": "Assignment 8: Alexa, Talk to me"
        },
        {
            "location": "/fall-2017/#week-12-vr",
            "text": "Nov 13 / Nov 15   The State of VR Technologies  Goodbye Uncanny Valley  Game UX Summit \u201917 | Dylan Urquidi Unity Labs | XR UX: Today & Tomorrow  HTC VIVE Announces VIVE Arts Program  -  November 2017  Cable Robot Simulator  How Research Led to State-of-the-Art Entertainment, Caecilia Charbonnier, Dreamscape Immersive    HTC Vive: Setup and Use  Unity: Building Virtual Worlds  Poly  CGTrader    Play Time!   We will not have a VR assignment but you may wish to explore VR for your final project.",
            "title": "Week 12: VR"
        },
        {
            "location": "/fall-2017/#assignment-9-final-project-proposal",
            "text": "This week I'd like you to revisit your final project concept and decide how you would like to move forward with it. You are free to propose a new project or continue developing the one you started in week 1. Please provide a status update or new project proposal by the end of the week. You can review the final project parameters from week 1  here . This project is to be completed as individuals but you are (highly) encouraged to share ideas and work together to assist each other. A good studio culture thrives on the cross pollination of skills, ideas, and the support of each other.  At this point you have gained experience with a variety of tools and technologies that you may wish to explore further for your final project. You may also wish to revisit and expand upon a previous assignment or project and develop it further. The purpose of the final project is to realize something from start to finish that utilizes any combination of skills, tools, and technologies required to support bringing your creative vision to fruition. What might this look like? Some possibilities include things that could be classified as products, digital / physical experiences, artifacts, installations, performances, platforms, artworks, tools, machines, devices, etc.  All behavior is motivated, therefore, it will be beneficial to revisit, reflect, and think about your interests in Critical Making and your work in other studios. What kinds of experiences to you want to create? What kinds of problems are you trying to solve? What kinds of creative visions are you trying to realize? How have the tools and skills you have explored this semester informed your other work? What opportunities do you see for developing a UX or branding based project using the tools from Critical Making? What questions do you have and/or what idea keeps coming back to you?    Deliverable:  A new or updated final project proposal. It should include the following:   Project Title  Project Summary ~ 1 page max (ie What is it? What problem(s) are you solving? What will it do? How will it work?)  Key components of your project (ie. Resources, skills, and technology needed to realize it ~ Materials, CAD, 3d Printing, Bantam Mill, Processing, Arduino, etc)  Milestones you have hit thus far and what you plan to do in order to realize it in the weeks following Thanksgiving break. If you need to order some parts, what do you need? What questions do you have? Where do you feel you are lacking in skill and need assistance?   Updated: 11/10/17 - Note: There will be an event taking place on Saturday December 9th in the evening (details forthcoming). This will be a good opportunity to share your work at whatever level of completion and get feedback. It's not going to be a full critique but rather an opportunity to network and pre-view your work for outside audiences. Think about how you might setup your work to share in a public way. I can help brainstorm presentation setups.  Post a link to your project proposal on slack #cmstudio.  Due Friday Nov 17 (before Thanksgiving Break)  Notice: I will send your current grade by Friday Nov 17th.",
            "title": "Assignment 9: Final Project Proposal"
        },
        {
            "location": "/fall-2017/#thanksgiving-break-no-class",
            "text": "",
            "title": "Thanksgiving Break (No Class)"
        },
        {
            "location": "/fall-2017/#phase-5",
            "text": "",
            "title": "Phase 5"
        },
        {
            "location": "/fall-2017/#week-13-final-projects",
            "text": "Nov 27 / Nov 29   Dec 9 Event Update  Open Studio - Discuss project proposals / progress",
            "title": "Week 13: Final Projects"
        },
        {
            "location": "/fall-2017/#week-14-final-projects",
            "text": "Dec 4 / Dec 6   Open Studio   Remix Holiday Bash! ~ Saturday, December 9th, 2017  CMCI STUDIO in collaboration with Intermedia Art, Writing and Performance Faculty and Critical Media Practices   CMCI STUDIO  1301 Walnut St, Boulder, CO 80302  6pm - 7pm: IAWP & CMP Student Exhibition  7pm - 11pm: Transmedia Performances",
            "title": "Week 14: Final Projects"
        },
        {
            "location": "/fall-2017/#week-15-final-projects",
            "text": "Dec 11 / Dec 13   Course Evals - 6:30-6:45pm  Fill out the course eval (Login with user id required):  http://colorado.campuslabs.com/courseeval    Open Studio   The last official day of classes is Thursday, December 14th, 2017. All assignments and projects from the semester need to be in by this time. You are free to revisit and iterate on any assignment or project to improve the grade you have. Your final project is due next week when you present on December 18th.",
            "title": "Week 15: Final Projects"
        },
        {
            "location": "/fall-2017/#week-16-finals-week",
            "text": "Dec 18  CM Studio: Final Project Showcase \nMonday, December 18th, 6:30-9:30pm  Presentations   Please have your project setup and on display as you intend to present it before we start presentations.  Be prepared to talk about your project for 5-7 mins. I suggest preparing a presentation that includes a problem / project statement, any relevant research done, images and video of prototypes and your creative process, lessons learned, and possible next steps (future work).  We will try to stay within the timeframe of 10 mins max per person so everyone has the opportunity to present. Please make sure any demonstrations fall within this timeframe.",
            "title": "Week 16: Finals Week"
        },
        {
            "location": "/students/",
            "text": "Meredith Fong\n, \nGithub\n\n\nAaron Meyerhoff\n, \nGithub\n\n\nJosh Adler\n, \nGithub\n\n\nSarah Safranski\n, \nGithub\n\n\nMichelle Blake\n, \nGithub\n\n\nJim Murphy\n, \nGithub\n\n\nMatt Isola\n, \nGithub\n\n\nNikki Cavalier\n, \nGithub\n\n\nErin Pfeifer\n, \nGithub\n\n\nNick Balderston\n, \nGithub\n\n\nRebekah Sosa\n, \nGithub",
            "title": "Students"
        },
        {
            "location": "/cad/",
            "text": "2D, 2.5D Design\n\u00b6\n\n\n\n\nAdobe Creative Cloud\n\n\n\n\nRaster\n\u00b6\n\n\n\n\nphotography\n\n\nscanning (flatbed, etc)\n\n\nGIMP\n\n\nPhotoshop\n\n\nMyPaint\n\n\nKrita\n\n\n\n\nVector\n\u00b6\n\n\n\n\nInkscape\n, \nFLOSS Manuals\n, \nRelease Notes\n\n\nLibreOffice Draw\n\n\nIllustrator\n\n\nScribus\n\n\nLibreCAD\n\n\nQCAD\n\n\nFreeCAD\n\n\nLayout\n\n\nOmniGraffle\n\n\n\n\n3D Design\n\u00b6\n\n\n\n\nSketchup\n\n\nTinkercad\n\n\nShapesmith\n\n\nFlood Editor\n\n\nMatter Machine\n\n\nRhino\n, \nGrasshopper\n, \nKangaroo\n\n\nRhinoCAM\n\n\nFusion 360\n\n\nFusion 360 Adoption Portal\n\n\nFusion 360 Students Download\n - Free for students. Make an Autodesk account and install.\n\n\nLearn Fusion 360 in 60 Mins\n\n\nFusion 360 Design Academy\n\n\nFusion 360 Adoption Portal\n    \n\n\n\n\n\n\nBlender\n\n\nMaya\n\n\nMudbox\n\n\nCinema4D\n, \nGrey Scale Gorilla\n\n\nZBrush\n\n\nAutoCAD\n\n\nSolidworks\n\n\nOnshape\n\n\nAlias\n\n\n3DS Max\n\n\nPTC\n\n\nNX\n\n\nAC3D\n\n\nOpenSCAD\n\n\nCatia\n\n\n\n\nGame Engines\n\u00b6\n\n\n\n\nUnity\n\n\nUnreal\n\n\n\n\nSimulation\n\u00b6\n\n\n\n\nElmer\n\n\nCOMSOL\n\n\nSolidworks: Simulation\n\n\nANSYS\n\n\nNastran\n\n\n\n\nAudio & Video\n\u00b6\n\n\n\n\nAudacity\n\n\nKdenlive\n, \nOpenShot\n, \nLightworks\n, \nFinal Cut Pro X\n\n\nAdobe Premiere\n, \nAfter Effects\n\n\nffmpeg\n, \navconv\n, \nmencoder\n\n\nmplayer\n, \nsmplayer\n\n\nVLC\n\n\nHTML5\n, \nformats\n\n\nScreencast-O-Matic\n\n\nReaper\n\n\nAbleton Live",
            "title": "Computer-Aided Design (CAD)"
        },
        {
            "location": "/cad/#2d-25d-design",
            "text": "Adobe Creative Cloud",
            "title": "2D, 2.5D Design"
        },
        {
            "location": "/cad/#raster",
            "text": "photography  scanning (flatbed, etc)  GIMP  Photoshop  MyPaint  Krita",
            "title": "Raster"
        },
        {
            "location": "/cad/#vector",
            "text": "Inkscape ,  FLOSS Manuals ,  Release Notes  LibreOffice Draw  Illustrator  Scribus  LibreCAD  QCAD  FreeCAD  Layout  OmniGraffle",
            "title": "Vector"
        },
        {
            "location": "/cad/#3d-design",
            "text": "Sketchup  Tinkercad  Shapesmith  Flood Editor  Matter Machine  Rhino ,  Grasshopper ,  Kangaroo  RhinoCAM  Fusion 360  Fusion 360 Adoption Portal  Fusion 360 Students Download  - Free for students. Make an Autodesk account and install.  Learn Fusion 360 in 60 Mins  Fusion 360 Design Academy  Fusion 360 Adoption Portal         Blender  Maya  Mudbox  Cinema4D ,  Grey Scale Gorilla  ZBrush  AutoCAD  Solidworks  Onshape  Alias  3DS Max  PTC  NX  AC3D  OpenSCAD  Catia",
            "title": "3D Design"
        },
        {
            "location": "/cad/#game-engines",
            "text": "Unity  Unreal",
            "title": "Game Engines"
        },
        {
            "location": "/cad/#simulation",
            "text": "Elmer  COMSOL  Solidworks: Simulation  ANSYS  Nastran",
            "title": "Simulation"
        },
        {
            "location": "/cad/#audio-video",
            "text": "Audacity  Kdenlive ,  OpenShot ,  Lightworks ,  Final Cut Pro X  Adobe Premiere ,  After Effects  ffmpeg ,  avconv ,  mencoder  mplayer ,  smplayer  VLC  HTML5 ,  formats  Screencast-O-Matic  Reaper  Ableton Live",
            "title": "Audio &amp; Video"
        },
        {
            "location": "/pm/",
            "text": "Documents\n\u00b6\n\n\n\n\nGoogle Docs\n\n\nEtherpad\n\n\nLibreOffice\n\n\nMicrosoft Office\n\n\nFirepad\n\n\n\n\nScreen Capture\n\u00b6\n\n\n\n\nScreencast-o-matic\n, \nDownload Link\n - Screen capture software for sharing projects, making tutorials, and more.\n\n\nScreenflick\n\n\nHow to take a screenshot on your Mac\n\n\n7 ways to take screenshots in Windows 10\n\n\n\n\nData Storage\n\u00b6\n\n\n\n\nDropbox\n\n\nBox\n\n\nOwnCloud\n\n\nMicrosoft OneDrive\n\n\nGoogle Drive\n\n\n\n\nLarge File Transfer\n\u00b6\n\n\n\n\nWeTransfer\n\n\nDrop Send\n\n\n\n\nBlogs / Wikis / Content Management Systems (CMS)\n\u00b6\n\n\n\n\nTumblr\n\n\nWordpress\n, \nWordpress.org\n\n\nMediaWiki\n\n\nCargo Collective\n\n\nSquarespace\n\n\nWix\n\n\nThe Grid\n\n\nDrupal\n\n\nJoomla\n\n\nStatamic\n\n\n\n\nFTP\n\u00b6\n\n\n\n\nCyberduck\n\n\nFileZilla\n\n\nTransmit\n\n\nWinSCP\n\n\nSmartFTP\n\n\nFireFTP\n\n\n\n\nVersion Control\n\u00b6\n\n\n\n\nGit\n, \nGithub\n, \nGitLab\n, \nGitWeb\n, \nGitolite\n\n\nBitbucket\n\n\nSubversion\n\n\nRCS\n\n\nMercurial\n\n\nBazaar\n\n\nCVS\n\n\n\n\nSynchronization\n\u00b6\n\n\n\n\nrsync\n\n\nunison\n\n\n\n\nCloud Computing (Hosting)\n\u00b6\n\n\n\n\nAmazon EC2\n\n\nGoogle Compute Engine\n\n\nDigital Ocean\n\n\nLinode\n\n\nHeroku\n\n\nBluehost\n\n\n\n\nDomains\n\u00b6\n\n\n\n\nNamecheap\n - My go to for domain registration.\n\n\nGodaddy\n\n\n1&1\n\n\nGandi\n\n\npark.io\n - Domain Name Auction\n\n\n\n\nProject Management Apps\n\u00b6\n\n\n\n\nTrello\n\n\nGanttProject\n\n\nTaiga\n\n\nOpenProj\n\n\nTaskJuggler\n\n\nOmniPlan\n\n\nGitLab\n\n\nPintrest\n\n\nTumblr\n\n\nSlack\n, \nSlack Archive\n, \nSlackin Inviter\n\n\n\n\nPhoto Sharing\n\u00b6\n\n\n\n\nInstagram\n\n\nFlickr\n\n\nGoogle Photos\n\n\n\n\nMind Mapping\n\u00b6\n\n\n\n\nMindNode Pro\n\n\niThoughtsX\n\n\nMindcad Incubator\n\n\nCoggle\n\n\nXMind\n\n\nVue\n\n\n\n\nForums\n\u00b6\n\n\n\n\nDiscourse\n\n\nVanilla\n\n\n\n\nRemote Desktop\n\u00b6\n\n\n\n\nTightVNC\n\n\nx11vnc\n\n\nnoVNC\n\n\nTigerVNC\n\n\nRealVNC Free\n\n\nJollysFastVNC\n\n\nUltraVNC\n\n\n\n\nVPN\n\u00b6\n\n\n\n\nDetailed VPN Comparison Chart\n - Thanks Ty",
            "title": "Project Management"
        },
        {
            "location": "/pm/#documents",
            "text": "Google Docs  Etherpad  LibreOffice  Microsoft Office  Firepad",
            "title": "Documents"
        },
        {
            "location": "/pm/#screen-capture",
            "text": "Screencast-o-matic ,  Download Link  - Screen capture software for sharing projects, making tutorials, and more.  Screenflick  How to take a screenshot on your Mac  7 ways to take screenshots in Windows 10",
            "title": "Screen Capture"
        },
        {
            "location": "/pm/#data-storage",
            "text": "Dropbox  Box  OwnCloud  Microsoft OneDrive  Google Drive",
            "title": "Data Storage"
        },
        {
            "location": "/pm/#large-file-transfer",
            "text": "WeTransfer  Drop Send",
            "title": "Large File Transfer"
        },
        {
            "location": "/pm/#blogs-wikis-content-management-systems-cms",
            "text": "Tumblr  Wordpress ,  Wordpress.org  MediaWiki  Cargo Collective  Squarespace  Wix  The Grid  Drupal  Joomla  Statamic",
            "title": "Blogs / Wikis / Content Management Systems (CMS)"
        },
        {
            "location": "/pm/#ftp",
            "text": "Cyberduck  FileZilla  Transmit  WinSCP  SmartFTP  FireFTP",
            "title": "FTP"
        },
        {
            "location": "/pm/#version-control",
            "text": "Git ,  Github ,  GitLab ,  GitWeb ,  Gitolite  Bitbucket  Subversion  RCS  Mercurial  Bazaar  CVS",
            "title": "Version Control"
        },
        {
            "location": "/pm/#synchronization",
            "text": "rsync  unison",
            "title": "Synchronization"
        },
        {
            "location": "/pm/#cloud-computing-hosting",
            "text": "Amazon EC2  Google Compute Engine  Digital Ocean  Linode  Heroku  Bluehost",
            "title": "Cloud Computing (Hosting)"
        },
        {
            "location": "/pm/#domains",
            "text": "Namecheap  - My go to for domain registration.  Godaddy  1&1  Gandi  park.io  - Domain Name Auction",
            "title": "Domains"
        },
        {
            "location": "/pm/#project-management-apps",
            "text": "Trello  GanttProject  Taiga  OpenProj  TaskJuggler  OmniPlan  GitLab  Pintrest  Tumblr  Slack ,  Slack Archive ,  Slackin Inviter",
            "title": "Project Management Apps"
        },
        {
            "location": "/pm/#photo-sharing",
            "text": "Instagram  Flickr  Google Photos",
            "title": "Photo Sharing"
        },
        {
            "location": "/pm/#mind-mapping",
            "text": "MindNode Pro  iThoughtsX  Mindcad Incubator  Coggle  XMind  Vue",
            "title": "Mind Mapping"
        },
        {
            "location": "/pm/#forums",
            "text": "Discourse  Vanilla",
            "title": "Forums"
        },
        {
            "location": "/pm/#remote-desktop",
            "text": "TightVNC  x11vnc  noVNC  TigerVNC  RealVNC Free  JollysFastVNC  UltraVNC",
            "title": "Remote Desktop"
        },
        {
            "location": "/pm/#vpn",
            "text": "Detailed VPN Comparison Chart  - Thanks Ty",
            "title": "VPN"
        },
        {
            "location": "/dev/",
            "text": "Text Editors / IDEs\n\u00b6\n\n\n\n\nAtom\n - (\nAtom Flight Manual\n, \nPackages\n, \nMy Setup\n)\n\n\nText Wrangler\n\n\nvi\n, \nvim\n, \nemacs\n\n\nJEdit\n\n\nEclipse\n\n\nVisual Studio Express\n\n\nXCode\n\n\nSublime Text\n\n\nBrackets\n\n\nJetbrains\n\n\nGeany\n\n\nNetbeans IDE\n\n\nTextEdit (MacOS)\n\n\nNotepad (Win)\n\n\nVisual Studio Code\n\n\n\n\nSystems\n\u00b6\n\n\n\n\nApple MacOS\n\n\nWindows 10\n\n\nUbuntu\n\n\nUnix\n, \nUnix Tutorial for Beginners\n, \nUnix History\n\n\nVirtualBox\n\n\n\n\nBrowsers\n\u00b6\n\n\n\n\nChrome\n, \nChrome Dev Tools\n\n\nFirefox\n, \nFirebug\n\n\nSafari\n\n\n\n\nTerminals\n\u00b6\n\n\n\n\nMacOS Terminal\n, \nMacOS/Linux/Unix Command Line Cheat Sheet\n\n\niTerm 2\n\n\nPowershell (Win)\n\n\n\n\nLocalhost\n\u00b6\n\n\nThese are common LAMP stack based environments for local web development.\n\n\n\n\nSetting up a local web server on a Mac\n\n\nXAMPP\n\n\nHow do I install XAMPP for Mac OS X?\n\n\n\n\n\n\nMAMP\n\n\nBitnami\n\n\n\n\nWebsite Copiers\n\u00b6\n\n\n\n\nHTTRACK\n\n\n\n\nStatic Site Generators / Documentation\n\u00b6\n\n\n\n\nStaticGen\n - Top Open-Source Static Site Generators\n\n\nmkdocs\n, \nMaterial Theme\n\n\nGitbook\n\n\nPandoc\n\n\nMetalsmith\n\n\nJekyll\n\n\nHugo\n\n\n\n\nWeb Languages I\n\u00b6\n\n\nHyperText Markup Language (HTML)\n\u00b6\n\n\n\n\nHTML (Mozilla)\n\n\nGoogle Web Fundamentals\n\n\nHTML Tutorial\n\n\nHTMLDog - HTML Beginner Tutorial\n\n\nHTMLDog - HTML Intermediate Tutorial\n\n\nHTML Validator\n\n\nDive into HTML5\n\n\n\n\nCascading Style Sheets (CSS)\n\u00b6\n\n\n\n\nCSS (Mozilla)\n\n\nCSS Intro\n\n\nCSS Tutorial\n\n\nCSS-Tricks\n\n\nCSS Basics\n\n\nHTMLDog - CSS Beginner Tutorial\n\n\nHTMLDog - CSS Intermediate Tutorial\n\n\n\n\nJavaScript (JS)\n\u00b6\n\n\n\n\nJavaScript (Mozilla)\n\n\nMozilla Guide\n\n\nJavascript.com\n\n\nW3C Javascript Tutorial\n\n\nEloquent Javascript (Book)\n\n\nW3C JSON Tutorial\n\n\n\n\nWeb Languages II\n\u00b6\n\n\n\n\nMarkdown\n\n\nMarkdown\n\n\nMarkdown Docs\n\n\nMarkdown Cheatsheet\n\n\n\n\n\n\nCanvas\n, \n31 Days of Canvas tutorials\n\n\nWebGL\n, \nDoes my browser support WebGL?\n, \nWebGL Report\n\n\n\n\nWeb Protocols\n\u00b6\n\n\n\n\nHypertext Transfer Protocol (HTTP)\n\n\nFile Transfer Protocol (FTP)\n\n\nSecure Shell (SSH)\n\n\n\n\nProgramming Languages\n\u00b6\n\n\n\n\nPython\n, \nAnaconda\n\n\nRuby\n, \nRVM\n\n\nJava\n,\n\n\nC/C++\n\n\n.NET\n\n\nSwift\n\n\n\n\nCoding Standards\n\u00b6\n\n\n\n\nAirbnb Javascript Style Guide\n\n\nIsobar Front-end Code Standards\n\n\nGoogle Style Guides\n - All languages\n\n\nGoogle Web Development\n\n\nMozilla Developer Guide - Coding Style\n\n\n\n\nFrameworks and Libraries\n\u00b6\n\n\n\n\njQuery\n\n\njQuery Mobile\n\n\nnode.js\n, \nnpm\n, \nnvm\n. (\nBeginner Tutorial\n, \nFelix's Node.js Beginners Guide\n)\n\n\nReact\n\n\nAwesome React Components\n\n\n\n\n\n\nReact Native\n, \nUse React Native\n, \nNuclide (Atom Package)\n\n\nExpress\n - For Node.js\n\n\nMongoDB\n\n\nAngular\n\n\nMobile Angular UI\n\n\nVue\n\n\nOmniscient\n\n\nRiot\n\n\nBackbone.js\n\n\nAurelia\n\n\nEmber\n\n\nMeteor\n\n\nRails\n - Uses Ruby language\n\n\nMasonry.js\n\n\nMoment.js\n - Parse, validate, manipulate, and display dates and times\n\n\n\n\nSearch Engines\n\u00b6\n\n\n\n\nJavascripting\n\n\nTodoMVC\n\n\n\n\nGeneral-Purpose Task Runners\n\u00b6\n\n\n\n\nGulp\n - Automated task runner\n\n\nGetting started with gulp\n - Good overview of the tool.\n\n\nAn Introduction to Gulp.js\n - This is a nice little primer explaining how it works and how it is different from Grunt.\n\n\nGulp Recipes\n\n\n\n\n\n\nGrunt\n - JavaScript Task Runner. Older than Gulp.\n\n\nnpm\n - Part of Node.js\n\n\n\n\nDependency Management\n\u00b6\n\n\n\n\nBower\n - Package Manager\n\n\nYarn\n - Package Manager for JS\n\n\nYarn: A new package manager for JavaScript\n\n\n\n\n\n\n\n\nModule Bundlers\n\u00b6\n\n\n\n\nBrowserify\n\n\nIntro to browserify\n\n\nbudo\n\n\n\n\n\n\nWebpack\n - Asset bundler\n\n\nWebpack or Browserify & Gulp: Which Is Better?\n\n\nBeginner\u2019s guide to Webpack\n\n\n\n\n\n\nRequireJS\n\n\n\n\nLinting\n\u00b6\n\n\n\n\nGithub Collection of Clean Code Linters\n\n\nESLint\n\n\nJSHint\n - JS error checking\n\n\nJSLint\n\n\n\n\nTest Frameworks\n\u00b6\n\n\n\n\nMocha\n\n\nJasmine\n\n\nQUnit\n\n\n\n\nCompilers and Extensions\n\u00b6\n\n\n\n\nCoffeeScript\n - Simplified Javascript\n\n\nLiveScript\n\n\nTypeScript\n\n\nBabel\n - Javascript compiler. Commonly used for JSX.\n\n\nGetting started with Babel\n\n\nGetting Started With ES6 and Babel\n\n\n\n\n\n\nSASS\n - CSS Extension\n\n\nLESS\n - CSS Pre-Processor\n\n\nCSS Preprocessors \u2013 Sass vs LESS\n\n\n\n\n\n\n\n\nWeb App Framework / Workflow\n\u00b6\n\n\n\n\nYeoman\n\n\nLineman\n\n\n\n\nSandboxes\n\u00b6\n\n\n\n\nCodepen\n\n\nJSFiddle\n\n\nScratchpad (HTML/JS)\n\n\nJS2Coffee\n\n\n\n\nMobile App Prototyping\n\u00b6\n\n\n\n\nAdobe PhoneGap\n\n\nIonic Framework\n\n\n\n\nTemplate Engines\n\u00b6\n\n\n\n\nMustache\n\n\nHandlebars\n\n\nUnderscore\n\n\nPug\n - Formerly Jade\n\n\nEmbedded JS (EJS)\n\n\nTransparency\n - For jQuery\n\n\nDust\n\n\ndoT\n - For Node.js\n\n\nTemplate 7\n\n\n\n\nDocumentation Generation\n\u00b6\n\n\n\n\nmkdocs\n, \nMaterial Theme\n\n\nGitbook\n\n\nPandoc\n\n\nESDoc\n\n\nTranscription\n\n\ndocumentation.js\n\n\nYUIDoc\n\n\nJSDoc\n\n\n\n\nVarious Web Tools\n\u00b6\n\n\n\n\nSpritecow\n - For working with sprites\n\n\nCreate CSS3\n - CSS generator\n\n\nTravis CI\n\n\nElectron\n - Desktop App Build Systems\n\n\n\n\nAPI Development\n\u00b6\n\n\n\n\nSandbox\n\n\nPostman\n - API Development\n\n\nokta\n\n\nRunKit\n\n\nAPIs (Application Programming Interfaces)\n\n\nWorking with data from APIs such as Instagram, Slack, etc\n\n\nWhat is an API?\n\n\nPostman\n - A great tool for working with APIs\n\n\nHTTP: The Protocol Every Web Developer Must Know\n    \n\n\n\n\n\n\nRESTful Web Services\n\n\nRESTful\n\n\nWhat is RESTful programming?\n\n\nRESTful Web Services: A Tutorial\n\n\n\n\n\n\n\n\nPorts\n\u00b6\n\n\n\n\nList of Common Ports\n\n\nList of TCP and UDP port numbers\n\n\n\n\n\n\nDevelopment News\n\n\n\n\nTutorialzine\n\n\nGlitch",
            "title": "Tools"
        },
        {
            "location": "/dev/#text-editors-ides",
            "text": "Atom  - ( Atom Flight Manual ,  Packages ,  My Setup )  Text Wrangler  vi ,  vim ,  emacs  JEdit  Eclipse  Visual Studio Express  XCode  Sublime Text  Brackets  Jetbrains  Geany  Netbeans IDE  TextEdit (MacOS)  Notepad (Win)  Visual Studio Code",
            "title": "Text Editors / IDEs"
        },
        {
            "location": "/dev/#systems",
            "text": "Apple MacOS  Windows 10  Ubuntu  Unix ,  Unix Tutorial for Beginners ,  Unix History  VirtualBox",
            "title": "Systems"
        },
        {
            "location": "/dev/#browsers",
            "text": "Chrome ,  Chrome Dev Tools  Firefox ,  Firebug  Safari",
            "title": "Browsers"
        },
        {
            "location": "/dev/#terminals",
            "text": "MacOS Terminal ,  MacOS/Linux/Unix Command Line Cheat Sheet  iTerm 2  Powershell (Win)",
            "title": "Terminals"
        },
        {
            "location": "/dev/#localhost",
            "text": "These are common LAMP stack based environments for local web development.   Setting up a local web server on a Mac  XAMPP  How do I install XAMPP for Mac OS X?    MAMP  Bitnami",
            "title": "Localhost"
        },
        {
            "location": "/dev/#website-copiers",
            "text": "HTTRACK",
            "title": "Website Copiers"
        },
        {
            "location": "/dev/#static-site-generators-documentation",
            "text": "StaticGen  - Top Open-Source Static Site Generators  mkdocs ,  Material Theme  Gitbook  Pandoc  Metalsmith  Jekyll  Hugo",
            "title": "Static Site Generators / Documentation"
        },
        {
            "location": "/dev/#web-languages-i",
            "text": "",
            "title": "Web Languages I"
        },
        {
            "location": "/dev/#hypertext-markup-language-html",
            "text": "HTML (Mozilla)  Google Web Fundamentals  HTML Tutorial  HTMLDog - HTML Beginner Tutorial  HTMLDog - HTML Intermediate Tutorial  HTML Validator  Dive into HTML5",
            "title": "HyperText Markup Language (HTML)"
        },
        {
            "location": "/dev/#cascading-style-sheets-css",
            "text": "CSS (Mozilla)  CSS Intro  CSS Tutorial  CSS-Tricks  CSS Basics  HTMLDog - CSS Beginner Tutorial  HTMLDog - CSS Intermediate Tutorial",
            "title": "Cascading Style Sheets (CSS)"
        },
        {
            "location": "/dev/#javascript-js",
            "text": "JavaScript (Mozilla)  Mozilla Guide  Javascript.com  W3C Javascript Tutorial  Eloquent Javascript (Book)  W3C JSON Tutorial",
            "title": "JavaScript (JS)"
        },
        {
            "location": "/dev/#web-languages-ii",
            "text": "Markdown  Markdown  Markdown Docs  Markdown Cheatsheet    Canvas ,  31 Days of Canvas tutorials  WebGL ,  Does my browser support WebGL? ,  WebGL Report",
            "title": "Web Languages II"
        },
        {
            "location": "/dev/#web-protocols",
            "text": "Hypertext Transfer Protocol (HTTP)  File Transfer Protocol (FTP)  Secure Shell (SSH)",
            "title": "Web Protocols"
        },
        {
            "location": "/dev/#programming-languages",
            "text": "Python ,  Anaconda  Ruby ,  RVM  Java ,  C/C++  .NET  Swift",
            "title": "Programming Languages"
        },
        {
            "location": "/dev/#coding-standards",
            "text": "Airbnb Javascript Style Guide  Isobar Front-end Code Standards  Google Style Guides  - All languages  Google Web Development  Mozilla Developer Guide - Coding Style",
            "title": "Coding Standards"
        },
        {
            "location": "/dev/#frameworks-and-libraries",
            "text": "jQuery  jQuery Mobile  node.js ,  npm ,  nvm . ( Beginner Tutorial ,  Felix's Node.js Beginners Guide )  React  Awesome React Components    React Native ,  Use React Native ,  Nuclide (Atom Package)  Express  - For Node.js  MongoDB  Angular  Mobile Angular UI  Vue  Omniscient  Riot  Backbone.js  Aurelia  Ember  Meteor  Rails  - Uses Ruby language  Masonry.js  Moment.js  - Parse, validate, manipulate, and display dates and times",
            "title": "Frameworks and Libraries"
        },
        {
            "location": "/dev/#search-engines",
            "text": "Javascripting  TodoMVC",
            "title": "Search Engines"
        },
        {
            "location": "/dev/#general-purpose-task-runners",
            "text": "Gulp  - Automated task runner  Getting started with gulp  - Good overview of the tool.  An Introduction to Gulp.js  - This is a nice little primer explaining how it works and how it is different from Grunt.  Gulp Recipes    Grunt  - JavaScript Task Runner. Older than Gulp.  npm  - Part of Node.js",
            "title": "General-Purpose Task Runners"
        },
        {
            "location": "/dev/#dependency-management",
            "text": "Bower  - Package Manager  Yarn  - Package Manager for JS  Yarn: A new package manager for JavaScript",
            "title": "Dependency Management"
        },
        {
            "location": "/dev/#module-bundlers",
            "text": "Browserify  Intro to browserify  budo    Webpack  - Asset bundler  Webpack or Browserify & Gulp: Which Is Better?  Beginner\u2019s guide to Webpack    RequireJS",
            "title": "Module Bundlers"
        },
        {
            "location": "/dev/#linting",
            "text": "Github Collection of Clean Code Linters  ESLint  JSHint  - JS error checking  JSLint",
            "title": "Linting"
        },
        {
            "location": "/dev/#test-frameworks",
            "text": "Mocha  Jasmine  QUnit",
            "title": "Test Frameworks"
        },
        {
            "location": "/dev/#compilers-and-extensions",
            "text": "CoffeeScript  - Simplified Javascript  LiveScript  TypeScript  Babel  - Javascript compiler. Commonly used for JSX.  Getting started with Babel  Getting Started With ES6 and Babel    SASS  - CSS Extension  LESS  - CSS Pre-Processor  CSS Preprocessors \u2013 Sass vs LESS",
            "title": "Compilers and Extensions"
        },
        {
            "location": "/dev/#web-app-framework-workflow",
            "text": "Yeoman  Lineman",
            "title": "Web App Framework / Workflow"
        },
        {
            "location": "/dev/#sandboxes",
            "text": "Codepen  JSFiddle  Scratchpad (HTML/JS)  JS2Coffee",
            "title": "Sandboxes"
        },
        {
            "location": "/dev/#mobile-app-prototyping",
            "text": "Adobe PhoneGap  Ionic Framework",
            "title": "Mobile App Prototyping"
        },
        {
            "location": "/dev/#template-engines",
            "text": "Mustache  Handlebars  Underscore  Pug  - Formerly Jade  Embedded JS (EJS)  Transparency  - For jQuery  Dust  doT  - For Node.js  Template 7",
            "title": "Template Engines"
        },
        {
            "location": "/dev/#documentation-generation",
            "text": "mkdocs ,  Material Theme  Gitbook  Pandoc  ESDoc  Transcription  documentation.js  YUIDoc  JSDoc",
            "title": "Documentation Generation"
        },
        {
            "location": "/dev/#various-web-tools",
            "text": "Spritecow  - For working with sprites  Create CSS3  - CSS generator  Travis CI  Electron  - Desktop App Build Systems",
            "title": "Various Web Tools"
        },
        {
            "location": "/dev/#api-development",
            "text": "Sandbox  Postman  - API Development  okta  RunKit  APIs (Application Programming Interfaces)  Working with data from APIs such as Instagram, Slack, etc  What is an API?  Postman  - A great tool for working with APIs  HTTP: The Protocol Every Web Developer Must Know         RESTful Web Services  RESTful  What is RESTful programming?  RESTful Web Services: A Tutorial",
            "title": "API Development"
        },
        {
            "location": "/dev/#ports",
            "text": "List of Common Ports  List of TCP and UDP port numbers    Development News   Tutorialzine  Glitch",
            "title": "Ports"
        },
        {
            "location": "/dev/histories/",
            "text": "History of the Electronics, Computers, and the Internet\n\u00b6\n\n\n\n\nComputer History Museum Exhibition\n\n\nDigital Logic\n\n\nThe Web\n\n\n\n\n\n\nAs We May Think by Vannevar Bush (1945)\n / \nBrainpickings Summary\n\n\nThe Mother of all Demos, presented by Douglas Engelbart (1968)\n / \nWikipedia\n\n\nComputer History Museum: Internet History 1962 to 1992\n\n\nA Brief Guide to the History of the Internet\n\n\nThe Idea Factory: Bell Labs and the Great Age of American Innovation by Jon Gertner\n\n\nThe Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution by Walter Isaacson\n\n\n\n\nHistory of Web Languages\n\u00b6\n\n\n\n\nA History of HTML\n\n\nA Brief History of CSS until 2016\n\n\nA Brief History of JavaScript\n\n\n\n\nHistory of Operating Systems\n\u00b6\n\n\n\n\nHistory of Linux\n\n\nHistory of MacOS\n\n\nHistory of Windows\n\n\n\n\nHistory of Programming and Code\n\u00b6\n\n\n\n\nWhat is Code?\n\n\nHistory of Computer Programming (Graphic)\n\n\nHistory of Programming Languages\n\n\nHistory of Computer Languages - The Classical Decade, 1950s\n\n\nCasey Reas on Coding: You need to be Able to Read and Write",
            "title": "Histories"
        },
        {
            "location": "/dev/histories/#history-of-the-electronics-computers-and-the-internet",
            "text": "Computer History Museum Exhibition  Digital Logic  The Web    As We May Think by Vannevar Bush (1945)  /  Brainpickings Summary  The Mother of all Demos, presented by Douglas Engelbart (1968)  /  Wikipedia  Computer History Museum: Internet History 1962 to 1992  A Brief Guide to the History of the Internet  The Idea Factory: Bell Labs and the Great Age of American Innovation by Jon Gertner  The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution by Walter Isaacson",
            "title": "History of the Electronics, Computers, and the Internet"
        },
        {
            "location": "/dev/histories/#history-of-web-languages",
            "text": "A History of HTML  A Brief History of CSS until 2016  A Brief History of JavaScript",
            "title": "History of Web Languages"
        },
        {
            "location": "/dev/histories/#history-of-operating-systems",
            "text": "History of Linux  History of MacOS  History of Windows",
            "title": "History of Operating Systems"
        },
        {
            "location": "/dev/histories/#history-of-programming-and-code",
            "text": "What is Code?  History of Computer Programming (Graphic)  History of Programming Languages  History of Computer Languages - The Classical Decade, 1950s  Casey Reas on Coding: You need to be Able to Read and Write",
            "title": "History of Programming and Code"
        },
        {
            "location": "/dev/cheatsheets/",
            "text": "A big list of cheatsheets\n\n\ntmux\n\u00b6\n\n\n\n\ntmux shortcuts & cheatsheet\n\n\n\n\nvi (vim)\n\u00b6\n\n\n\n\nVi Cheat Sheet\n\n\nAdvanced Vi Cheat Sheet",
            "title": "Cheat Sheets"
        },
        {
            "location": "/dev/cheatsheets/#tmux",
            "text": "tmux shortcuts & cheatsheet",
            "title": "tmux"
        },
        {
            "location": "/dev/cheatsheets/#vi-vim",
            "text": "Vi Cheat Sheet  Advanced Vi Cheat Sheet",
            "title": "vi (vim)"
        },
        {
            "location": "/dev/learning-terminal/",
            "text": "This section contains resources for learning how to use the MacOS Terminal and related Linux Terminals.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\nTo see hidden files on your system (Open Terminal and type):\n\n\n\n\nTo show all files: \ndefaults write com.apple.finder AppleShowAllFiles YES\n\n\nTo hide all files: \ndefaults write com.apple.finder AppleShowAllFiles NO\n\n\n\n\nCommand Line\n\u00b6\n\n\n\n\nGetting to Know the Command Line\n\n\nCodeacademy: Learn the Command Line\n\n\n\n\nBash Shell\n\u00b6\n\n\n\n\nHow I use terminal (themes, .bash_profile, etc)\n\n\nbash shell\n\n\nbash guide for beginners\n        \n\n\nbash startup files (aka \"dotfiles\" - .bash_profile, .profile, etc)\n\n\nWhat is a Bash Script?\n\n\nbash scripting cheatsheet\n   \n\n\n\n\n\n\n\n\nTerminal Cheat Sheets\n\n\n\n\nMacOS/Linux/Unix Command Line Cheat Sheet\n\n\nList of Command Line Commands\n\n\nAn A-Z Index of the Apple macOS command line (OS X)\n\n\nBasic UNIX Commands\n\n\nscreen\n\n\nLinux screen Tutorial\n\n\nHow to Kill Screen\n\n\n\n\n\n\n\n\n\n\n\n\nLogical, arithmetical and comparison operators\n\n\n\n\n\n\nFiles\n\u00b6\n\n\nPermissions\n\u00b6\n\n\n\n\nchmod Calculator\n\n\n\n\nEncoding\n\u00b6\n\n\n\n\nASCII / Unicode Table\n\n\nchardet character encoding detector\n\n\nHow to auto detect text file encoding?\n\n\n\n\n\n\n\n\nText Editing\n\u00b6\n\n\n\n\nVI: What is VI?\n\n\nvi text editor cheat sheet\n\n\n\n\n\n\n\n\nWorkflow Enhancements\n\u00b6\n\n\n\n\nDisplay directory structure as tree\n\n\nMac-CLI\n\n\n\n\nIntermediate\n\u00b6\n\n\nTerminal Emulators\n\u00b6\n\n\n\n\niTerm2\n\n\nHyper\n\n\ntmuxw",
            "title": "Learning Terminal"
        },
        {
            "location": "/dev/learning-terminal/#beginner",
            "text": "To see hidden files on your system (Open Terminal and type):   To show all files:  defaults write com.apple.finder AppleShowAllFiles YES  To hide all files:  defaults write com.apple.finder AppleShowAllFiles NO",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-terminal/#command-line",
            "text": "Getting to Know the Command Line  Codeacademy: Learn the Command Line",
            "title": "Command Line"
        },
        {
            "location": "/dev/learning-terminal/#bash-shell",
            "text": "How I use terminal (themes, .bash_profile, etc)  bash shell  bash guide for beginners           bash startup files (aka \"dotfiles\" - .bash_profile, .profile, etc)  What is a Bash Script?  bash scripting cheatsheet         Terminal Cheat Sheets   MacOS/Linux/Unix Command Line Cheat Sheet  List of Command Line Commands  An A-Z Index of the Apple macOS command line (OS X)  Basic UNIX Commands  screen  Linux screen Tutorial  How to Kill Screen       Logical, arithmetical and comparison operators",
            "title": "Bash Shell"
        },
        {
            "location": "/dev/learning-terminal/#files",
            "text": "",
            "title": "Files"
        },
        {
            "location": "/dev/learning-terminal/#permissions",
            "text": "chmod Calculator",
            "title": "Permissions"
        },
        {
            "location": "/dev/learning-terminal/#encoding",
            "text": "ASCII / Unicode Table  chardet character encoding detector  How to auto detect text file encoding?",
            "title": "Encoding"
        },
        {
            "location": "/dev/learning-terminal/#text-editing",
            "text": "VI: What is VI?  vi text editor cheat sheet",
            "title": "Text Editing"
        },
        {
            "location": "/dev/learning-terminal/#workflow-enhancements",
            "text": "Display directory structure as tree  Mac-CLI",
            "title": "Workflow Enhancements"
        },
        {
            "location": "/dev/learning-terminal/#intermediate",
            "text": "",
            "title": "Intermediate"
        },
        {
            "location": "/dev/learning-terminal/#terminal-emulators",
            "text": "iTerm2  Hyper  tmuxw",
            "title": "Terminal Emulators"
        },
        {
            "location": "/dev/learning-html-css/",
            "text": "This section contains resources for learning HTML & CSS. The two languages are so interrelated it only makes sense to learn them in parallel.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\nA beginning HTML and CSS programmer is someone that is new to both languages and possibly programming. This set of resources spans learning what each language is, how they work together, and the basics of more front-end design oriented topics such as fluid design, responsive design, and mobile design.\n\n\nHTML\n\u00b6\n\n\nThere is no shortcut to learning HTML or CSS. The best teacher is practice and application. Make things, break things, and analyze why certain HTML tags or CSS selectors work (or don't). Make use of a live server type environment to speed up your development workflow.\n\n\nLanguage\n\u00b6\n\n\n\n\nHTML (Mozilla)\n\n\nGoogle Web Fundamentals\n\n\n\n\nDocument\n\u00b6\n\n\n\n\nHEAD\n - A list of everything that \ncould\n go in the head of your document\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nHTML Tutorial\n\n\nHTMLDog - HTML Beginner Tutorial\n\n\nHTMLDog - HTML Intermediate Tutorial\n\n\n\n\nTools\n\u00b6\n\n\n\n\nHTML Validator\n\n\n\n\nCSS\n\u00b6\n\n\nLanguage\n\u00b6\n\n\n\n\nCSS (Mozilla)\n\n\n\n\nCSS Intro\n\n\n\n\n\n\nCSS-Tricks\n\n\n\n\nCSS Basics\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nCSS Tutorial\n\n\nHTMLDog - CSS Beginner Tutorial\n\n\nHTMLDog - CSS Intermediate Tutorial\n\n\n\n\nTools\n\u00b6\n\n\n\n\nCSS Validator\n\n\n\n\n\n\nIntermediate\n\u00b6\n\n\nAn intermediate HTML and CSS programmer is someone that is familiar with both languages and can build simple pages and functional websites based off mockups or wireframes.\n\n\nCSS Units\n\u00b6\n\n\n\n\nW3 CSS Units\n\n\nCSS values and units\n\n\nWeb Style Sheets CSS tips & tricks\n\n\nYour Ultimate Guide to CSS Units \u2013 All You Need to Know\n\n\nCSS Units Best Practices\n\n\nThe quick guide to CSS length units\n\n\n\n\nResets & Boilerplates\n\u00b6\n\n\nCSS Normalize & Resets\n\u00b6\n\n\n\n\nReboot, Resets, and Reasoning\n\n\nNormalize.css\n\n\nTreehouse Quick Tips: Applying Normalize.css Browser Reset CSS\n\n\nAbout normalize.css\n\n\n\n\n\n\nCSS Tools: Reset\n\n\nWhat is the difference between Normalize.css and Reset CSS?\n\n\n\n\nBoilerplates\n\u00b6\n\n\n\n\nHTML5 Boilerplate\n\n\n\n\nPositioning & Layout\n\u00b6\n\n\nBox Model\n\u00b6\n\n\n\n\nIntroduction to the CSS basic box model\n\n\nBox model recap\n\n\nCSS Box Model Sandbox\n\n\n\n\nPositioning\n\u00b6\n\n\n\n\nCSS Positioning in Ten Steps\n\n\nCSS Positioning 101\n\n\n\n\nLayouts, Grids, Flexbox\n\u00b6\n\n\n\n\nA Complete Guide to Grid\n\n\nA Complete Guide to Flexbox\n\n\n\n\nMedia Queries\n\u00b6\n\n\n\n\nUsing media queries\n\n\nResponsive web design\n\n\nMedia Queries for Standard Devices\n\n\nMedia Queries Demystified: CSS Min-Width and Max-Width\n\n\n\n\nTools\n\u00b6\n\n\n\n\nCSS Media Queries\n - Great tool for inspecting which media queries apply to your current device\n\n\nSimple CSS Media Queries\n - Tool for generating media queries for devices\n\n\nTest Responsive and Device Specific Viewports in Google Chrome\n\n\n\n\n\n\nAdvanced\n\u00b6\n\n\nAn advanced HTML and CSS programmer is someone that is an expert with both languages and can architect nearly any possible website for any possible platform.\n\n\nCSS\n\u00b6\n\n\nCSS Specificity Hierarchy\n\u00b6\n\n\n\n\nWhat is CSS specificity hierarchy\n\n\nW3: Calculating a selector's specificity\n\n\nCSS Specificity Calculator\n - Really useful!\n\n\n\n\nCSS Ninja\n\u00b6\n\n\n\n\nCSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt1\n\n\nCSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt2\n\n\n\n\n\n\nOther\n\u00b6\n\n\nHandbooks, Guides, Interview Questions\n\u00b6\n\n\n\n\nFront-End Interview Handbook\n\n\nBack-End Developer Interview Questions\n\n\nTech Interview Handbook\n\n\nCode Guide by @mdo\n - A guide by the author of Bootstrap.",
            "title": "Learning HTML & CSS"
        },
        {
            "location": "/dev/learning-html-css/#beginner",
            "text": "A beginning HTML and CSS programmer is someone that is new to both languages and possibly programming. This set of resources spans learning what each language is, how they work together, and the basics of more front-end design oriented topics such as fluid design, responsive design, and mobile design.",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-html-css/#html",
            "text": "There is no shortcut to learning HTML or CSS. The best teacher is practice and application. Make things, break things, and analyze why certain HTML tags or CSS selectors work (or don't). Make use of a live server type environment to speed up your development workflow.",
            "title": "HTML"
        },
        {
            "location": "/dev/learning-html-css/#language",
            "text": "HTML (Mozilla)  Google Web Fundamentals",
            "title": "Language"
        },
        {
            "location": "/dev/learning-html-css/#document",
            "text": "HEAD  - A list of everything that  could  go in the head of your document",
            "title": "Document"
        },
        {
            "location": "/dev/learning-html-css/#tutorials",
            "text": "HTML Tutorial  HTMLDog - HTML Beginner Tutorial  HTMLDog - HTML Intermediate Tutorial",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-html-css/#tools",
            "text": "HTML Validator",
            "title": "Tools"
        },
        {
            "location": "/dev/learning-html-css/#css",
            "text": "",
            "title": "CSS"
        },
        {
            "location": "/dev/learning-html-css/#language_1",
            "text": "CSS (Mozilla)   CSS Intro    CSS-Tricks   CSS Basics",
            "title": "Language"
        },
        {
            "location": "/dev/learning-html-css/#tutorials_1",
            "text": "CSS Tutorial  HTMLDog - CSS Beginner Tutorial  HTMLDog - CSS Intermediate Tutorial",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-html-css/#tools_1",
            "text": "CSS Validator",
            "title": "Tools"
        },
        {
            "location": "/dev/learning-html-css/#intermediate",
            "text": "An intermediate HTML and CSS programmer is someone that is familiar with both languages and can build simple pages and functional websites based off mockups or wireframes.",
            "title": "Intermediate"
        },
        {
            "location": "/dev/learning-html-css/#css-units",
            "text": "W3 CSS Units  CSS values and units  Web Style Sheets CSS tips & tricks  Your Ultimate Guide to CSS Units \u2013 All You Need to Know  CSS Units Best Practices  The quick guide to CSS length units",
            "title": "CSS Units"
        },
        {
            "location": "/dev/learning-html-css/#resets-boilerplates",
            "text": "",
            "title": "Resets &amp; Boilerplates"
        },
        {
            "location": "/dev/learning-html-css/#css-normalize-resets",
            "text": "Reboot, Resets, and Reasoning  Normalize.css  Treehouse Quick Tips: Applying Normalize.css Browser Reset CSS  About normalize.css    CSS Tools: Reset  What is the difference between Normalize.css and Reset CSS?",
            "title": "CSS Normalize &amp; Resets"
        },
        {
            "location": "/dev/learning-html-css/#boilerplates",
            "text": "HTML5 Boilerplate",
            "title": "Boilerplates"
        },
        {
            "location": "/dev/learning-html-css/#positioning-layout",
            "text": "",
            "title": "Positioning &amp; Layout"
        },
        {
            "location": "/dev/learning-html-css/#box-model",
            "text": "Introduction to the CSS basic box model  Box model recap  CSS Box Model Sandbox",
            "title": "Box Model"
        },
        {
            "location": "/dev/learning-html-css/#positioning",
            "text": "CSS Positioning in Ten Steps  CSS Positioning 101",
            "title": "Positioning"
        },
        {
            "location": "/dev/learning-html-css/#layouts-grids-flexbox",
            "text": "A Complete Guide to Grid  A Complete Guide to Flexbox",
            "title": "Layouts, Grids, Flexbox"
        },
        {
            "location": "/dev/learning-html-css/#media-queries",
            "text": "Using media queries  Responsive web design  Media Queries for Standard Devices  Media Queries Demystified: CSS Min-Width and Max-Width",
            "title": "Media Queries"
        },
        {
            "location": "/dev/learning-html-css/#tools_2",
            "text": "CSS Media Queries  - Great tool for inspecting which media queries apply to your current device  Simple CSS Media Queries  - Tool for generating media queries for devices  Test Responsive and Device Specific Viewports in Google Chrome",
            "title": "Tools"
        },
        {
            "location": "/dev/learning-html-css/#advanced",
            "text": "An advanced HTML and CSS programmer is someone that is an expert with both languages and can architect nearly any possible website for any possible platform.",
            "title": "Advanced"
        },
        {
            "location": "/dev/learning-html-css/#css_1",
            "text": "",
            "title": "CSS"
        },
        {
            "location": "/dev/learning-html-css/#css-specificity-hierarchy",
            "text": "What is CSS specificity hierarchy  W3: Calculating a selector's specificity  CSS Specificity Calculator  - Really useful!",
            "title": "CSS Specificity Hierarchy"
        },
        {
            "location": "/dev/learning-html-css/#css-ninja",
            "text": "CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt1  CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt2",
            "title": "CSS Ninja"
        },
        {
            "location": "/dev/learning-html-css/#other",
            "text": "",
            "title": "Other"
        },
        {
            "location": "/dev/learning-html-css/#handbooks-guides-interview-questions",
            "text": "Front-End Interview Handbook  Back-End Developer Interview Questions  Tech Interview Handbook  Code Guide by @mdo  - A guide by the author of Bootstrap.",
            "title": "Handbooks, Guides, Interview Questions"
        },
        {
            "location": "/dev/learning-js/",
            "text": "This section contains resources for learning how to program in Javascript.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\nA beginning Javascript programmer is someone that is new to the Javascript language and possibly programming. This set of resources spans learning what Javascript is and how it works in the browser to fundamental concepts of computer programming, computer science, and software engineering. Its best to have a good handle on the basics of HTML and CSS before learning Javascript.\n\n\n\n\n\nLanguage\n\u00b6\n\n\n\n\nJavascript (Mozilla)\n\n\nW3 Javascript Tutorial\n\n\nHow Javascript Works\n\n\nCode Academy - Intro to JavaScript ($)\n\n\nKahn Academy - Computer Programming\n\n\nGoogle Developers Training\n\n\nJavascript Basics: What is Javascript, really?\n\n\nJavaScript building blocks\n\n\nJavascript Basics (P5.js Wiki Reference)\n\n\n\n\nDOM\n\u00b6\n\n\n\n\nIntroduction to the DOM\n\n\nDOM Interfaces\n\n\n\n\nEvent Handlers\n\u00b6\n\n\n\n\nGlobal Event Handlers\n\n\n\n\nBooks\n\u00b6\n\n\n\n\nJavaScript: The Definitive Guide by David Flanagan\n\n\nProfessional JavaScript for Web Developers by Nicholas C. Zaka\n\n\nEloquent Javascript\n\n\nObject-Oriented JavaScript by Stoyan Stefanov and Kumar Chetan Sharma\n\n\nYou Don't Know JS\n - A Github based book series on JavaScript.\n\n\n\n\nJQuery\n\u00b6\n\n\n\n\nW3 jQuery Tutorial\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nGet Started with Debugging JavaScript in Chrome DevTools\n\n\nVanilla Javascript by Traversy Media\n\n\nBuild A Filterable List With Vanilla JavaScript\n\n\n\n\n\n\nJavascripting (Nodeschool)\n - Learn JS / Terminal by playing with a node app. You need to know how to use npm and the terminal to run this.\n\n\nfreeCodeCamp - Basic Javascript\n - 10 hrs of tutorials\n\n\nJavaScript Tutorial by Sololearn\n\n\n\n\nArticles\n\u00b6\n\n\n\n\nLearn to Code: 13 Tips that Could Save You Years of Effort\n\n\n10 Priceless Resources for JavaScript Learners\n\n\n\n\n\n\nIntermediate\n\u00b6\n\n\nAn intermediate Javascript programmer understands parts of Javascript language of syntax (form) and semantics (meaning) and is interested in learning more about design patterns, best practices, libraries, frameworks, and alternative workflows.\n\n\nLanguage\n\u00b6\n\n\n\n\nJS the Right Way\n\n\n\n\nRegular Expressions\n\u00b6\n\n\n\n\nRegular Expressions (Mozilla)\n\n\nW3 Regex Reference\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nRegexOne Tutorials\n\n\nYou Should Learn Regular Expressions\n\n\n\n\nRegex Sandboxes\n\u00b6\n\n\n\n\nRegex 101\n\n\nRegex Pal Tester\n\n\nRegulex\n\n\nRegexper\n\n\n\n\nBooks\n\u00b6\n\n\n\n\nJavaScript Patterns by Stoyan Stefanov\n\n\nJavaScript Enlightenment: From Library User to JavaScript Developer by Cody Lindley\n\n\n\n\nData Structures and Algorithms\n\u00b6\n\n\n\n\nData Structures and Algorithms with JavaScript by Michael McMillan\n\n\nIntroduction to Algorithms by Thomas H. Cormen et al\n\n\n\n\nPackage Management\n\u00b6\n\n\n\n\nWhat are the best front-end package managers?\n - \nFebruary 2018\n\n\nGuide to JavaScript frontend package managers\n - \nNovember 2015\n\n\n\n\nJS UIs\n\u00b6\n\n\n\n\nULI\n\n\ndat.gui\n\n\nguigui\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nUnderstanding JavaScript Bind()\n\n\nArrow Functions\n\n\n\n\n\n\nAdvanced\n\u00b6\n\n\nAn advanced Javascript programmer understands how to utilize Javascript to solve technical and creative challenges by using existing tools and designing custom solutions.\n\n\nLanguage\n\u00b6\n\n\n\n\nBackbone.js Fundamentals\n\n\nJavaScript Garden\n\n\nHow to Learn ES6 (ECMAScript 6)\n\n\nECMAScript\n\n\n\n\nDesign Patterns\n\u00b6\n\n\n\n\nLearning JavaScript Design Patterns\n\n\nPro JavaScript Design Patterns: The Essentials of Object-Oriented JavaScript Programming by Dustin Diaz and Ross Harmes\n\n\nDesign Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma et al\n\n\nWriting Modular JavaScript With AMD, CommonJS & ES Harmony\n\n\n\n\nWorking with Modules\n\u00b6\n\n\n\n\nRequireJS\n\n\nRequireJS's relationship to CommonJS\n\n\n\n\n\n\nModule Best Practices\n - Writing JS Modules in Node/CommonJS\n\n\n\n\nApplication Development\n\u00b6\n\n\n\n\nElectron\n\n\nMuon\n - Similar to Electron but uses Chromium",
            "title": "Learning Javascript"
        },
        {
            "location": "/dev/learning-js/#beginner",
            "text": "A beginning Javascript programmer is someone that is new to the Javascript language and possibly programming. This set of resources spans learning what Javascript is and how it works in the browser to fundamental concepts of computer programming, computer science, and software engineering. Its best to have a good handle on the basics of HTML and CSS before learning Javascript.",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-js/#language",
            "text": "Javascript (Mozilla)  W3 Javascript Tutorial  How Javascript Works  Code Academy - Intro to JavaScript ($)  Kahn Academy - Computer Programming  Google Developers Training  Javascript Basics: What is Javascript, really?  JavaScript building blocks  Javascript Basics (P5.js Wiki Reference)",
            "title": "Language"
        },
        {
            "location": "/dev/learning-js/#dom",
            "text": "Introduction to the DOM  DOM Interfaces",
            "title": "DOM"
        },
        {
            "location": "/dev/learning-js/#event-handlers",
            "text": "Global Event Handlers",
            "title": "Event Handlers"
        },
        {
            "location": "/dev/learning-js/#books",
            "text": "JavaScript: The Definitive Guide by David Flanagan  Professional JavaScript for Web Developers by Nicholas C. Zaka  Eloquent Javascript  Object-Oriented JavaScript by Stoyan Stefanov and Kumar Chetan Sharma  You Don't Know JS  - A Github based book series on JavaScript.",
            "title": "Books"
        },
        {
            "location": "/dev/learning-js/#jquery",
            "text": "W3 jQuery Tutorial",
            "title": "JQuery"
        },
        {
            "location": "/dev/learning-js/#tutorials",
            "text": "Get Started with Debugging JavaScript in Chrome DevTools  Vanilla Javascript by Traversy Media  Build A Filterable List With Vanilla JavaScript    Javascripting (Nodeschool)  - Learn JS / Terminal by playing with a node app. You need to know how to use npm and the terminal to run this.  freeCodeCamp - Basic Javascript  - 10 hrs of tutorials  JavaScript Tutorial by Sololearn",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-js/#articles",
            "text": "Learn to Code: 13 Tips that Could Save You Years of Effort  10 Priceless Resources for JavaScript Learners",
            "title": "Articles"
        },
        {
            "location": "/dev/learning-js/#intermediate",
            "text": "An intermediate Javascript programmer understands parts of Javascript language of syntax (form) and semantics (meaning) and is interested in learning more about design patterns, best practices, libraries, frameworks, and alternative workflows.",
            "title": "Intermediate"
        },
        {
            "location": "/dev/learning-js/#language_1",
            "text": "JS the Right Way",
            "title": "Language"
        },
        {
            "location": "/dev/learning-js/#regular-expressions",
            "text": "Regular Expressions (Mozilla)  W3 Regex Reference",
            "title": "Regular Expressions"
        },
        {
            "location": "/dev/learning-js/#tutorials_1",
            "text": "RegexOne Tutorials  You Should Learn Regular Expressions",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-js/#regex-sandboxes",
            "text": "Regex 101  Regex Pal Tester  Regulex  Regexper",
            "title": "Regex Sandboxes"
        },
        {
            "location": "/dev/learning-js/#books_1",
            "text": "JavaScript Patterns by Stoyan Stefanov  JavaScript Enlightenment: From Library User to JavaScript Developer by Cody Lindley",
            "title": "Books"
        },
        {
            "location": "/dev/learning-js/#data-structures-and-algorithms",
            "text": "Data Structures and Algorithms with JavaScript by Michael McMillan  Introduction to Algorithms by Thomas H. Cormen et al",
            "title": "Data Structures and Algorithms"
        },
        {
            "location": "/dev/learning-js/#package-management",
            "text": "What are the best front-end package managers?  -  February 2018  Guide to JavaScript frontend package managers  -  November 2015",
            "title": "Package Management"
        },
        {
            "location": "/dev/learning-js/#js-uis",
            "text": "ULI  dat.gui  guigui",
            "title": "JS UIs"
        },
        {
            "location": "/dev/learning-js/#tutorials_2",
            "text": "Understanding JavaScript Bind()  Arrow Functions",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-js/#advanced",
            "text": "An advanced Javascript programmer understands how to utilize Javascript to solve technical and creative challenges by using existing tools and designing custom solutions.",
            "title": "Advanced"
        },
        {
            "location": "/dev/learning-js/#language_2",
            "text": "Backbone.js Fundamentals  JavaScript Garden  How to Learn ES6 (ECMAScript 6)  ECMAScript",
            "title": "Language"
        },
        {
            "location": "/dev/learning-js/#design-patterns",
            "text": "Learning JavaScript Design Patterns  Pro JavaScript Design Patterns: The Essentials of Object-Oriented JavaScript Programming by Dustin Diaz and Ross Harmes  Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma et al  Writing Modular JavaScript With AMD, CommonJS & ES Harmony",
            "title": "Design Patterns"
        },
        {
            "location": "/dev/learning-js/#working-with-modules",
            "text": "RequireJS  RequireJS's relationship to CommonJS    Module Best Practices  - Writing JS Modules in Node/CommonJS",
            "title": "Working with Modules"
        },
        {
            "location": "/dev/learning-js/#application-development",
            "text": "Electron  Muon  - Similar to Electron but uses Chromium",
            "title": "Application Development"
        },
        {
            "location": "/dev/learning-webvr/",
            "text": "This section contains resources for learning how to work with WebVR.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\nWebVR Rocks\n - WebVR is a JavaScript API for creating immersive 3D,  Virtual Reality experiences in your browser.This site shows browser compatibility with different VR hardware.\n\n\nWebVR Info\n - Another site with examples and information about WebVR.\n\n\nWebVR W3 Spec\n - This will eventually become WebXR\n\n\nGLTF\n\n\n\n\nFrameworks\n\u00b6\n\n\n\n\nA-Frame\n\n\nWebVR Resources\n - A-Frame Extras, etc\n\n\n\n\n\n\n\n\nProjects\n\u00b6\n\n\n\n\nGoogle WebVR Experiments\n\n\nhttp://ottifox.com/\n\n\nHologram\n\n\n\n\nRepositories\n\u00b6\n\n\n\n\nSketchfab\n - 3D model repository\n\n\n\n\nUtilities\n\u00b6\n\n\n\n\nWebVR Assets\n - Unity to WebVR (Mozilla)\n\n\nUnityAFrameExporter\n - Not maintained\n\n\nUnitySceneWebExporter\n - Not maintained\n\n\n\n\n360 Panorama Tools\n\u00b6\n\n\n\n\nStreet View Panorama\n\n\nStreet View Download 360",
            "title": "Learning WebVR"
        },
        {
            "location": "/dev/learning-webvr/#beginner",
            "text": "WebVR Rocks  - WebVR is a JavaScript API for creating immersive 3D,  Virtual Reality experiences in your browser.This site shows browser compatibility with different VR hardware.  WebVR Info  - Another site with examples and information about WebVR.  WebVR W3 Spec  - This will eventually become WebXR  GLTF",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-webvr/#frameworks",
            "text": "A-Frame  WebVR Resources  - A-Frame Extras, etc",
            "title": "Frameworks"
        },
        {
            "location": "/dev/learning-webvr/#projects",
            "text": "Google WebVR Experiments  http://ottifox.com/  Hologram",
            "title": "Projects"
        },
        {
            "location": "/dev/learning-webvr/#repositories",
            "text": "Sketchfab  - 3D model repository",
            "title": "Repositories"
        },
        {
            "location": "/dev/learning-webvr/#utilities",
            "text": "WebVR Assets  - Unity to WebVR (Mozilla)  UnityAFrameExporter  - Not maintained  UnitySceneWebExporter  - Not maintained",
            "title": "Utilities"
        },
        {
            "location": "/dev/learning-webvr/#360-panorama-tools",
            "text": "Street View Panorama  Street View Download 360",
            "title": "360 Panorama Tools"
        },
        {
            "location": "/dev/learning-threejs/",
            "text": "This section contains resources for learning how to use Javascript framework \nthree.js\n.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\nthree.js\n\n\nWebGL\n, \nDoes my browser support WebGL?\n, \nWebGL Report\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nLearning Three.js\n\n\nWorkflow: Animation from Blender to three.js\n\n\n\n\nProjects\n\u00b6\n\n\n\n\nTBD",
            "title": "Learning three.js"
        },
        {
            "location": "/dev/learning-threejs/#beginner",
            "text": "three.js  WebGL ,  Does my browser support WebGL? ,  WebGL Report",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-threejs/#tutorials",
            "text": "Learning Three.js  Workflow: Animation from Blender to three.js",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-threejs/#projects",
            "text": "TBD",
            "title": "Projects"
        },
        {
            "location": "/dev/learning-p5js/",
            "text": "This section contains resources for learning how to use Javascript framework \np5.js\n.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\np5.js\n\n\np5.js web editor\n\n\nA free-to-use classrooms system for p5.js\n\n\nJavascript Basics (P5.js Wiki Reference)\n\n\n\n\nTutorials\n\u00b6\n\n\n\n\nTBD\n\n\n\n\nCourses\n\u00b6\n\n\n\n\nIntroduction to Programming for the Visual Arts with p5.js (Kadenze)\n\n\n\n\nProjects\n\u00b6\n\n\n\n\nTBD",
            "title": "Learning p5.js"
        },
        {
            "location": "/dev/learning-p5js/#beginner",
            "text": "p5.js  p5.js web editor  A free-to-use classrooms system for p5.js  Javascript Basics (P5.js Wiki Reference)",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-p5js/#tutorials",
            "text": "TBD",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-p5js/#courses",
            "text": "Introduction to Programming for the Visual Arts with p5.js (Kadenze)",
            "title": "Courses"
        },
        {
            "location": "/dev/learning-p5js/#projects",
            "text": "TBD",
            "title": "Projects"
        },
        {
            "location": "/dev/learning-node/",
            "text": "This section contains resources for learning how to work with Node.js.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\nNode.js\n (\nNVM\n - A tool for managing multiple versions of Node.js)\n\n\nNPM\n - Node Package Manager (Installed with Node.js)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nNode.js v8.10.0 Documentation\n\n\n\n\nBooks\n\u00b6\n\n\n\n\n\n\n\nThe Node Beginner Book\n\n\nProfessional Node.js: Building Javascript Based Scalable Software by Pedro Teixera\n\n\n\n\nTutorials\n\u00b6\n\n\nNode.js Tutorials\n\u00b6\n\n\n\n\nNode.js Tutorial in VS Code\n\n\nNodeschool Workshopper List\n - These are cool\n\n\nNode.js Tutorial\n - By tutorialspoint\n\n\n\n\nnpm Tutorials\n\u00b6\n\n\n\n\nnpm Tutorial for Beginners\n - 2:30 mins\n\n\nnpm crash course 1\n - 24 mins\n\n\nnpm crash course 2\n - 42 mins\n\n\n\n\nIntermediate\n\u00b6\n\n\n\n\nNode Frameworks\n\n\nExpress\n\n\nPug.js\n\n\n\n\nTutorials\n\u00b6\n\n\nExpress Tutorials\n\u00b6\n\n\n\n\nExpress Tutorial\n - By tutorialspoint\n\n\n\n\nWebsocket Tutorials\n\u00b6\n\n\n\n\nWebsockets Tutorial\n - By tutorialspoint\n\n\n\n\nAdvanced\n\u00b6\n\n\n\n\n\n\nBuilding Command Line Applications\n\n\n\n\nCreating Your First Node.js Command-line Application\n\n\nCommander.js\n\n\n\n\n\n\n\n\nCreating Modules (aka npm Packages)\n\n\n\n\nCreating Public & Private Node Modules\n\n\nHow to Create Node.js Modules\n\n\n\n\n\n\n\n\nModules\n\n\n\n\nnodemon",
            "title": "Learning Node"
        },
        {
            "location": "/dev/learning-node/#beginner",
            "text": "Node.js  ( NVM  - A tool for managing multiple versions of Node.js)  NPM  - Node Package Manager (Installed with Node.js)",
            "title": "Beginner"
        },
        {
            "location": "/dev/learning-node/#documentation",
            "text": "Node.js v8.10.0 Documentation",
            "title": "Documentation"
        },
        {
            "location": "/dev/learning-node/#books",
            "text": "The Node Beginner Book  Professional Node.js: Building Javascript Based Scalable Software by Pedro Teixera",
            "title": "Books"
        },
        {
            "location": "/dev/learning-node/#tutorials",
            "text": "",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-node/#nodejs-tutorials",
            "text": "Node.js Tutorial in VS Code  Nodeschool Workshopper List  - These are cool  Node.js Tutorial  - By tutorialspoint",
            "title": "Node.js Tutorials"
        },
        {
            "location": "/dev/learning-node/#npm-tutorials",
            "text": "npm Tutorial for Beginners  - 2:30 mins  npm crash course 1  - 24 mins  npm crash course 2  - 42 mins",
            "title": "npm Tutorials"
        },
        {
            "location": "/dev/learning-node/#intermediate",
            "text": "Node Frameworks  Express  Pug.js",
            "title": "Intermediate"
        },
        {
            "location": "/dev/learning-node/#tutorials_1",
            "text": "",
            "title": "Tutorials"
        },
        {
            "location": "/dev/learning-node/#express-tutorials",
            "text": "Express Tutorial  - By tutorialspoint",
            "title": "Express Tutorials"
        },
        {
            "location": "/dev/learning-node/#websocket-tutorials",
            "text": "Websockets Tutorial  - By tutorialspoint",
            "title": "Websocket Tutorials"
        },
        {
            "location": "/dev/learning-node/#advanced",
            "text": "Building Command Line Applications   Creating Your First Node.js Command-line Application  Commander.js     Creating Modules (aka npm Packages)   Creating Public & Private Node Modules  How to Create Node.js Modules     Modules   nodemon",
            "title": "Advanced"
        },
        {
            "location": "/des/",
            "text": "Design + Code\n\u00b6\n\n\n\n\nLearn Design Code\n\n\n\n\nFlat File CMS\n\u00b6\n\n\n\n\nType and Grids\n\n\n\n\nWordpress Themes\n\u00b6\n\n\n\n\nColorlib Free Themes\n - The internet is full of themes. Just google \"best wordpress themes of 2017\" or something more specific to the kind of site you want to build. You will eventually land on something that works.\n\n\nAthemes\n\n\n\n\nHTML Themes\n\u00b6\n\n\n\n\nBootstrap\n, \nBootswatch\n, \nStart Bootstrap\n\n\nTheme Forest\n\n\nTemplated\n\n\n\n\nAdmin Panel Themes\n\u00b6\n\n\n\n\nBootstrap Admin Themes\n\n\n20 Free & Premium Bootstrap Admin Dashboard Templates\n\n\nTop 22 Free Responsive HTML5 Admin & Dashboard Templates 2017\n\n\n10 Beautifully Designed Free Bootstrap Dashboard Admin Templates\n\n\nMetronic\n\n\n\n\nDummy Text\n\u00b6\n\n\n\n\nlorem ipsum\n\n\nlorizzle\n\n\nDaftipsum\n\n\n\n\nTypography\n\u00b6\n\n\n\n\nThe Elements of Typographic Style Applied to the Web\n\n\n\n\nColor\n\u00b6\n\n\n\n\nCoolors\n - Color generator tool\n\n\ncolor-hex\n\n\nColourlovers",
            "title": "Design Tools"
        },
        {
            "location": "/des/#design-code",
            "text": "Learn Design Code",
            "title": "Design + Code"
        },
        {
            "location": "/des/#flat-file-cms",
            "text": "Type and Grids",
            "title": "Flat File CMS"
        },
        {
            "location": "/des/#wordpress-themes",
            "text": "Colorlib Free Themes  - The internet is full of themes. Just google \"best wordpress themes of 2017\" or something more specific to the kind of site you want to build. You will eventually land on something that works.  Athemes",
            "title": "Wordpress Themes"
        },
        {
            "location": "/des/#html-themes",
            "text": "Bootstrap ,  Bootswatch ,  Start Bootstrap  Theme Forest  Templated",
            "title": "HTML Themes"
        },
        {
            "location": "/des/#admin-panel-themes",
            "text": "Bootstrap Admin Themes  20 Free & Premium Bootstrap Admin Dashboard Templates  Top 22 Free Responsive HTML5 Admin & Dashboard Templates 2017  10 Beautifully Designed Free Bootstrap Dashboard Admin Templates  Metronic",
            "title": "Admin Panel Themes"
        },
        {
            "location": "/des/#dummy-text",
            "text": "lorem ipsum  lorizzle  Daftipsum",
            "title": "Dummy Text"
        },
        {
            "location": "/des/#typography",
            "text": "The Elements of Typographic Style Applied to the Web",
            "title": "Typography"
        },
        {
            "location": "/des/#color",
            "text": "Coolors  - Color generator tool  color-hex  Colourlovers",
            "title": "Color"
        },
        {
            "location": "/pc/",
            "text": "Parts and Supplies\n\u00b6\n\n\n\n\nSparkfun\n\n\nAdafruit\n\n\n\n\nMicrocontrollers\n\u00b6\n\n\nArduino\n\u00b6\n\n\n\n\nArduino\n, \nA Beginners Guide to Arduino\n\n\nArduino Uno\n\n\nArduino Language Reference\n\n\nSparkfun ESP32 Thing\n, \nESP32\n\n\nSparkfun ESP8266 Thing\n, \nESP8266\n\n\nNodeMCU (ESP8266)\n (\nAmazon\n), \nA Beginner's Guide to the ESP8266\n\n\nSparkfun Redboard\n\n\n\n\nRaspberry Pi\n\u00b6\n\n\n\n\nRaspberry Pi\n\n\n\n\nCAD\n\u00b6\n\n\n\n\nEagle\n\n\n\n\nMobile Devices\n\u00b6\n\n\n\n\nAndroid\n,",
            "title": "Tools"
        },
        {
            "location": "/pc/#parts-and-supplies",
            "text": "Sparkfun  Adafruit",
            "title": "Parts and Supplies"
        },
        {
            "location": "/pc/#microcontrollers",
            "text": "",
            "title": "Microcontrollers"
        },
        {
            "location": "/pc/#arduino",
            "text": "Arduino ,  A Beginners Guide to Arduino  Arduino Uno  Arduino Language Reference  Sparkfun ESP32 Thing ,  ESP32  Sparkfun ESP8266 Thing ,  ESP8266  NodeMCU (ESP8266)  ( Amazon ),  A Beginner's Guide to the ESP8266  Sparkfun Redboard",
            "title": "Arduino"
        },
        {
            "location": "/pc/#raspberry-pi",
            "text": "Raspberry Pi",
            "title": "Raspberry Pi"
        },
        {
            "location": "/pc/#cad",
            "text": "Eagle",
            "title": "CAD"
        },
        {
            "location": "/pc/#mobile-devices",
            "text": "Android ,",
            "title": "Mobile Devices"
        },
        {
            "location": "/pc/devices/",
            "text": "This section contains resources for learning how to work with Input and Output devices such as sensors and actuators.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\nSensors and Devices (Input / Output)\n\u00b6\n\n\n\n\nArduino Inputs\n - Great overview of Inputs, Sensors, and Applications\n\n\nArduino Outputs\n - Great overview of Outputs and Applications\n\n\nArduino Prototyping Techniques\n\n\n\n\nExamples\n\u00b6\n\n\n\n\nInput: \nKnobs (Potentiometers aka Variable Resistors)\n, \nButtons/Switches\n\n\nOutput: \nLight Emitting Diodes (LEDs)",
            "title": "Devices"
        },
        {
            "location": "/pc/devices/#beginner",
            "text": "",
            "title": "Beginner"
        },
        {
            "location": "/pc/devices/#sensors-and-devices-input-output",
            "text": "Arduino Inputs  - Great overview of Inputs, Sensors, and Applications  Arduino Outputs  - Great overview of Outputs and Applications  Arduino Prototyping Techniques",
            "title": "Sensors and Devices (Input / Output)"
        },
        {
            "location": "/pc/devices/#examples",
            "text": "Input:  Knobs (Potentiometers aka Variable Resistors) ,  Buttons/Switches  Output:  Light Emitting Diodes (LEDs)",
            "title": "Examples"
        },
        {
            "location": "/pc/learning-electronics/",
            "text": "This section contains resources for learning the basics of electronics and tools used for working with electronics.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\nBasic Electronics\n\u00b6\n\n\n\n\nWhat is \nElectricity\n?\n\n\nSparkfun - Where Do I Start?\n\n\nVoltage, Current, Power\n\n\nAnalog vs Digital\n\n\nADCs and DACs\n\n\nSeries and Parallel Circuits\n\n\n\n\nTools for Prototyping\n\u00b6\n\n\n\n\nMultimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins.\n\n\nHow to use a multimeter\n\n\n\n\n\n\nSoldering\n\n\nSoldering Tutorial for Beginners: Five Easy Steps (Video)\n\n\nHow to Solder (Instructables)\n\n\n\n\n\n\nWires\n\n\nWorking with wire\n\n\nHow to Strip a wire\n\n\n\n\n\n\nBreadboards",
            "title": "Learning Electronics"
        },
        {
            "location": "/pc/learning-electronics/#beginner",
            "text": "",
            "title": "Beginner"
        },
        {
            "location": "/pc/learning-electronics/#basic-electronics",
            "text": "What is  Electricity ?  Sparkfun - Where Do I Start?  Voltage, Current, Power  Analog vs Digital  ADCs and DACs  Series and Parallel Circuits",
            "title": "Basic Electronics"
        },
        {
            "location": "/pc/learning-electronics/#tools-for-prototyping",
            "text": "Multimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins.  How to use a multimeter    Soldering  Soldering Tutorial for Beginners: Five Easy Steps (Video)  How to Solder (Instructables)    Wires  Working with wire  How to Strip a wire    Breadboards",
            "title": "Tools for Prototyping"
        },
        {
            "location": "/pc/learning-rpi/",
            "text": "This section contains resources for learning how to work with Raspberry Pi's.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\nRaspberry Pi Foundation\n\n\nRaspberry Pi Downloads\n\n\nRaspberry Pi Help\n\n\nRaspberry Pi Setup",
            "title": "Learning Raspberry Pi"
        },
        {
            "location": "/pc/learning-rpi/#beginner",
            "text": "Raspberry Pi Foundation  Raspberry Pi Downloads  Raspberry Pi Help  Raspberry Pi Setup",
            "title": "Beginner"
        },
        {
            "location": "/pc/learning-arduino/",
            "text": "This section contains resources for learning how to work with Arduino microcontrollers.\n\n\nNote this is a living document and is constantly being updated. Some things may come and go over time.\n\n\nBeginner\n\u00b6\n\n\n\n\nArduino - What IS it?\n - Great overview of Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)\n\n\nWhat is an Arduino?\n   \n\n\nMassimo Banzi: How Arduino is open-sourcing imagination (TED Talk)\n\n\nArduino IDE\n\n\nArduino Language Reference\n\n\nArduino Hardware\n\n\nArduino Uno Specs\n    \n\n\nArduino 101        \n\n\nSerial Monitor (for monitoring board input and output) - Tools > Serial Monitor\n\n\nThere are many different shapes and sizes of Arduino's available, how do you choose hardware for a project?\n\n\nInputs (Sensors) -> Software (Behavior) -> Outputs (Action)\n\n\n\n\n\n\n\n\nArduino Boards\n\u00b6\n\n\nArduino UNO\n\u00b6\n\n\n\n\nSparkfun Arduino Uno\n\n\nAdafruit Arduino Uno\n\n\n\n\nSparkfun\n\u00b6\n\n\n\n\nArduino Boards\n\n\nArduino Tutorials\n\n\nArduino Buying Guide\n\n\nArduino Products\n\n\n\n\nAdafruit\n\u00b6\n\n\n\n\nAdafruit Arduino Products\n\n\nAdafruit Arduino Learning System\n\n\n\n\nBuilt In Examples\n\u00b6\n\n\n\n\nBuilt In Examples\n\n\nBlink\n - Uses a LED\n\n\nAnalogReadSerial\n - Uses a Knob\n\n\nAnalogInOutSerial\n - Uses a Knob and a LED through \nPulse Width Modulation (PWM)\n    \n\n\n\n\nProjects\n\u00b6\n\n\n\n\nInstructables\n\n\n20 Unbelievable Arduino Projects\n\n\nArduino Playground\n\n\n20 Projects to Celebrate Arduino Day\n\n\nHackster.io Arduino Projects\n\n\nDIY Hacking Arduino\n\n\nArduino Projects on Pintrest\n\n\nArduino Project Hub\n\n\n\n\nTutorials\n\u00b6\n\n\nTBD",
            "title": "Learning Arduino"
        },
        {
            "location": "/pc/learning-arduino/#beginner",
            "text": "Arduino - What IS it?  - Great overview of Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)  What is an Arduino?      Massimo Banzi: How Arduino is open-sourcing imagination (TED Talk)  Arduino IDE  Arduino Language Reference  Arduino Hardware  Arduino Uno Specs       Arduino 101          Serial Monitor (for monitoring board input and output) - Tools > Serial Monitor  There are many different shapes and sizes of Arduino's available, how do you choose hardware for a project?  Inputs (Sensors) -> Software (Behavior) -> Outputs (Action)",
            "title": "Beginner"
        },
        {
            "location": "/pc/learning-arduino/#arduino-boards",
            "text": "",
            "title": "Arduino Boards"
        },
        {
            "location": "/pc/learning-arduino/#arduino-uno",
            "text": "Sparkfun Arduino Uno  Adafruit Arduino Uno",
            "title": "Arduino UNO"
        },
        {
            "location": "/pc/learning-arduino/#sparkfun",
            "text": "Arduino Boards  Arduino Tutorials  Arduino Buying Guide  Arduino Products",
            "title": "Sparkfun"
        },
        {
            "location": "/pc/learning-arduino/#adafruit",
            "text": "Adafruit Arduino Products  Adafruit Arduino Learning System",
            "title": "Adafruit"
        },
        {
            "location": "/pc/learning-arduino/#built-in-examples",
            "text": "Built In Examples  Blink  - Uses a LED  AnalogReadSerial  - Uses a Knob  AnalogInOutSerial  - Uses a Knob and a LED through  Pulse Width Modulation (PWM)",
            "title": "Built In Examples"
        },
        {
            "location": "/pc/learning-arduino/#projects",
            "text": "Instructables  20 Unbelievable Arduino Projects  Arduino Playground  20 Projects to Celebrate Arduino Day  Hackster.io Arduino Projects  DIY Hacking Arduino  Arduino Projects on Pintrest  Arduino Project Hub",
            "title": "Projects"
        },
        {
            "location": "/pc/learning-arduino/#tutorials",
            "text": "TBD",
            "title": "Tutorials"
        },
        {
            "location": "/fab/",
            "text": "Reality Capture\n\u00b6\n\n\n\n\nStructure Sensor 3D Scanner\n\n\nAutodesk Remake\n\n\n\n\nMesh Tools\n\u00b6\n\n\n\n\nMeshlab\n\n\nMeshmixer\n\n\nNetfabb\n\n\n\n\n3D File Viewing\n\u00b6\n\n\n\n\nSketchfab\n\n\n\n\n3D File Sharing\n\u00b6\n\n\n\n\nThingiverse\n\n\nPinshape\n\n\n\n\nAdditive(+)\n\u00b6\n\n\n3D Printing\n\u00b6\n\n\n\n\nUltimaker 3D Printer\n, \nCura (Slicer)\n\n\n\n\n3D Printing Services\n\u00b6\n\n\n\n\nShapeways\n\n\nSculpteo\n\n\ni.materialise\n\n\n3D Hubs\n\n\nFictiv\n\n\nPonoko\n\n\nVoodoo Manufacturing\n\n\n\n\nSubtractive(-)\n\u00b6\n\n\n\n\n\nCNC Milling\n\u00b6\n\n\n\n\nBantam Desktop CNC Mill\n - Formerly Othermill\n\n\nBantam Software\n - Formerly Otherplan\n\n\n\n\nCNC Milling Services\n\u00b6\n\n\nTBD",
            "title": "Fabrication Tools"
        },
        {
            "location": "/fab/#reality-capture",
            "text": "Structure Sensor 3D Scanner  Autodesk Remake",
            "title": "Reality Capture"
        },
        {
            "location": "/fab/#mesh-tools",
            "text": "Meshlab  Meshmixer  Netfabb",
            "title": "Mesh Tools"
        },
        {
            "location": "/fab/#3d-file-viewing",
            "text": "Sketchfab",
            "title": "3D File Viewing"
        },
        {
            "location": "/fab/#3d-file-sharing",
            "text": "Thingiverse  Pinshape",
            "title": "3D File Sharing"
        },
        {
            "location": "/fab/#additive",
            "text": "",
            "title": "Additive(+)"
        },
        {
            "location": "/fab/#3d-printing",
            "text": "Ultimaker 3D Printer ,  Cura (Slicer)",
            "title": "3D Printing"
        },
        {
            "location": "/fab/#3d-printing-services",
            "text": "Shapeways  Sculpteo  i.materialise  3D Hubs  Fictiv  Ponoko  Voodoo Manufacturing",
            "title": "3D Printing Services"
        },
        {
            "location": "/fab/#subtractive-",
            "text": "",
            "title": "Subtractive(-)"
        },
        {
            "location": "/fab/#cnc-milling",
            "text": "Bantam Desktop CNC Mill  - Formerly Othermill  Bantam Software  - Formerly Otherplan",
            "title": "CNC Milling"
        },
        {
            "location": "/fab/#cnc-milling-services",
            "text": "TBD",
            "title": "CNC Milling Services"
        },
        {
            "location": "/cc/",
            "text": "IDEs and Applications\n\u00b6\n\n\n\n\nProcessing\n\n\nOpenFrameworks\n\n\nCinder\n\n\nMax/MSP/Jitter\n\n\nvvvv\n\n\nStructure Synth\n\n\nOpenSCAD\n\n\nContext Free\n\n\n\n\nWeb Based\n\u00b6\n\n\n\n\nWebGL\n, \nDoes my browser support WebGL?\n, \nWebGL Report\n\n\nthree.js\n, \nLearning Three.js\n\n\nD3.js\n\n\np5.js\n, \np5.js web editor\n, \nA free-to-use classrooms system for p5.js\n\n\nCreateJS\n\n\nChartJS\n\n\nWebVR\n\n\nPaper.js\n\n\nPlanck.js\n\n\n\n\nGLSL\n\u00b6\n\n\nSandboxes\n\u00b6\n\n\n\n\nShadertoy\n\n\nGLSL Sandbox\n\n\nglslb.in\n\n\n\n\nBasics\n\u00b6\n\n\n\n\nThe Book of Shaders\n, \nTBoS Editor\n\n\nPixel Shaders\n\n\nShadershop\n\n\nstackgl\n - Open Source Software Ecosystem for WebGL.\n\n\nShader School\n - Based on stackgl. Start here.\n\n\nWebGL Workshop\n - Based on stackgl. The sequel to shader-school: Learn the WebGL API\n\n\n\n\nVR / AR / MR\n\u00b6\n\n\n\n\nDaydream\n\n\nUnity\n\n\nUnreal\n\n\nHTC Vive\n\n\nOculus Rift\n\n\nHologram\n\n\n\n\nPhysics / Motion\n\u00b6\n\n\n\n\nPhysics Simulations\n\n\nUX In Motion",
            "title": "Creative Coding"
        },
        {
            "location": "/cc/#ides-and-applications",
            "text": "Processing  OpenFrameworks  Cinder  Max/MSP/Jitter  vvvv  Structure Synth  OpenSCAD  Context Free",
            "title": "IDEs and Applications"
        },
        {
            "location": "/cc/#web-based",
            "text": "WebGL ,  Does my browser support WebGL? ,  WebGL Report  three.js ,  Learning Three.js  D3.js  p5.js ,  p5.js web editor ,  A free-to-use classrooms system for p5.js  CreateJS  ChartJS  WebVR  Paper.js  Planck.js",
            "title": "Web Based"
        },
        {
            "location": "/cc/#glsl",
            "text": "",
            "title": "GLSL"
        },
        {
            "location": "/cc/#sandboxes",
            "text": "Shadertoy  GLSL Sandbox  glslb.in",
            "title": "Sandboxes"
        },
        {
            "location": "/cc/#basics",
            "text": "The Book of Shaders ,  TBoS Editor  Pixel Shaders  Shadershop  stackgl  - Open Source Software Ecosystem for WebGL.  Shader School  - Based on stackgl. Start here.  WebGL Workshop  - Based on stackgl. The sequel to shader-school: Learn the WebGL API",
            "title": "Basics"
        },
        {
            "location": "/cc/#vr-ar-mr",
            "text": "Daydream  Unity  Unreal  HTC Vive  Oculus Rift  Hologram",
            "title": "VR / AR / MR"
        },
        {
            "location": "/cc/#physics-motion",
            "text": "Physics Simulations  UX In Motion",
            "title": "Physics / Motion"
        },
        {
            "location": "/vr/",
            "text": "Laptops\n\u00b6\n\n\nPlease review the \nlaptop\n policy before using them.\n\n\nVR Equipment\n\u00b6\n\n\nHTC Vive\n\u00b6\n\n\n\n\nVive\n\n\nVive Developer\n\n\nVive Wave\n - Developer Portal for China\n\n\n\n\nOculus\n\u00b6\n\n\nStay tuned...\n\n\n\n\n\nhttps://srushtiimx.com/blog/the-virtual-worlds-you-didnt-know-early-history-of-3d-virtual-worlds/",
            "title": "VR Equipment"
        },
        {
            "location": "/vr/#laptops",
            "text": "Please review the  laptop  policy before using them.",
            "title": "Laptops"
        },
        {
            "location": "/vr/#vr-equipment",
            "text": "",
            "title": "VR Equipment"
        },
        {
            "location": "/vr/#htc-vive",
            "text": "Vive  Vive Developer  Vive Wave  - Developer Portal for China",
            "title": "HTC Vive"
        },
        {
            "location": "/vr/#oculus",
            "text": "Stay tuned...   https://srushtiimx.com/blog/the-virtual-worlds-you-didnt-know-early-history-of-3d-virtual-worlds/",
            "title": "Oculus"
        },
        {
            "location": "/laptops/",
            "text": "Usage Policy\n\u00b6\n\n\nThe Critical Making Studio has \nRazer Blade (14\")\n laptops for use with advanced graphics and media applications such as VR, 3d modeling, and programming.\n\n\n\n\nThe laptops are to remain at the studio at all times. No exceptions.\n\n\nPersonal files should be backed up using USB drives and/or a cloud based service such as Dropbox or Google Drive. Do not expect your files to be available on any one laptop the next time you use it.\n\n\nPlease report any technical issues to RJ asap.\n\n\n\n\nLogin\n\u00b6\n\n\nThe laptops are setup to be identical with following user account and installed software.\n\n\nAccount: Student\n\n\nPassword: student\n\n\nSoftware\n\u00b6\n\n\n\n\nRhino 5\n + \nGrasshopper\n\n\nFusion 360\n\n\nUnity 5.6.4\n\n\nUnity 2017.2.1\n\n\nUnity 2017.3.0\n\n\nSteam\n\n\nSteamVR\n\n\nMaya 2018\n\n\nAdobe Illustrator\n\n\nAdobe Photoshop\n\n\nBlender\n\n\nMeshmixer\n\n\nGoogle Chrome\n\n\nFirefox\n\n\nVisual Studio 2017 Community\n\n\nUltimaker Cura\n\n\nScreencast-O-Matic\n\n\nNotepad++\n\n\nMeshlab\n\n\nDAZ 3D",
            "title": "Laptops"
        },
        {
            "location": "/laptops/#usage-policy",
            "text": "The Critical Making Studio has  Razer Blade (14\")  laptops for use with advanced graphics and media applications such as VR, 3d modeling, and programming.   The laptops are to remain at the studio at all times. No exceptions.  Personal files should be backed up using USB drives and/or a cloud based service such as Dropbox or Google Drive. Do not expect your files to be available on any one laptop the next time you use it.  Please report any technical issues to RJ asap.",
            "title": "Usage Policy"
        },
        {
            "location": "/laptops/#login",
            "text": "The laptops are setup to be identical with following user account and installed software.  Account: Student  Password: student",
            "title": "Login"
        },
        {
            "location": "/laptops/#software",
            "text": "Rhino 5  +  Grasshopper  Fusion 360  Unity 5.6.4  Unity 2017.2.1  Unity 2017.3.0  Steam  SteamVR  Maya 2018  Adobe Illustrator  Adobe Photoshop  Blender  Meshmixer  Google Chrome  Firefox  Visual Studio 2017 Community  Ultimaker Cura  Screencast-O-Matic  Notepad++  Meshlab  DAZ 3D",
            "title": "Software"
        },
        {
            "location": "/server/",
            "text": "The Critical Making Studio has a local network shared folder for transferring large projects between computers. To access it you must be on the STUDIO-2.4 or STUDIO-5 network. Follow the instructions below to connect to the shared folder.\n\n\nServer Use\n\u00b6\n\n\n\n\nMake sure you keep backups of your projects on your local machines in case the server is ever down or someone deletes a folder.\n\n\nBe aware that once you delete a folder from the server its gone forever.\n\n\nYou may make any folders you want or use any of the folders with your name.\n\n\n\n\nLocal Access\n\u00b6\n\n\nOn MacOS:\n\u00b6\n\n\n\n\nGo > Connect to Server (CMD + K)\n\n\nEnter: \nsmb://CMCI_STUDIO/cm_share\n\n\nClick Connect\n\n\nEnter Username and Password when prompted.\n\n\nThe shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"CMCI_STUDIO\" server with \"cm_share\" available.  \n\n\n\n\nOn Windows:\n\u00b6\n\n\n\n\nOpen Windows Explorer and choose Tools > Map Network Drive. Choose a drive number from the Drive drop-down menu.\n\n\nEnter: \n\\\\CMCI_STUDIO\\cm_share\n\n\nClick Finish\n\n\nEnter Username and Password when prompted.\n\n\nThe shared folder should appear in the Windows Explorer as a network drive.\n\n\n\n\nRemote Access\n\u00b6\n\n\nOn MacOS:\n\u00b6\n\n\n\n\nGo > Connect to Server (CMD + K)\n\n\nEnter: \nhttps://cmcistudio.synology.me:5006\n\n\nClick Connect\n\n\nEnter Username and Password when prompted.\n\n\nThe shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"cmcistudio.synology.me:5006\" server with \u201ccm_share\u201d available.",
            "title": "Server Access"
        },
        {
            "location": "/server/#server-use",
            "text": "Make sure you keep backups of your projects on your local machines in case the server is ever down or someone deletes a folder.  Be aware that once you delete a folder from the server its gone forever.  You may make any folders you want or use any of the folders with your name.",
            "title": "Server Use"
        },
        {
            "location": "/server/#local-access",
            "text": "",
            "title": "Local Access"
        },
        {
            "location": "/server/#on-macos",
            "text": "Go > Connect to Server (CMD + K)  Enter:  smb://CMCI_STUDIO/cm_share  Click Connect  Enter Username and Password when prompted.  The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"CMCI_STUDIO\" server with \"cm_share\" available.",
            "title": "On MacOS:"
        },
        {
            "location": "/server/#on-windows",
            "text": "Open Windows Explorer and choose Tools > Map Network Drive. Choose a drive number from the Drive drop-down menu.  Enter:  \\\\CMCI_STUDIO\\cm_share  Click Finish  Enter Username and Password when prompted.  The shared folder should appear in the Windows Explorer as a network drive.",
            "title": "On Windows:"
        },
        {
            "location": "/server/#remote-access",
            "text": "",
            "title": "Remote Access"
        },
        {
            "location": "/server/#on-macos_1",
            "text": "Go > Connect to Server (CMD + K)  Enter:  https://cmcistudio.synology.me:5006  Click Connect  Enter Username and Password when prompted.  The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"cmcistudio.synology.me:5006\" server with \u201ccm_share\u201d available.",
            "title": "On MacOS:"
        },
        {
            "location": "/links/",
            "text": "CM3 & CM4\n\u00b6\n\n\nThis page contains a listing of the many things that come up in our class discussions.\n\n\nTBD\n\n\n\n\nCM1 & CM2\n\u00b6\n\n\nWeek 1\n\u00b6\n\n\n\n\nCreative Applications\n\n\nNervous System Studio - Cell Cycle\n\n\nVacuum Forming @ Pratt\n\n\nOctobot\n, \nVideo\n\n\nAmazon Echo / Alexa\n\n\nVicarious\n\n\nHomo Deus: A Brief History of Tomorrow\n\n\nEverything\n, \nSteam\n, \nAlan Watts\n\n\nAutodesk products\n\n\nCinema4D\n\n\nAsh Thorp\n\n\nOculus\n\n\nHTC Vive\n\n\nEO Wilson\n - \"We have Palaeolithic emotions, medieval institutions and God-like technologies\"\n\n\nChrome Extensions: \nSession Buddy\n, \nDark Reader\n\n\nRhino + Grasshopper\n\n\nstanford bunny\n\n\nblood jewellery\n\n\nthree.js\n, \nLearning Three.js\n\n\nprocessing.org\n\n\nMeshlab\n - For looking at mesh 3D models (STL)\n\n\n\n\nWeek 2\n\u00b6\n\n\n\n\nMeow Wolf\n\n\nStudio Olafur Eliasson\n\n\nJames Turrell\n\n\nBon Iver - Live @ Public Works\n\n\nTeenage Engineering\n\n\nHardware UX\n\n\nROLI Blocks (Musical Interface/Controller)\n\n\nCreative Commons\n\n\nAutodesk Pier 9 - Artist Residency Program\n, \nProjects\n\n\nLynda.com\n - (\nFree for students through OIT\n)\n\n\nCode Academy\n\n\nInstructables\n\n\nHackaday\n\n\nBLDG61 (Boulder Library Makerspace)\n\n\nTinkermill\n\n\nGizmodojo\n\n\nHow to build your creative confidence - David Kelley @ TED 2012\n\n\nThe power of vulnerability - Brene Brown (June 2010 at TEDxHouston)\n\n\n\n\nWeek 3\n\u00b6\n\n\n\n\nAdobe Muse\n\n\nAdobe Felix\n\n\nOctane Renderer\n\n\nThingiverse\n\n\nMiracle Berries\n - They make sour things sweet!\n\n\nZach Lieberman - Visualizing Sound with AR Project\n, \nZach Lieberman Instagram\n\n\nSchool for Poetic Computation\n\n\nOpen Frameworks\n - Creative coding framework similar to Processing. Steeper learning curve. Uses C++ language.\n\n\np5.js\n\n\nApple bets the future of AR will be on your phone\n\n\nGoogle ARCore\n\n\nZorg Gun Scene from Fifth Element\n - We started talking about 3d printed guns.\n\n\nCody Wilson\n - Printed the first 3d printed gun on a makerbot\n\n\nPrint the Legend\n  - A film covering the rise of Makerbot, \nFormlabs\n, and desktop 3d printing. Available on Netflix.\n\n\nReynolds Advanced Materials\n\n\nMaterial ConneXion Library Tour (Video)\n\n\nGitlab\n - Open source Git repo tool similar to Github\n\n\nHUDS+GUIS\n - Future UI's\n\n\nGattaca (Film)\n\n\nVan der Waals Force\n\n\nMeta (AR HMD)\n\n\nMagic Leap\n\n\nBret Victor - The Humane Representation of Thought\n, \nVimeo\n\n\nWestworld\n\n\nDillinger (Markdown to HTML)\n\n\nBootstrap\n\n\nRichard Feynman - The Pleasure of Finding Things Out (BBC Documentary)\n\n\n\n\nWeek 4\n\u00b6\n\n\nUX Strat Conference\n\n\nWeek 5\n\u00b6\n\n\n\n\nf.lashes - Fun, Interactive, LED Lashes!\n\n\nPICO: The worlds smallest Arduino compatible board!\n\n\nTinyDuino\n\n\nAlphaSphere\n\n\nPulse Sensor\n\n\nTiny Circuits\n\n\n\"All Arduino Boards\" Google Search\n\n\nSparkfun - Power - Battery Options\n\n\nAmazon Prime Now\n\n\nAmazon Giant Biospheres\n\n\nBiometric Sensors\n\n\nEmotive Epoc\n\n\nMyo Wearable Armband\n\n\nElectricity\n\n\nPulse Width Modulation (PWM)\n\n\nVoltage, Current, \nResistance\n and \nOhms Law\n\n\nLight Emitting Diodes (LEDs)\n\n\nBreadboards\n\n\nEgg Night Light\n\n\n\n\nWeek 6\n\u00b6\n\n\n\n\nArduino + Temboo\n\n\nSphero Mini\n\n\nBoulder JS Meetup\n\n\n\n\nWeek 7\n\u00b6\n\n\n\n\nUltimaker Materials\n\n\nPLA Filament\n\n\nDigital Factory\n\n\nMechanical Drawings (Datasheets)\n\n\nFirefly (Arduino + Grasshopper)\n\n\nThe Future of Making Things: Generative Design - Jeff Kowalski\n\n\nNature of Code\n\n\n\n\nWeek 8\n\u00b6\n\n\n\n\nMicroscape\n\n\nElon's Robots\n\n\nHow the Tesla Model S is Made\n\n\nNew Balance 3D Printed Shoes\n\n\n\n\nWeek 9\n\u00b6\n\n\n\n\nJoris Laarman Chairs\n\n\nArup 3D Printed Structural Steel\n\n\nAutodesk Generative Design\n\n\nbone microscope images\n\n\nNeal Feay cnc milled surfaces\n\n\nGRABCAD\n\n\nMcMaster Carr\n\n\nSkulls vector graphic\n\n\nCNC End mill types\n\n\n\n\nWeek 11\n\u00b6\n\n\n\n\nAlexa Skills: Kids\n\n\nAmazon Alexa Skills Challenge: Kids",
            "title": "Links"
        },
        {
            "location": "/links/#cm3-cm4",
            "text": "This page contains a listing of the many things that come up in our class discussions.  TBD",
            "title": "CM3 &amp; CM4"
        },
        {
            "location": "/links/#cm1-cm2",
            "text": "",
            "title": "CM1 &amp; CM2"
        },
        {
            "location": "/links/#week-1",
            "text": "Creative Applications  Nervous System Studio - Cell Cycle  Vacuum Forming @ Pratt  Octobot ,  Video  Amazon Echo / Alexa  Vicarious  Homo Deus: A Brief History of Tomorrow  Everything ,  Steam ,  Alan Watts  Autodesk products  Cinema4D  Ash Thorp  Oculus  HTC Vive  EO Wilson  - \"We have Palaeolithic emotions, medieval institutions and God-like technologies\"  Chrome Extensions:  Session Buddy ,  Dark Reader  Rhino + Grasshopper  stanford bunny  blood jewellery  three.js ,  Learning Three.js  processing.org  Meshlab  - For looking at mesh 3D models (STL)",
            "title": "Week 1"
        },
        {
            "location": "/links/#week-2",
            "text": "Meow Wolf  Studio Olafur Eliasson  James Turrell  Bon Iver - Live @ Public Works  Teenage Engineering  Hardware UX  ROLI Blocks (Musical Interface/Controller)  Creative Commons  Autodesk Pier 9 - Artist Residency Program ,  Projects  Lynda.com  - ( Free for students through OIT )  Code Academy  Instructables  Hackaday  BLDG61 (Boulder Library Makerspace)  Tinkermill  Gizmodojo  How to build your creative confidence - David Kelley @ TED 2012  The power of vulnerability - Brene Brown (June 2010 at TEDxHouston)",
            "title": "Week 2"
        },
        {
            "location": "/links/#week-3",
            "text": "Adobe Muse  Adobe Felix  Octane Renderer  Thingiverse  Miracle Berries  - They make sour things sweet!  Zach Lieberman - Visualizing Sound with AR Project ,  Zach Lieberman Instagram  School for Poetic Computation  Open Frameworks  - Creative coding framework similar to Processing. Steeper learning curve. Uses C++ language.  p5.js  Apple bets the future of AR will be on your phone  Google ARCore  Zorg Gun Scene from Fifth Element  - We started talking about 3d printed guns.  Cody Wilson  - Printed the first 3d printed gun on a makerbot  Print the Legend   - A film covering the rise of Makerbot,  Formlabs , and desktop 3d printing. Available on Netflix.  Reynolds Advanced Materials  Material ConneXion Library Tour (Video)  Gitlab  - Open source Git repo tool similar to Github  HUDS+GUIS  - Future UI's  Gattaca (Film)  Van der Waals Force  Meta (AR HMD)  Magic Leap  Bret Victor - The Humane Representation of Thought ,  Vimeo  Westworld  Dillinger (Markdown to HTML)  Bootstrap  Richard Feynman - The Pleasure of Finding Things Out (BBC Documentary)",
            "title": "Week 3"
        },
        {
            "location": "/links/#week-4",
            "text": "UX Strat Conference",
            "title": "Week 4"
        },
        {
            "location": "/links/#week-5",
            "text": "f.lashes - Fun, Interactive, LED Lashes!  PICO: The worlds smallest Arduino compatible board!  TinyDuino  AlphaSphere  Pulse Sensor  Tiny Circuits  \"All Arduino Boards\" Google Search  Sparkfun - Power - Battery Options  Amazon Prime Now  Amazon Giant Biospheres  Biometric Sensors  Emotive Epoc  Myo Wearable Armband  Electricity  Pulse Width Modulation (PWM)  Voltage, Current,  Resistance  and  Ohms Law  Light Emitting Diodes (LEDs)  Breadboards  Egg Night Light",
            "title": "Week 5"
        },
        {
            "location": "/links/#week-6",
            "text": "Arduino + Temboo  Sphero Mini  Boulder JS Meetup",
            "title": "Week 6"
        },
        {
            "location": "/links/#week-7",
            "text": "Ultimaker Materials  PLA Filament  Digital Factory  Mechanical Drawings (Datasheets)  Firefly (Arduino + Grasshopper)  The Future of Making Things: Generative Design - Jeff Kowalski  Nature of Code",
            "title": "Week 7"
        },
        {
            "location": "/links/#week-8",
            "text": "Microscape  Elon's Robots  How the Tesla Model S is Made  New Balance 3D Printed Shoes",
            "title": "Week 8"
        },
        {
            "location": "/links/#week-9",
            "text": "Joris Laarman Chairs  Arup 3D Printed Structural Steel  Autodesk Generative Design  bone microscope images  Neal Feay cnc milled surfaces  GRABCAD  McMaster Carr  Skulls vector graphic  CNC End mill types",
            "title": "Week 9"
        },
        {
            "location": "/links/#week-11",
            "text": "Alexa Skills: Kids  Amazon Alexa Skills Challenge: Kids",
            "title": "Week 11"
        },
        {
            "location": "/books/",
            "text": "Local Libraries\n\u00b6\n\n\n\n\nCU Boulder Library Catalog (Chinook)\n\n\nBoulder Public Library\n\n\n\n\nTechnical Publishers\n\u00b6\n\n\n\n\nAwesome Book Authoring\n\n\nPackt Publishing\n, \nFree Tech Ebook of the Day\n\n\nO'Reilly\n\n\nSafari\n\n\nApress\n\n\nThe Pragmatic Bookshelf\n\n\n\n\nElectronics\n\u00b6\n\n\n\n\nEncyclopedia of Electronic Components Volume 1: Resistors, Capacitors, Inductors, Switches, Encoders, Relays, Transistors\n\n\nEncyclopedia of Electronic Components Volume 2: LEDs, LCDs, Audio, Thyristors, Digital Logic, and Amplification\n\n\nEncyclopedia of Electronic Components Volume 3: Sensors for Location, Presence, Proximity, Orientation, Oscillation, Force, Load, Human Input, Liquid ... Light, Heat, Sound, and Electricity\n\n\n\n\nCreative Coding\n\u00b6\n\n\n\n\nProcessing: A Programming Handbook for Visual Designers and Artists\n\n\nGenerative Design: Visualize, Program, and Create with Processing\n - (\nWebsite\n, \nCode\n)\n\n\nThe Nature of Code: Simulating Natural Systems with Processing\n - (\nFree Version\n)\n\n\nThe Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation\n\n\n\n\nIndustrial Design\n\u00b6\n\n\n\n\nThe Industrial Design Reference & Specification Book: Everything Industrial Designers Need to Know\n\n\nThe Design of Everyday Things: Revised and Expanded Edition\n\n\nMaking It: Manufacturing Techniques for Product Design\n\n\nStuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World\n\n\nThe Industrial Design Reader\n\n\n\n\nGraphic Design\n\u00b6\n\n\n\n\nGraphic Design: The New Basics: Second Edition, Revised and Expanded\n\n\n\n\n3D Printing\n\u00b6\n\n\n\n\nPrinting Things: Visions and Essentials for 3D Printing\n\n\nVisualizing Mathematics with 3D Printing\n\n\n\n\nMaterials\n\u00b6\n\n\n\n\nStuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World\n\n\nMaterials for Design\n\n\nMaterials and Design, Third Edition: The Art and Science of Material Selection in Product Design\n\n\nTransmaterial: A Catalog of Materials That Redefine our Physical Environment\n\n\n\n\nManufacturing\n\u00b6\n\n\n\n\nManufacturing Processes for Design Professionals\n\n\nFundamentals of Modern Manufacturing: Materials, Processes, and Systems\n\n\n\n\nMedia Arts\n\u00b6\n\n\n\n\nThe New Media Reader\n\n\nForm+Code in Design, Art, and Architecture",
            "title": "Books"
        },
        {
            "location": "/books/#local-libraries",
            "text": "CU Boulder Library Catalog (Chinook)  Boulder Public Library",
            "title": "Local Libraries"
        },
        {
            "location": "/books/#technical-publishers",
            "text": "Awesome Book Authoring  Packt Publishing ,  Free Tech Ebook of the Day  O'Reilly  Safari  Apress  The Pragmatic Bookshelf",
            "title": "Technical Publishers"
        },
        {
            "location": "/books/#electronics",
            "text": "Encyclopedia of Electronic Components Volume 1: Resistors, Capacitors, Inductors, Switches, Encoders, Relays, Transistors  Encyclopedia of Electronic Components Volume 2: LEDs, LCDs, Audio, Thyristors, Digital Logic, and Amplification  Encyclopedia of Electronic Components Volume 3: Sensors for Location, Presence, Proximity, Orientation, Oscillation, Force, Load, Human Input, Liquid ... Light, Heat, Sound, and Electricity",
            "title": "Electronics"
        },
        {
            "location": "/books/#creative-coding",
            "text": "Processing: A Programming Handbook for Visual Designers and Artists  Generative Design: Visualize, Program, and Create with Processing  - ( Website ,  Code )  The Nature of Code: Simulating Natural Systems with Processing  - ( Free Version )  The Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation",
            "title": "Creative Coding"
        },
        {
            "location": "/books/#industrial-design",
            "text": "The Industrial Design Reference & Specification Book: Everything Industrial Designers Need to Know  The Design of Everyday Things: Revised and Expanded Edition  Making It: Manufacturing Techniques for Product Design  Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World  The Industrial Design Reader",
            "title": "Industrial Design"
        },
        {
            "location": "/books/#graphic-design",
            "text": "Graphic Design: The New Basics: Second Edition, Revised and Expanded",
            "title": "Graphic Design"
        },
        {
            "location": "/books/#3d-printing",
            "text": "Printing Things: Visions and Essentials for 3D Printing  Visualizing Mathematics with 3D Printing",
            "title": "3D Printing"
        },
        {
            "location": "/books/#materials",
            "text": "Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World  Materials for Design  Materials and Design, Third Edition: The Art and Science of Material Selection in Product Design  Transmaterial: A Catalog of Materials That Redefine our Physical Environment",
            "title": "Materials"
        },
        {
            "location": "/books/#manufacturing",
            "text": "Manufacturing Processes for Design Professionals  Fundamentals of Modern Manufacturing: Materials, Processes, and Systems",
            "title": "Manufacturing"
        },
        {
            "location": "/books/#media-arts",
            "text": "The New Media Reader  Form+Code in Design, Art, and Architecture",
            "title": "Media Arts"
        },
        {
            "location": "/awesome/",
            "text": "Awesome Things\n\u00b6\n\n\n\n\nA list of awesome lists\n\n\nbuild your own X",
            "title": "Awesome"
        },
        {
            "location": "/awesome/#awesome-things",
            "text": "A list of awesome lists  build your own X",
            "title": "Awesome Things"
        }
    ]
}